/*! For license information please see main.js.LICENSE.txt */
(()=>{var t={7758:(t,n,e)=>{function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function s(){"use strict";s=function(){return n};var t,n={},e=Object.prototype,r=e.hasOwnProperty,a=Object.defineProperty||function(t,n,e){t[n]=e.value},o="function"==typeof Symbol?Symbol:{},u=o.iterator||"@@iterator",l=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag";function h(t,n,e){return Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}),t[n]}try{h({},"")}catch(t){h=function(t,n,e){return t[n]=e}}function g(t,n,e,i){var s=n&&n.prototype instanceof b?n:b,r=Object.create(s.prototype),o=new j(i||[]);return a(r,"_invoke",{value:S(t,e,o)}),r}function d(t,n,e){try{return{type:"normal",arg:t.call(n,e)}}catch(t){return{type:"throw",arg:t}}}n.wrap=g;var f="suspendedStart",p="suspendedYield",m="executing",y="completed",w={};function b(){}function k(){}function v(){}var x={};h(x,u,(function(){return this}));var D=Object.getPrototypeOf,A=D&&D(D(O([])));A&&A!==e&&r.call(A,u)&&(x=A);var F=v.prototype=b.prototype=Object.create(x);function E(t){["next","throw","return"].forEach((function(n){h(t,n,(function(t){return this._invoke(n,t)}))}))}function C(t,n){function e(s,a,o,u){var l=d(t[s],t,a);if("throw"!==l.type){var c=l.arg,h=c.value;return h&&"object"==i(h)&&r.call(h,"__await")?n.resolve(h.__await).then((function(t){e("next",t,o,u)}),(function(t){e("throw",t,o,u)})):n.resolve(h).then((function(t){c.value=t,o(c)}),(function(t){return e("throw",t,o,u)}))}u(l.arg)}var s;a(this,"_invoke",{value:function(t,i){function r(){return new n((function(n,s){e(t,i,n,s)}))}return s=s?s.then(r,r):r()}})}function S(n,e,i){var s=f;return function(r,a){if(s===m)throw new Error("Generator is already running");if(s===y){if("throw"===r)throw a;return{value:t,done:!0}}for(i.method=r,i.arg=a;;){var o=i.delegate;if(o){var u=_(o,i);if(u){if(u===w)continue;return u}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(s===f)throw s=y,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);s=m;var l=d(n,e,i);if("normal"===l.type){if(s=i.done?y:p,l.arg===w)continue;return{value:l.arg,done:i.done}}"throw"===l.type&&(s=y,i.method="throw",i.arg=l.arg)}}}function _(n,e){var i=e.method,s=n.iterator[i];if(s===t)return e.delegate=null,"throw"===i&&n.iterator.return&&(e.method="return",e.arg=t,_(n,e),"throw"===e.method)||"return"!==i&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+i+"' method")),w;var r=d(s,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,w;var a=r.arg;return a?a.done?(e[n.resultName]=a.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=t),e.delegate=null,w):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,w)}function B(t){var n={tryLoc:t[0]};1 in t&&(n.catchLoc=t[1]),2 in t&&(n.finallyLoc=t[2],n.afterLoc=t[3]),this.tryEntries.push(n)}function N(t){var n=t.completion||{};n.type="normal",delete n.arg,t.completion=n}function j(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(B,this),this.reset(!0)}function O(n){if(n||""===n){var e=n[u];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var s=-1,a=function e(){for(;++s<n.length;)if(r.call(n,s))return e.value=n[s],e.done=!1,e;return e.value=t,e.done=!0,e};return a.next=a}}throw new TypeError(i(n)+" is not iterable")}return k.prototype=v,a(F,"constructor",{value:v,configurable:!0}),a(v,"constructor",{value:k,configurable:!0}),k.displayName=h(v,c,"GeneratorFunction"),n.isGeneratorFunction=function(t){var n="function"==typeof t&&t.constructor;return!!n&&(n===k||"GeneratorFunction"===(n.displayName||n.name))},n.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,v):(t.__proto__=v,h(t,c,"GeneratorFunction")),t.prototype=Object.create(F),t},n.awrap=function(t){return{__await:t}},E(C.prototype),h(C.prototype,l,(function(){return this})),n.AsyncIterator=C,n.async=function(t,e,i,s,r){void 0===r&&(r=Promise);var a=new C(g(t,e,i,s),r);return n.isGeneratorFunction(e)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},E(F),h(F,c,"Generator"),h(F,u,(function(){return this})),h(F,"toString",(function(){return"[object Generator]"})),n.keys=function(t){var n=Object(t),e=[];for(var i in n)e.push(i);return e.reverse(),function t(){for(;e.length;){var i=e.pop();if(i in n)return t.value=i,t.done=!1,t}return t.done=!0,t}},n.values=O,j.prototype={constructor:j,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(N),!n)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function i(i,s){return o.type="throw",o.arg=n,e.next=i,s&&(e.method="next",e.arg=t),!!s}for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s],o=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var u=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(u&&l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(t,n){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var s=i;break}}s&&("break"===t||"continue"===t)&&s.tryLoc<=n&&n<=s.finallyLoc&&(s=null);var a=s?s.completion:{};return a.type=t,a.arg=n,s?(this.method="next",this.next=s.finallyLoc,w):this.complete(a)},complete:function(t,n){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&n&&(this.next=n),w},finish:function(t){for(var n=this.tryEntries.length-1;n>=0;--n){var e=this.tryEntries[n];if(e.finallyLoc===t)return this.complete(e.completion,e.afterLoc),N(e),w}},catch:function(t){for(var n=this.tryEntries.length-1;n>=0;--n){var e=this.tryEntries[n];if(e.tryLoc===t){var i=e.completion;if("throw"===i.type){var s=i.arg;N(e)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,i){return this.delegate={iterator:O(n),resultName:e,nextLoc:i},"next"===this.method&&(this.arg=t),w}},n}function r(t,n,e,i,s,r,a){try{var o=t[r](a),u=o.value}catch(t){return void e(t)}o.done?n(u):Promise.resolve(u).then(i,s)}function a(t){return function(){var n=this,e=arguments;return new Promise((function(i,s){var a=t.apply(n,e);function o(t){r(a,i,s,o,u,"next",t)}function u(t){r(a,i,s,o,u,"throw",t)}o(void 0)}))}}var o=e(79).containerBootstrap,u=e(6548).Nlp,l=e(6428).LangEn,c=e(6724),h=!0,g=function(t){return t.replaceAll(", ",",")},d=function(t){};function f(t){return p.apply(this,arguments)}function p(){return(p=a(s().mark((function t(n){var e,i;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=this.nlpManager||window.nlpManager,n=g(n),t.next=4,e.process("en",n,this.context);case 4:if(i=t.sent,d(i),h&&console.log(i),!i.slotFill){t.next=9;break}return t.abrupt("return",{complete:!1,intent:i.intent,followUpQuestion:i.answer});case 9:return t.abrupt("return",{complete:!0,intent:i.intent,entities:i.entities});case 10:case"end":return t.stop()}}),t,this)})))).apply(this,arguments)}function m(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.initialised=!1,this.context=t}m.prototype={initialise:function(){var t=this;return a(s().mark((function n(){var e,i;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(1!=t.initialised){n.next=2;break}return n.abrupt("return",t);case 2:return n.next=4,o();case 4:return(e=n.sent).use(u),e.use(l),i=e.get("nlp"),n.next=10,i.import(c);case 10:return t.nlpManager=i,t.ask=f.bind(t),t.initialised=!0,n.abrupt("return",t);case 14:case"end":return n.stop()}}),n)})))()},reset:function(){return this.context={},this}},t.exports={FabilabNlp:m}},6724:t=>{var n,e,i,s=String.raw(n||(e=['{\n  "settings": {\n    "tag": "nlp",\n    "forceNER": true,\n    "languages": [\n      "en"\n    ],\n    "corpora": [\n      "./chatbot/src/corpus.json"\n    ],\n    "calculateSentiment": true,\n    "executeActionsBeforeAnswers": false\n  },\n  "nluManager": {\n    "settings": {\n      "tag": "nlu-manager"\n    },\n    "locales": [\n      "en"\n    ],\n    "languageNames": {},\n    "domainManagers": {\n      "en": {\n        "settings": {\n          "locale": "en",\n          "trainByDomain": false,\n          "tag": "domain-manager-en",\n          "nluByDomain": {\n            "default": {\n              "className": "NeuralNlu",\n              "settings": {}\n            }\n          },\n          "useStemDict": true\n        },\n        "stemDict": {\n          "hello": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "good,morn": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "day,good": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "day,g": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "hey": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "hey,mate": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "hi": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "ciao": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "hola": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "hi,there": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "buongiorno": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "good,is,page,this": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "great,is,this,websit": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "i,love,page,this": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "i,like,this,websit": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "thank,you": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "are,fantast,you": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "amaz,is,this": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "nice,realli": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "actual,gorgeous": {\n            "intent": "like",\n            "domain": "default"\n          },\n          "do,i,it,like,not": {\n            "intent": "dislike",\n            "domain": "default"\n          },\n          "dislik,i,this": {\n            "intent": "dislike",\n            "domain": "default"\n          },\n          "bad,is,this": {\n            "intent": "dislike",\n            "domain": "default"\n          },\n          "confus,is,this": {\n            "intent": "dislike",\n            "domain": "default"\n          },\n          "shut,up": {\n            "intent": "dislike",\n            "domain": "default"\n          },\n          "dumb,is,this,websit": {\n            "intent": "dislike",\n            "domain": "default"\n          },\n          "horribl": {\n            "intent": "dislike",\n            "domain": "default"\n          },\n          "good,is,not,realli,this": {\n            "intent": "dislike",\n            "domain": "default"\n          },\n          "a,gimmick,is,this,websit": {\n            "intent": "dislike",\n            "domain": "default"\n          },\n          "are,who,you": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "fabilab,is,who": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "belong,fabilab,to,who": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "lab,list,member,the": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "are,lab,member,the,who": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "group,in,is,the,who": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "are,in,lab,peopl,the,who": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "peopl": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "lab,member": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "fabilab,member,of": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "biomedicin,data,driven,lab": {\n            "intent": "people",\n            "domain": "default"\n          },\n          "do,research,what,you": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "list,of,project,show": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "project,show": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "are,project,research,the,where": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "are,into,what,you": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "are,in,interest,what,you": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "are,avail,project,what": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "is,jam,what,your": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "big,deal,is,the,what": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "about,is,this,what": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "do,kind,of,research,what,you": {\n            "intent": "research",\n            "domain": "default"\n          },\n          "do,teach,what,you": {\n            "intent": "teaching",\n            "domain": "default"\n          },\n          "list,of,show,talk": {\n            "intent": "teaching",\n            "domain": "default"\n          },\n          "present,show": {\n            "intent": "teaching",\n            "domain": "default"\n          },\n          "are,slide,talk,the,where": {\n            "intent": "teaching",\n            "domain": "default"\n          },\n          "are,slide,where,your": {\n            "intent": "teaching",\n            "domain": "default"\n          },\n          "contact,do,how,i,you": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "address": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "email": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "contact": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "can,how,i,reach,you": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "email,is,what,your": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "address,email,show": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "is,lab,the,where": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "are,where,you": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "are,in,sydney,you": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "are,australia,in,you": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "base,is,lab,the,where": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "europ,in,is,lab,the": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "in,is,lab,the,us": {\n            "intent": "contact",\n            "domain": "default"\n          },\n          "can,how,i,join,you": {\n            "intent": "jointhelab",\n            "domain": "default"\n          },\n          "am,i,in,interest,join": {\n            "intent": "jointhelab",\n            "domain": "default"\n          },\n          "ani,are,open,posit,there": {\n            "intent": "jointhelab",\n            "domain": "default"\n          },\n          "opportun,show": {\n            "intent": "jointhelab",\n            "domain": "default"\n          },\n          "cool,is,this": {\n            "intent": "jointhelab",\n            "domain": "default"\n          },\n          "did,publish,what,you": {\n            "intent": "papers",\n            "domain": "default"\n          },\n          "list,of,paper,show": {\n            "intent": "papers",\n            "domain": "default"\n          },\n          "public,show": {\n            "intent": "papers",\n            "domain": "default"\n          },\n          "ani,articl,did,write,you": {\n            "intent": "papers",\n            "domain": "default"\n          },\n          "are,kind,maintain,of,softwar,what,you": {\n            "intent": "software",\n            "domain": "default"\n          },\n          "open,sourc": {\n            "intent": "software",\n            "domain": "default"\n          },\n          "have,packag,what,written,you": {\n            "intent": "software",\n            "domain": "default"\n          },\n          "by,done,fabilab,igraph,is": {\n            "intent": "software",\n            "domain": "default"\n          },\n          "by,develop,fabilab,htseq,is": {\n            "intent": "software",\n            "domain": "default"\n          },\n          "packag,python": {\n            "intent": "software",\n            "domain": "default"\n          },\n          "code,do,kind,of,what,write,you": {\n            "intent": "software",\n            "domain": "default"\n          },\n          "code,do,what,write,you": {\n            "intent": "software",\n            "domain": "default"\n          },\n          "is,up,what": {\n            "intent": "news",\n            "domain": "default"\n          },\n          "is,new,what": {\n            "intent": "news",\n            "domain": "default"\n          },\n          "news,show,the": {\n            "intent": "news",\n            "domain": "default"\n          },\n          "blog": {\n            "intent": "news",\n            "domain": "default"\n          },\n          "happen,is,what": {\n            "intent": "news",\n            "domain": "default"\n          },\n          "at,fabilab,is,new,what": {\n            "intent": "news",\n            "domain": "default"\n          },\n          "ani,news": {\n            "intent": "news",\n            "domain": "default"\n          },\n          "at,fabilab,latest": {\n            "intent": "news",\n            "domain": "default"\n          },\n          "are,github,on,you": {\n            "intent": "github",\n            "domain": "default"\n          },\n          "github,is,lab,the,what": {\n            "intent": "github",\n            "domain": "default"\n          },\n          "github,link,to": {\n            "intent": "github",\n            "domain": "default"\n          },\n          "github,go,to": {\n            "intent": "github",\n            "domain": "default"\n          },\n          "get,github,profil": {\n            "intent": "github",\n            "domain": "default"\n          },\n          "github,organis,show": {\n            "intent": "github",\n            "domain": "default"\n          },\n          "do,googl,have,scholar,you": {\n            "intent": "scholar",\n            "domain": "default"\n          },\n          "are,on,scholar,you": {\n            "intent": "scholar",\n            "domain": "default"\n          },\n          "googl,scholar,show": {\n            "intent": "scholar",\n            "domain": "default"\n          },\n          "fabio,is,profil,scholar": {\n            "intent": "scholar",\n            "domain": "default"\n          },\n          "googl,is,scholar,what,your": {\n            "intent": "scholar",\n            "domain": "default"\n          }\n        },\n        "intentDict": {\n          "like": "default",\n          "dislike": "default",\n          "people": "default",\n          "research": "default",\n          "teaching": "default",\n          "contact": "default",\n          "jointhelab": "default",\n          "papers": "default",\n          "software": "default",\n          "news": "default",\n          "github": "default",\n          "scholar": "default"\n        },\n        "sentences": [\n          {\n            "domain": "default",\n            "utterance": "hello",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "good morning",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "good day",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "g\'day",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "hey",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "hey mate",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "hi",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "ciao",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "hola",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "hi there",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "buongiorno",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "this page is good",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "this website is great",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "I love this page",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "I like this website",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "thank you!",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "you are fantastic",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "this is amazing",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "really nice",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "actually gorgeous",\n            "intent": "like"\n          },\n          {\n            "domain": "default",\n            "utterance": "I don\'t like it",\n            "intent": "dislike"\n          },\n          {\n            "domain": "default",\n            "utterance": "I dislike this",\n            "intent": "dislike"\n          },\n          {\n            "domain": "default",\n            "utterance": "this is bad",\n            "intent": "dislike"\n          },\n          {\n            "domain": "default",\n            "utterance": "this is confusing",\n            "intent": "dislike"\n          },\n          {\n            "domain": "default",\n            "utterance": "shut up",\n            "intent": "dislike"\n          },\n          {\n            "domain": "default",\n            "utterance": "this website is dumb",\n            "intent": "dislike"\n          },\n          {\n            "domain": "default",\n            "utterance": "horrible",\n            "intent": "dislike"\n          },\n          {\n            "domain": "default",\n            "utterance": "this is really not good",\n            "intent": "dislike"\n          },\n          {\n            "domain": "default",\n            "utterance": "this website is a gimmick",\n            "intent": "dislike"\n          },\n          {\n            "domain": "default",\n            "utterance": "who are you?",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "who is fabilab?",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "who belongs to fabilab?",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "list the lab members",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "who are the lab members?",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "who is in the group",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "who are the people in the lab?",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "people",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "lab members",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "members of fabilab",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "data driven biomedicine lab",\n            "intent": "people"\n          },\n          {\n            "domain": "default",\n            "utterance": "what do you research?",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "show list of projects",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "show projects",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "where are the research projects?",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "what are you into?",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "what are you interested in?",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "what projects are available?",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "what\'s your jam?",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "what\'s the big deal?",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "what is this about?",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "what kind of research do you do?",\n            "intent": "research"\n          },\n          {\n            "domain": "default",\n            "utterance": "what do you teach?",\n            "intent": "teaching"\n          },\n          {\n            "domain": "default",\n            "utterance": "show list of talks",\n            "intent": "teaching"\n          },\n          {\n            "domain": "default",\n            "utterance": "show presentations",\n            "intent": "teaching"\n          },\n          {\n            "domain": "default",\n            "utterance": "where are the talk slides?",\n            "intent": "teaching"\n          },\n          {\n            "domain": "default",\n            "utterance": "where are your slides?",\n            "intent": "teaching"\n          },\n          {\n            "domain": "default",\n            "utterance": "how do I contact you?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "address",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "email",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "contact",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "how can I reach you?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "what is your email?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "show email address",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "where is the lab?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "where are you?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "are you in Sydney?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "are you in Australia?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "where is the lab based?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "is the lab in Europe?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "is the lab in the US?",\n            "intent": "contact"\n          },\n          {\n            "domain": "default",\n            "utterance": "how can I join you?",\n            "intent": "jointhelab"\n          },\n          {\n            "domain": "default",\n            "utterance": "I am interesting in joining",\n            "intent": "jointhelab"\n          },\n          {\n            "domain": "default",\n            "utterance": "are there any open positions?",\n            "intent": "jointhelab"\n          },\n          {\n            "domain": "default",\n            "utterance": "show opportunities",\n            "intent": "jointhelab"\n          },\n          {\n            "domain": "default",\n            "utterance": "this is cool",\n            "intent": "jointhelab"\n          },\n          {\n            "domain": "default",\n            "utterance": "what did you publish?",\n            "intent": "papers"\n          },\n          {\n            "domain": "default",\n            "utterance": "show list of papers",\n            "intent": "papers"\n          },\n          {\n            "domain": "default",\n            "utterance": "show publications",\n            "intent": "papers"\n          },\n          {\n            "domain": "default",\n            "utterance": "did you write any articles?",\n            "intent": "papers"\n          },\n          {\n            "domain": "default",\n            "utterance": "what kind of software are you maintaining?",\n            "intent": "software"\n          },\n          {\n            "domain": "default",\n            "utterance": "open source",\n            "intent": "software"\n          },\n          {\n            "domain": "default",\n            "utterance": "what packages have you written?",\n            "intent": "software"\n          },\n          {\n            "domain": "default",\n            "utterance": "is igraph done by fabilab?",\n            "intent": "software"\n          },\n          {\n            "domain": "default",\n            "utterance": "is HTSeq developed by fabilab?",\n            "intent": "software"\n          },\n          {\n            "domain": "default",\n            "utterance": "Python packages",\n            "intent": "software"\n          },\n          {\n            "domain": "default",\n            "utterance": "what kind of code do you write?",\n            "intent": "software"\n          },\n          {\n            "domain": "default",\n            "utterance": "what code do you write?",\n            "intent": "software"\n          },\n          {\n            "domain": "default",\n            "utterance": "what\'s up?",\n            "intent": "news"\n          },\n          {\n            "domain": "default",\n            "utterance": "what\'s new?",\n            "intent": "news"\n          },\n          {\n            "domain": "default",\n            "utterance": "show the news",\n            "intent": "news"\n          },\n          {\n            "domain": "default",\n            "utterance": "blog",\n            "intent": "news"\n          },\n          {\n            "domain": "default",\n            "utterance": "what is happening?",\n            "intent": "news"\n          },\n          {\n            "domain": "default",\n            "utterance": "what is new at fabilab?",\n            "intent": "news"\n          },\n          {\n            "domain": "default",\n            "utterance": "any news?",\n            "intent": "news"\n          },\n          {\n            "domain": "default",\n            "utterance": "latest at fabilab",\n            "intent": "news"\n          },\n          {\n            "domain": "default",\n            "utterance": "are you on github?",\n            "intent": "github"\n          },\n          {\n            "domain": "default",\n            "utterance": "what\'s the lab github?",\n            "intent": "github"\n          },\n          {\n            "domain": "default",\n            "utterance": "link to github",\n            "intent": "github"\n          },\n          {\n            "domain": "default",\n            "utterance": "go to github",\n            "intent": "github"\n          },\n          {\n            "domain": "default",\n            "utterance": "get github profile",\n            "intent": "github"\n          },\n          {\n            "domain": "default",\n            "utterance": "show github organisation",\n            "intent": "github"\n          },\n          {\n            "domain": "default",\n            "utterance": "do you have google scholar?",\n            "intent": "scholar"\n          },\n          {\n            "domain": "default",\n            "utterance": "are you on scholar?",\n            "intent": "scholar"\n          },\n          {\n            "domain": "default",\n            "utterance": "show google scholar",\n            "intent": "scholar"\n          },\n          {\n            "domain": "default",\n            "utterance": "Fabio\'s scholar profile",\n            "intent": "scholar"\n          },\n          {\n            "domain": "default",\n            "utterance": "what\'s your google scholar?",\n            "intent": "scholar"\n          }\n        ],\n        "domains": {\n          "master_domain": {\n            "settings": {\n              "locale": "en",\n              "tag": "nlu-en",\n              "keepStopwords": true,\n              "nonefeatureValue": 1,\n              "nonedeltaMultiplier": 1.2,\n              "spellCheck": false,\n              "spellCheckDistance": 1,\n              "filterZeros": true,\n              "log": true\n            },\n            "features": {\n              "hello": 1,\n              "good": 1,\n              "morn": 1,\n              "day": 1,\n              "g": 1,\n              "hey": 1,\n              "mate": 1,\n              "hi": 1,\n              "ciao": 1,\n              "hola": 1,\n              "there": 1,\n              "buongiorno": 1,\n              "this": 1,\n              "page": 1,\n              "is": 1,\n              "websit": 1,\n              "great": 1,\n              "i": 1,\n              "love": 1,\n              "like": 1,\n              "thank": 1,\n              "you": 1,\n              "are": 1,\n              "fantast": 1,\n              "amaz": 1,\n              "realli": 1,\n              "nice": 1,\n              "actual": 1,\n              "gorgeous": 1,\n              "do": 1,\n              "not": 1,\n              "it": 1,\n              "dislik": 1,\n              "bad": 1,\n              "confus": 1,\n              "shut": 1,\n              "up": 1,\n              "dumb": 1,\n              "horribl": 1,\n              "a": 1,\n              "gimmick": 1,\n              "who": 1,\n              "fabilab": 1,\n              "belong": 1,\n              "to": 1,\n              "list": 1,\n              "the": 1,\n              "lab": 1,\n              "member": 1,\n              "in": 1,\n              "group": 1,\n              "peopl": 1,\n              "of": 1,\n              "data": 1,\n              "driven": 1,\n              "biomedicin": 1,\n              "what": 1,\n              "research": 1,\n              "show": 1,\n              "project": 1,\n              "where": 1,\n              "into": 1,\n              "interest": 1,\n              "avail": 1,\n              "your": 1,\n              "jam": 1,\n              "big": 1,\n              "deal": 1,\n              "about": 1,\n              "kind": 1,\n              "teach": 1,\n              "talk": 1,\n              "present": 1,\n              "slide": 1,\n              "how": 1,\n              "contact": 1,\n              "address": 1,\n              "email": 1,\n              "can": 1,\n              "reach": 1,\n              "sydney": 1,\n              "australia": 1,\n              "base": 1,\n              "europ": 1,\n              "us": 1,\n              "join": 1,\n              "am": 1,\n              "ani": 1,\n              "open": 1,\n              "posit": 1,\n              "opportun": 1,\n              "cool": 1,\n              "did": 1,\n              "publish": 1,\n              "paper": 1,\n              "public": 1,\n              "write": 1,\n              "articl": 1,\n              "softwar": 1,\n              "maintain": 1,\n              "sourc": 1,\n              "packag": 1,\n              "have": 1,\n              "written": 1,\n              "igraph": 1,\n              "done": 1,\n              "by": 1,\n              "htseq": 1,\n              "develop": 1,\n              "python": 1,\n              "code": 1,\n              "new": 1,\n              "news": 1,\n              "blog": 1,\n              "happen": 1,\n              "at": 1,\n              "latest": 1,\n              "on": 1,\n              "github": 1,\n              "link": 1,\n              "go": 1,\n              "get": 1,\n              "profil": 1,\n              "organis": 1,\n              "googl": 1,\n              "scholar": 1,\n              "fabio": 1\n            },\n            "intents": {\n              "like": 1,\n              "dislike": 1,\n              "people": 1,\n              "research": 1,\n              "teaching": 1,\n              "contact": 1,\n              "jointhelab": 1,\n              "papers": 1,\n              "software": 1,\n              "news": 1,\n              "github": 1,\n              "scholar": 1\n            },\n            "intentFeatures": {\n              "like": {\n                "hello": 1,\n                "good": 1,\n                "morn": 1,\n                "day": 1,\n                "g": 1,\n                "hey": 1,\n                "mate": 1,\n                "hi": 1,\n                "ciao": 1,\n                "hola": 1,\n                "there": 1,\n                "buongiorno": 1,\n                "this": 1,\n                "page": 1,\n                "is": 1,\n                "websit": 1,\n                "great": 1,\n                "i": 1,\n                "love": 1,\n                "like": 1,\n                "thank": 1,\n                "you": 1,\n                "are": 1,\n                "fantast": 1,\n                "amaz": 1,\n                "realli": 1,\n                "nice": 1,\n                "actual": 1,\n                "gorgeous": 1\n              },\n              "dislike": {\n                "i": 1,\n                "do": 1,\n                "not": 1,\n                "like": 1,\n                "it": 1,\n                "dislik": 1,\n                "this": 1,\n                "is": 1,\n                "bad": 1,\n                "confus": 1,\n                "shut": 1,\n                "up": 1,\n                "websit": 1,\n                "dumb": 1,\n                "horribl": 1,\n                "realli": 1,\n                "good": 1,\n                "a": 1,\n                "gimmick": 1\n              },\n              "people": {\n                "who": 1,\n                "are": 1,\n                "you": 1,\n                "is": 1,\n                "fabilab": 1,\n                "belong": 1,\n                "to": 1,\n                "list": 1,\n                "the": 1,\n                "lab": 1,\n                "member": 1,\n                "in": 1,\n                "group": 1,\n                "peopl": 1,\n                "of": 1,\n                "data": 1,\n                "driven": 1,\n                "biomedicin": 1\n              },\n              "research": {\n                "what": 1,\n                "do": 1,\n                "you": 1,\n                "research": 1,\n                "show": 1,\n                "list": 1,\n                "of": 1,\n                "project": 1,\n                "where": 1,\n                "are": 1,\n                "the": 1,\n                "into": 1,\n                "interest": 1,\n                "in": 1,\n                "avail": 1,\n                "is": 1,\n                "your": 1,\n                "jam": 1,\n                "big": 1,\n                "deal": 1,\n                "this": 1,\n                "about": 1,\n                "kind": 1\n              },\n              "teaching": {\n                "what": 1,\n                "do": 1,\n                "you": 1,\n                "teach": 1,\n                "show": 1,\n                "list": 1,\n                "of": 1,\n                "talk": 1,\n                "present": 1,\n                "where": 1,\n                "are": 1,\n                "the": 1,\n                "slide": 1,\n                "your": 1\n              },\n              "contact": {\n                "how": 1,\n                "do": 1,\n                "i": 1,\n                "contact": 1,\n                "you": 1,\n                "address": 1,\n                "email": 1,\n                "can": 1,\n                "reach": 1,\n                "what": 1,\n                "is": 1,\n                "your": 1,\n                "show": 1,\n                "where": 1,\n                "the": 1,\n                "lab": 1,\n                "are": 1,\n                "in": 1,\n                "sydney": 1,\n                "australia": 1,\n                "base": 1,\n                "europ": 1,\n                "us": 1\n              },\n              "jointhelab": {\n                "how": 1,\n                "can": 1,\n                "i": 1,\n                "join": 1,\n                "you": 1,\n                "am": 1,\n                "interest": 1,\n                "in": 1,\n                "are": 1,\n                "there": 1,\n                "ani": 1,\n                "open": 1,\n                "posit": 1,\n                "show": 1,\n                "opportun": 1,\n                "this": 1,\n                "is": 1,\n                "cool": 1\n              },\n              "papers": {\n                "what": 1,\n                "did": 1,\n                "you": 1,\n                "publish": 1,\n                "show": 1,\n                "list": 1,\n                "of": 1,\n                "paper": 1,\n                "public": 1,\n                "write": 1,\n                "ani": 1,\n                "articl": 1\n              },\n              "software": {\n                "what": 1,\n                "kind": 1,\n                "of": 1,\n                "softwar": 1,\n                "are": 1,\n                "you": 1,\n                "maintain": 1,\n                "open": 1,\n                "sourc": 1,\n                "packag": 1,\n                "have": 1,\n                "written": 1,\n                "is": 1,\n                "igraph": 1,\n                "done": 1,\n                "by": 1,\n                "fabilab": 1,\n                "htseq": 1,\n                "develop": 1,\n                "python": 1,\n                "code": 1,\n                "do": 1,\n                "write": 1\n              },\n              "news": {\n                "what": 1,\n                "is": 1,\n                "up": 1,\n                "new": 1,\n                "show": 1,\n                "the": 1,\n                "news": 1,\n                "blog": 1,\n                "happen": 1,\n                "at": 1,\n                "fabilab": 1,\n                "ani": 1,\n                "latest": 1\n              },\n              "github": {\n                "are": 1,\n                "you": 1,\n                "on": 1,\n                "github": 1,\n                "what": 1,\n                "is": 1,\n                "the": 1,\n                "lab": 1,\n                "link": 1,\n                "to": 1,\n                "go": 1,\n                "get": 1,\n                "profil": 1,\n                "show": 1,\n                "organis": 1\n              },\n              "scholar": {\n                "do": 1,\n                "you": 1,\n                "have": 1,\n                "googl": 1,\n                "scholar": 1,\n                "are": 1,\n                "on": 1,\n                "show": 1,\n                "fabio": 1,\n                "is": 1,\n                "profil": 1,\n                "what": 1,\n                "your": 1\n              }\n            },\n            "featuresToIntent": {\n              "hello": [\n                "like"\n              ],\n              "good": [\n                "like",\n                "dislike"\n              ],\n              "morn": [\n                "like"\n              ],\n              "day": [\n                "like"\n              ],\n              "g": [\n                "like"\n              ],\n              "hey": [\n                "like"\n              ],\n              "mate": [\n                "like"\n              ],\n              "hi": [\n                "like"\n              ],\n              "ciao": [\n                "like"\n              ],\n              "hola": [\n                "like"\n              ],\n              "there": [\n                "like",\n                "jointhelab"\n              ],\n              "buongiorno": [\n                "like"\n              ],\n              "this": [\n                "like",\n                "dislike",\n                "research",\n                "jointhelab"\n              ],\n              "page": [\n                "like"\n              ],\n              "is": [\n                "like",\n                "dislike",\n                "people",\n                "research",\n                "contact",\n                "jointhelab",\n                "software",\n                "news",\n                "github",\n                "scholar"\n              ],\n              "websit": [\n                "like",\n                "dislike"\n              ],\n              "great": [\n                "like"\n              ],\n              "i": [\n                "like",\n                "dislike",\n                "contact",\n                "jointhelab"\n              ],\n              "love": [\n                "like"\n              ],\n              "like": [\n                "like",\n                "dislike"\n              ],\n              "thank": [\n                "like"\n              ],\n              "you": [\n                "like",\n                "people",\n                "research",\n                "teaching",\n                "contact",\n                "jointhelab",\n                "papers",\n                "software",\n                "github",\n                "scholar"\n              ],\n              "are": [\n                "like",\n                "people",\n                "research",\n                "teaching",\n                "contact",\n                "jointhelab",\n                "software",\n                "github",\n                "scholar"\n              ],\n              "fantast": [\n                "like"\n              ],\n              "amaz": [\n                "like"\n              ],\n              "realli": [\n                "like",\n                "dislike"\n              ],\n              "nice": [\n                "like"\n              ],\n              "actual": [\n                "like"\n              ],\n              "gorgeous": [\n                "like"\n              ],\n              "do": [\n                "dislike",\n                "research",\n                "teaching",\n                "contact",\n                "software",\n                "scholar"\n              ],\n              "not": [\n                "dislike"\n              ],\n              "it": [\n                "dislike"\n              ],\n              "dislik": [\n                "dislike"\n              ],\n              "bad": [\n                "dislike"\n              ],\n              "confus": [\n                "dislike"\n              ],\n              "shut": [\n                "dislike"\n              ],\n              "up": [\n                "dislike",\n                "news"\n              ],\n              "dumb": [\n                "dislike"\n              ],\n              "horribl": [\n                "dislike"\n              ],\n              "a": [\n                "dislike"\n              ],\n              "gimmick": [\n                "dislike"\n              ],\n              "who": [\n                "people"\n              ],\n              "fabilab": [\n                "people",\n                "software",\n                "news"\n              ],\n              "belong": [\n                "people"\n              ],\n              "to": [\n                "people",\n                "github"\n              ],\n              "list": [\n                "people",\n                "research",\n                "teaching",\n                "papers"\n              ],\n              "the": [\n                "people",\n                "research",\n                "teaching",\n                "contact",\n                "news",\n                "github"\n              ],\n              "lab": [\n                "people",\n                "contact",\n                "github"\n              ],\n              "member": [\n                "people"\n              ],\n              "in": [\n                "people",\n                "research",\n                "contact",\n                "jointhelab"\n              ],\n              "group": [\n                "people"\n              ],\n              "peopl": [\n                "people"\n              ],\n              "of": [\n                "people",\n                "research",\n                "teaching",\n                "papers",\n                "software"\n              ],\n              "data": [\n                "people"\n              ],\n              "driven": [\n                "people"\n              ],\n              "biomedicin": [\n                "people"\n              ],\n              "what": [\n                "research",\n                "teaching",\n                "contact",\n                "papers",\n                "software",\n                "news",\n                "github",\n                "scholar"\n              ],\n              "research": [\n                "research"\n              ],\n              "show": [\n                "research",\n                "teaching",\n                "contact",\n                "jointhelab",\n                "papers",\n                "news",\n                "github",\n                "scholar"\n              ],\n              "project": [\n                "research"\n              ],\n              "where": [\n                "research",\n                "teaching",\n                "contact"\n              ],\n              "into": [\n                "research"\n              ],\n              "interest": [\n                "research",\n                "jointhelab"\n              ],\n              "avail": [\n                "research"\n              ],\n              "your": [\n                "research",\n                "teaching",\n                "contact",\n                "scholar"\n              ],\n              "jam": [\n                "research"\n              ],\n              "big": [\n                "research"\n              ],\n              "deal": [\n                "research"\n              ],\n              "about": [\n                "research"\n              ],\n              "kind": [\n                "research",\n                "software"\n              ],\n              "teach": [\n                "teaching"\n              ],\n              "talk": [\n                "teaching"\n              ],\n              "present": [\n                "teaching"\n              ],\n              "slide": [\n                "teaching"\n              ],\n              "how": [\n                "contact",\n                "jointhelab"\n              ],\n              "contact": [\n                "contact"\n              ],\n              "address": [\n                "contact"\n              ],\n              "email": [\n                "contact"\n              ],\n              "can": [\n                "contact",\n                "jointhelab"\n              ],\n              "reach": [\n                "contact"\n              ],\n              "sydney": [\n                "contact"\n              ],\n              "australia": [\n                "contact"\n              ],\n              "base": [\n                "contact"\n              ],\n              "europ": [\n                "contact"\n              ],\n              "us": [\n                "contact"\n              ],\n              "join": [\n                "jointhelab"\n              ],\n              "am": [\n                "jointhelab"\n              ],\n              "ani": [\n                "jointhelab",\n                "papers",\n                "news"\n              ],\n              "open": [\n                "jointhelab",\n                "software"\n              ],\n              "posit": [\n                "jointhelab"\n              ],\n              "opportun": [\n                "jointhelab"\n              ],\n              "cool": [\n                "jointhelab"\n              ],\n              "did": [\n                "papers"\n              ],\n              "publish": [\n                "papers"\n              ],\n              "paper": [\n                "papers"\n              ],\n              "public": [\n                "papers"\n              ],\n              "write": [\n                "papers",\n                "software"\n              ],\n              "articl": [\n                "papers"\n              ],\n              "softwar": [\n                "software"\n              ],\n              "maintain": [\n                "software"\n              ],\n              "sourc": [\n                "software"\n              ],\n              "packag": [\n                "software"\n              ],\n              "have": [\n                "software",\n                "scholar"\n              ],\n              "written": [\n                "software"\n              ],\n              "igraph": [\n                "software"\n              ],\n              "done": [\n                "software"\n              ],\n              "by": [\n                "software"\n              ],\n              "htseq": [\n                "software"\n              ],\n              "develop": [\n                "software"\n              ],\n              "python": [\n                "software"\n              ],\n              "code": [\n                "software"\n              ],\n              "new": [\n                "news"\n              ],\n              "news": [\n                "news"\n              ],\n              "blog": [\n                "news"\n              ],\n              "happen": [\n                "news"\n              ],\n              "at": [\n                "news"\n              ],\n              "latest": [\n                "news"\n              ],\n              "on": [\n                "github",\n                "scholar"\n              ],\n              "github": [\n                "github"\n              ],\n              "link": [\n                "github"\n              ],\n              "go": [\n                "github"\n              ],\n              "get": [\n                "github"\n              ],\n              "profil": [\n                "github",\n                "scholar"\n              ],\n              "organis": [\n                "github"\n              ],\n              "googl": [\n                "scholar"\n              ],\n              "scholar": [\n                "scholar"\n              ],\n              "fabio": [\n                "scholar"\n              ]\n            },\n            "neuralNetwork": {\n              "settings": {\n                "locale": "en",\n                "tag": "nlu-en",\n                "keepStopwords": true,\n                "nonefeatureValue": 1,\n                "nonedeltaMultiplier": 1.2,\n                "spellCheck": false,\n                "spellCheckDistance": 1,\n                "filterZeros": true,\n                "log": true\n              },\n              "features": [\n                "hello",\n                "good",\n                "morn",\n                "day",\n                "g",\n                "hey",\n                "mate",\n                "hi",\n                "ciao",\n                "hola",\n                "there",\n                "buongiorno",\n                "this",\n                "page",\n                "is",\n                "websit",\n                "great",\n                "i",\n                "love",\n                "like",\n                "thank",\n                "you",\n                "are",\n                "fantast",\n                "amaz",\n                "realli",\n                "nice",\n                "actual",\n                "gorgeous",\n                "do",\n                "not",\n                "it",\n                "dislik",\n                "bad",\n                "confus",\n                "shut",\n                "up",\n                "dumb",\n                "horribl",\n                "a",\n                "gimmick",\n                "who",\n                "fabilab",\n                "belong",\n                "to",\n                "list",\n                "the",\n                "lab",\n                "member",\n                "in",\n                "group",\n                "peopl",\n                "of",\n                "data",\n                "driven",\n                "biomedicin",\n                "what",\n                "research",\n                "show",\n                "project",\n                "where",\n                "into",\n                "interest",\n                "avail",\n                "your",\n                "jam",\n                "big",\n                "deal",\n                "about",\n                "kind",\n                "teach",\n                "talk",\n                "present",\n                "slide",\n                "how",\n                "contact",\n                "address",\n                "email",\n                "can",\n                "reach",\n                "sydney",\n                "australia",\n                "base",\n                "europ",\n                "us",\n                "join",\n                "am",\n                "ani",\n                "open",\n                "posit",\n                "opportun",\n                "cool",\n                "did",\n                "publish",\n                "paper",\n                "public",\n                "write",\n                "articl",\n                "softwar",\n                "maintain",\n                "sourc",\n                "packag",\n                "have",\n                "written",\n                "igraph",\n                "done",\n                "by",\n                "htseq",\n                "develop",\n                "python",\n                "code",\n                "new",\n                "news",\n                "blog",\n                "happen",\n                "at",\n                "latest",\n                "on",\n                "github",\n                "link",\n                "go",\n                "get",\n                "profil",\n                "organis",\n                "googl",\n                "scholar",\n                "fabio"\n              ],\n              "intents": [\n                "like",\n                "dislike",\n                "people",\n                "research",\n                "teaching",\n                "contact",\n                "jointhelab",\n                "papers",\n                "software",\n                "news",\n                "github",\n                "scholar"\n              ],\n              "perceptrons": [\n                [\n                  8.588945388793945,\n                  4.035202980041504,\n                  4.549853324890137,\n                  4.621853351593018,\n                  3.926788568496704,\n                  8.325984954833984,\n                  0.3977697789669037,\n                  8.388985633850098,\n                  8.569016456604004,\n                  8.564421653747559,\n                  0.2942398488521576,\n                  8.566712379455566,\n                  0.5459377765655518,\n                  7.197484493255615,\n                  -3.285327196121216,\n                  3.9176433086395264,\n                  7.412013053894043,\n                  -1.1189602613449097,\n                  1.9885215759277344,\n                  5.202218532562256,\n                  7.427499771118164,\n                  1.1474305391311646,\n                  -2.7883472442626953,\n                  10.196903228759766,\n                  11.29421329498291,\n                  1.0712432861328125,\n                  7.488077640533447,\n                  4.286066055297852,\n                  4.286066055297852,\n                  -3.3789031505584717,\n                  -8.07232666015625,\n                  -1.5245412588119507,\n                  -5.43880558013916,\n                  -3.5353047847747803,\n                  -3.489501476287842,\n                  -3.1932384967803955,\n                  -3.1932384967803955,\n                  -6.8887038230896,\n                  -5.713009834289551,\n                  -3.461358070373535,\n                  -3.461358070373535,\n                  -4.077560901641846,\n                  -3.011026382446289,\n                  -0.5727092027664185,\n                  -2.1083102226257324,\n                  -1.1813087463378906,\n                  -1.4400417804718018,\n                  -3.217012643814087,\n                  -2.6912572383880615,\n                  -3.0710365772247314,\n                  -0.039400190114974976,\n                  -5.7042765617370605,\n                  -1.3385682106018066,\n                  -0.9896811246871948,\n                  -0.9896811246871948,\n                  -0.9896811246871948,\n                  -3.7866432666778564,\n                  -0.8069934844970703,\n                  -4.895959377288818,\n                  -1.7277469635009766,\n                  -4.057496547698975,\n                  -0.9235191941261292,\n                  -0.8088188171386719,\n                  -0.12044090777635574,\n                  -0.7743913531303406,\n                  -0.014395344071090221,\n                  0,\n                  0,\n                  0,\n                  -0.03131711110472679,\n                  -0.31481075286865234,\n                  -0.43842944502830505,\n                  -1.3105194568634033,\n                  -0.9897274971008301,\n                  -2.4123847484588623,\n                  -5.690425395965576,\n                  -5.699103355407715,\n                  -5.694889068603516,\n                  -2.136544942855835,\n                  -1.3578768968582153,\n                  -1.0168582201004028,\n                  -0.9977400302886963,\n                  0,\n                  0,\n                  0,\n                  -1.226819634437561,\n                  -0.4252369701862335,\n                  -3.5751864910125732,\n                  -3.1913373470306396,\n                  -0.6416645646095276,\n                  -0.8293922543525696,\n                  -2.9334094524383545,\n                  -1.9193485975265503,\n                  -1.1483943462371826,\n                  0,\n                  -0.8077561259269714,\n                  -0.7642163038253784,\n                  -0.7642163038253784,\n                  0,\n                  0,\n                  -2.512120485305786,\n                  -2.9371907711029053,\n                  -0.6416925191879272,\n                  -0.15942463278770447,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -2.766002893447876,\n                  0,\n                  0,\n                  -2.1250150203704834,\n                  -5.668728828430176,\n                  0,\n                  -1.345703363418579,\n                  -1.345703363418579,\n                  -1.762491226196289,\n                  -2.874034881591797,\n                  -0.7226520776748657,\n                  -0.7211251258850098,\n                  -1.4144240617752075,\n                  -1.4144240617752075,\n                  -0.00244183000177145,\n                  -0.5460234880447388,\n                  -2.2979578971862793,\n                  0,\n                  5.704613444819462\n                ],\n                [\n                  -1.0350154638290405,\n                  -1.1605761051177979,\n                  -0.22839924693107605,\n                  -0.6279959082603455,\n                  -0.41286903619766235,\n                  -1.0352163314819336,\n                  -0.27397799491882324,\n                  -1.0339311361312866,\n                  -1.032057285308838,\n                  -1.0307978391647339,\n                  -0.29505205154418945,\n                  -1.029392123222351,\n                  4.405919075012207,\n                  -5.42080020904541,\n                  0.9949987530708313,\n                  -1.3053815364837646,\n                  -5.288023471832275,\n                  0.217125803232193,\n                  -1.9348385334014893,\n                  -4.3092122077941895,\n                  0,\n                  -2.6021742820739746,\n                  -0.8268065452575684,\n                  0,\n                  -6.410621643066406,\n                  0.8566046953201294,\n                  -1.8888336420059204,\n                  -0.5150821208953857,\n                  -0.5150821208953857,\n                  3.766436815261841,\n                  8.156220436096191,\n                  5.409674644470215,\n                  8.605294227600098,\n                  7.85610818862915,\n                  7.854323387145996,\n                  8.055322647094727,\n                  5.191155433654785,\n                  9.129633903503418,\n                  13.213990211486816,\n                  4.573419570922852,\n                  4.573419570922852,\n                  -1.9262917041778564,\n                  -1.637992024421692,\n                  -0.09683021903038025,\n                  -0.49305644631385803,\n                  -0.533772885799408,\n                  -1.4879223108291626,\n                  -1.2422893047332764,\n                  -0.8004008531570435,\n                  -1.1321412324905396,\n                  -0.3522782027721405,\n                  -1.2096315622329712,\n                  -0.4362851083278656,\n                  -0.28905001282691956,\n                  -0.28905001282691956,\n                  -0.28905001282691956,\n                  -7.219015598297119,\n                  -0.16345137357711792,\n                  -1.2846907377243042,\n                  -0.712207555770874,\n                  -0.3281995356082916,\n                  -0.04777900502085686,\n                  -0.6172086000442505,\n                  -0.032898370176553726,\n                  -0.7487308979034424,\n                  -0.4881362318992615,\n                  -0.23010027408599854,\n                  -0.23010027408599854,\n                  -2.8512630462646484,\n                  0,\n                  0,\n                  -0.061493150889873505,\n                  -0.3336943984031677,\n                  -0.05041259527206421,\n                  -1.4319568872451782,\n                  -1.4111909866333008,\n                  -1.1211488246917725,\n                  -1.1254197359085083,\n                  -0.5003030300140381,\n                  -0.2691444754600525,\n                  0,\n                  0,\n                  -0.03740420192480087,\n                  0,\n                  0,\n                  -0.781748354434967,\n                  -0.5762802362442017,\n                  -0.5778765678405762,\n                  -0.6229730844497681,\n                  -0.07126329094171524,\n                  -0.16494765877723694,\n                  -6.584983825683594,\n                  0,\n                  0,\n                  0,\n                  -0.017431965097784996,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.5274726152420044,\n                  -0.5680021643638611,\n                  -0.5434894561767578,\n                  0,\n                  -0.2401658445596695,\n                  -0.2401658445596695,\n                  -0.42134103178977966,\n                  -0.17248937487602234,\n                  -0.17248937487602234,\n                  -0.5680021643638611,\n                  0,\n                  0,\n                  -0.48238056898117065,\n                  -1.0369800329208374,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.4440966546535492,\n                  -0.1574220210313797,\n                  -0.1378404051065445,\n                  -0.13143903017044067,\n                  -0.7071980237960815,\n                  0,\n                  -0.5434894561767578,\n                  -1.1128177642822266,\n                  -0.5623576045036316,\n                  1.0379195045506011\n                ],\n                [\n                  -1.3997256755828857,\n                  -0.8211005926132202,\n                  -0.6047840118408203,\n                  -0.8207125067710876,\n                  -0.6043961048126221,\n                  -1.3953303098678589,\n                  -0.2879379391670227,\n                  -1.391091227531433,\n                  -1.3869246244430542,\n                  -1.3830535411834717,\n                  -0.3785480856895447,\n                  -1.3790292739868164,\n                  -1.5155764818191528,\n                  -0.0042106108739972115,\n                  0.34228888154029846,\n                  -0.20334576070308685,\n                  -0.15030546486377716,\n                  -1.7648824453353882,\n                  -0.0042106108739972115,\n                  -0.001188074005767703,\n                  -5.13268518447876,\n                  4.2111992835998535,\n                  -4.089140892028809,\n                  -1.2211875915527344,\n                  -0.23589272797107697,\n                  -0.687419593334198,\n                  -0.687419593334198,\n                  -0.6868093609809875,\n                  -0.6868093609809875,\n                  -1.9374738931655884,\n                  0,\n                  0,\n                  0,\n                  -0.23351772129535675,\n                  -0.2322092205286026,\n                  -0.6860507130622864,\n                  -0.6860507130622864,\n                  -0.03528549149632454,\n                  -1.3252575397491455,\n                  -0.015278089791536331,\n                  -0.015278089791536331,\n                  11.191171646118164,\n                  1.6631600856781006,\n                  0.3965838849544525,\n                  -0.47696682810783386,\n                  5.603654861450195,\n                  -5.6931610107421875,\n                  0.9843834042549133,\n                  11.314437866210938,\n                  -1.5726104974746704,\n                  8.238326072692871,\n                  12.2893705368042,\n                  -0.33007150888442993,\n                  3.932002067565918,\n                  3.932002067565918,\n                  3.932002067565918,\n                  -3.401808738708496,\n                  -0.7396933436393738,\n                  -4.791347980499268,\n                  -1.9127273559570312,\n                  -3.0330474376678467,\n                  -0.2726391851902008,\n                  -0.4047749638557434,\n                  -0.07798873633146286,\n                  -0.3910670280456543,\n                  -0.13652661442756653,\n                  -0.3819701075553894,\n                  -0.3819701075553894,\n                  -0.1498379409313202,\n                  0,\n                  -0.2905438244342804,\n                  -1.9044642448425293,\n                  -0.22077694535255432,\n                  -0.5253079533576965,\n                  -1.6928339004516602,\n                  -1.4417318105697632,\n                  -1.4450018405914307,\n                  -1.4432542324066162,\n                  -1.4472168684005737,\n                  -0.7568597793579102,\n                  -0.40441763401031494,\n                  -0.3396722376346588,\n                  -0.637403130531311,\n                  -1.55077064037323,\n                  -1.372862458229065,\n                  -0.7507350444793701,\n                  -0.04321930930018425,\n                  -1.6704905033111572,\n                  -0.8402741551399231,\n                  -0.1903436779975891,\n                  0,\n                  -0.40118640661239624,\n                  -1.697567105293274,\n                  -0.5595250129699707,\n                  -1.8712303638458252,\n                  0,\n                  -1.1327687501907349,\n                  -1.1327687501907349,\n                  0,\n                  0,\n                  -0.6024305820465088,\n                  -0.8381596207618713,\n                  -1.2330973148345947,\n                  -0.18283730745315552,\n                  -1.1028740406036377,\n                  -1.1028740406036377,\n                  -2.205869197845459,\n                  -1.1009199619293213,\n                  -1.1009199619293213,\n                  -0.6550308465957642,\n                  0,\n                  -0.003260270459577441,\n                  -0.2897840440273285,\n                  -1.4151402711868286,\n                  0,\n                  -2.131478786468506,\n                  -2.124958038330078,\n                  -0.33492976427078247,\n                  -1.1693848371505737,\n                  -0.4185366630554199,\n                  -0.38340359926223755,\n                  -0.08878390491008759,\n                  -0.314849853515625,\n                  0,\n                  -1.0461302995681763,\n                  -1.4005191326141357,\n                  -0.22572465240955353,\n                  1.4425014421988476\n                ],\n                [\n                  0,\n                  -0.2757177948951721,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.5268702507019043,\n                  0,\n                  3.9380202293395996,\n                  -0.20011302828788757,\n                  -1.2100697755813599,\n                  -0.3270098567008972,\n                  -0.17724448442459106,\n                  -2.1952123641967773,\n                  0,\n                  0,\n                  0,\n                  1.4248943328857422,\n                  0.6094544529914856,\n                  -0.1167638748884201,\n                  -0.4237997829914093,\n                  -0.07484184950590134,\n                  0,\n                  0,\n                  0,\n                  -0.09741169214248657,\n                  -0.07484184950590134,\n                  0,\n                  0,\n                  -0.42274463176727295,\n                  -0.4194768965244293,\n                  0,\n                  -3.530022144317627,\n                  -0.09903332591056824,\n                  0,\n                  -0.049114830791950226,\n                  -0.049114830791950226,\n                  -0.06428467482328415,\n                  -0.5365846157073975,\n                  0,\n                  0,\n                  0.4303183853626251,\n                  -0.2116411179304123,\n                  -2.539966583251953,\n                  0,\n                  1.7065823078155518,\n                  0,\n                  0,\n                  0.09365322440862656,\n                  0,\n                  0,\n                  0,\n                  6.958016872406006,\n                  8.43846607208252,\n                  4.0074591636657715,\n                  12.220614433288574,\n                  -4.459751129150391,\n                  7.561625003814697,\n                  5.864692687988281,\n                  -3.126288890838623,\n                  1.5238896608352661,\n                  9.318490982055664,\n                  5.522205352783203,\n                  5.522205352783203,\n                  6.886926651000977,\n                  -0.32540950179100037,\n                  -5.989212512969971,\n                  -3.037989377975464,\n                  -1.6762489080429077,\n                  -1.6369833946228027,\n                  -0.5758058428764343,\n                  -0.638983428478241,\n                  -0.6444110870361328,\n                  -5.00858211517334,\n                  -0.21976225078105927,\n                  -0.21976225078105927,\n                  -1.7766374349594116,\n                  -1.703510046005249,\n                  -0.1609821915626526,\n                  -0.30063381791114807,\n                  -0.238657146692276,\n                  -1.5374352931976318,\n                  -1.5374352931976318,\n                  -0.5268702507019043,\n                  -0.5268702507019043,\n                  -0.5268702507019043,\n                  -1.6764984130859375,\n                  -1.063596487045288,\n                  -3.038482427597046,\n                  -3.038482427597046,\n                  -2.909058094024658,\n                  -1.6693360805511475,\n                  -2.9971041679382324,\n                  0,\n                  -3.2251060009002686,\n                  -3.2251060009002686,\n                  0,\n                  -2.0272059440612793,\n                  -2.0272059440612793,\n                  -2.0272059440612793,\n                  -0.013785431161522865,\n                  -0.013785431161522865,\n                  -0.022723659873008728,\n                  -0.00448915408924222,\n                  -0.00448915408924222,\n                  0,\n                  -2.9971041679382324,\n                  -3.4949660301208496,\n                  -1.4842883348464966,\n                  0,\n                  -3.454633951187134,\n                  -0.5086964964866638,\n                  0,\n                  0,\n                  -1.4243154525756836,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.2694368362426758,\n                  -2.4886457920074463,\n                  -2.4886457920074463,\n                  0,\n                  -2.299295574861058\n                ],\n                [\n                  -0.08794689178466797,\n                  -0.06981765478849411,\n                  -0.044855132699012756,\n                  -0.06838055700063705,\n                  -0.04361098259687424,\n                  -0.09498021751642227,\n                  -0.02981424331665039,\n                  -0.08369708806276321,\n                  -0.08213052153587341,\n                  -0.08058371394872665,\n                  -0.5034947395324707,\n                  -0.07979664206504822,\n                  -0.0016367682255804539,\n                  0,\n                  -4.154616355895996,\n                  0,\n                  0,\n                  -1.439542531967163,\n                  0,\n                  -0.8723722696304321,\n                  0,\n                  -1.356083869934082,\n                  0.2263416349887848,\n                  0,\n                  0,\n                  -0.04876222833991051,\n                  -0.04876222833991051,\n                  -0.04817149043083191,\n                  -0.04817149043083191,\n                  4.096599102020264,\n                  -0.8723722696304321,\n                  -0.8723722696304321,\n                  0,\n                  0,\n                  0,\n                  -0.036222901195287704,\n                  -0.036222901195287704,\n                  0,\n                  -0.05960255116224289,\n                  0,\n                  0,\n                  -0.10111729800701141,\n                  -0.2807806134223938,\n                  -0.0005605286569334567,\n                  -0.026316404342651367,\n                  1.6636080741882324,\n                  -3.875854969024658,\n                  -1.2015806436538696,\n                  -0.4636334776878357,\n                  -0.5724330544471741,\n                  0,\n                  -0.05860580876469612,\n                  0.265380859375,\n                  0,\n                  0,\n                  0,\n                  1.1586252450942993,\n                  -3.8186306953430176,\n                  2.8373022079467773,\n                  -4.615833759307861,\n                  1.200642704963684,\n                  -0.2950318455696106,\n                  -0.014877754263579845,\n                  -0.003021528711542487,\n                  5.200356483459473,\n                  -2.1056764125823975,\n                  0,\n                  0,\n                  0,\n                  -1.2311030626296997,\n                  10.354965209960938,\n                  9.361345291137695,\n                  11.459869384765625,\n                  7.538815021514893,\n                  -0.5363566875457764,\n                  -0.775596022605896,\n                  -1.183797001838684,\n                  -2.1685092449188232,\n                  -0.06757193058729172,\n                  -0.06757193058729172,\n                  -0.22837921977043152,\n                  -0.18587271869182587,\n                  -0.3180636465549469,\n                  -0.02229694090783596,\n                  -0.005672011990100145,\n                  -0.014877754263579845,\n                  -0.014877754263579845,\n                  -0.5110982060432434,\n                  -0.5305899381637573,\n                  -0.5034947395324707,\n                  -2.804900646209717,\n                  -0.0016367682255804539,\n                  -0.21991188824176788,\n                  -0.21991188824176788,\n                  -4.6672282218933105,\n                  -2.794757843017578,\n                  -1.96444833278656,\n                  0,\n                  -0.3676948845386505,\n                  -0.3676948845386505,\n                  -0.0124460244551301,\n                  -0.2436046600341797,\n                  -0.1272750049829483,\n                  -0.1272750049829483,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.10902689397335052,\n                  -1.96444833278656,\n                  0,\n                  -1.048365592956543,\n                  -0.12036207318305969,\n                  0,\n                  -0.019601846113801003,\n                  -0.019601846113801003,\n                  -0.030767787247896194,\n                  -1.441442847251892,\n                  -0.00859236903488636,\n                  -0.007146152667701244,\n                  -0.010187054984271526,\n                  -0.010187054984271526,\n                  -1.3613721132278442,\n                  -1.395979881286621,\n                  -1.4053692817687988,\n                  0,\n                  -0.034430753379828094\n                ],\n                [\n                  -1.4747415781021118,\n                  -1.0108633041381836,\n                  -0.49758899211883545,\n                  -0.8803632855415344,\n                  -0.6269916892051697,\n                  -1.4694695472717285,\n                  -0.3390447199344635,\n                  -1.4642210006713867,\n                  -1.4599542617797852,\n                  -1.4556553363800049,\n                  -0.7974580526351929,\n                  -1.4512454271316528,\n                  -4.667696952819824,\n                  -0.24733033776283264,\n                  3.9026174545288086,\n                  -0.611767053604126,\n                  -0.4342598021030426,\n                  -1.3720829486846924,\n                  0,\n                  -0.51509690284729,\n                  -5.838027477264404,\n                  4.502653121948242,\n                  -1.521214246749878,\n                  -4.326063632965088,\n                  -0.7240745425224304,\n                  -0.7363145351409912,\n                  -0.7363145351409912,\n                  -0.7355670928955078,\n                  -0.7355670928955078,\n                  -3.274963855743408,\n                  -0.51509690284729,\n                  -0.51509690284729,\n                  0,\n                  -0.7135069370269775,\n                  -0.7065140008926392,\n                  -0.26707449555397034,\n                  -1.2115041017532349,\n                  -0.10541710257530212,\n                  -1.4114972352981567,\n                  -0.05079933628439903,\n                  -0.05079933628439903,\n                  -5.781452178955078,\n                  -1.9301390647888184,\n                  0,\n                  -0.09814316034317017,\n                  -1.379977822303772,\n                  -2.064835548400879,\n                  2.3941142559051514,\n                  -3.8960444927215576,\n                  5.256242752075195,\n                  -2.904554843902588,\n                  -2.0231242179870605,\n                  -1.3279027938842773,\n                  -1.3059351444244385,\n                  -1.3059351444244385,\n                  -1.3059351444244385,\n                  -4.217537879943848,\n                  -3.390949249267578,\n                  -10.821861267089844,\n                  -3.390949249267578,\n                  8.928567886352539,\n                  -0.1261870414018631,\n                  -5.318994998931885,\n                  0,\n                  0.28245872259140015,\n                  -1.3339563608169556,\n                  0,\n                  0,\n                  0,\n                  -0.8607029318809509,\n                  0,\n                  -1.0549819469451904,\n                  0,\n                  -8.815540313720703,\n                  0.6371780037879944,\n                  12.509108543395996,\n                  11.794902801513672,\n                  12.400443077087402,\n                  1.5860633850097656,\n                  7.416471004486084,\n                  4.652677059173584,\n                  4.622193813323975,\n                  -0.3166857659816742,\n                  3.1508243083953857,\n                  3.125380039215088,\n                  -7.282278537750244,\n                  -1.314915418624878,\n                  -1.6647430658340454,\n                  -1.284993052482605,\n                  -0.6305144429206848,\n                  -0.8600293397903442,\n                  -1.5814108848571777,\n                  -1.9110939502716064,\n                  -0.9288685917854309,\n                  -0.3139168918132782,\n                  -0.6981568932533264,\n                  -1.6060552597045898,\n                  -0.8437864780426025,\n                  -0.6951479315757751,\n                  -0.6951479315757751,\n                  -0.523348867893219,\n                  -1.2094569206237793,\n                  -1.672044038772583,\n                  -0.5981497168540955,\n                  -0.8769453167915344,\n                  -0.8769453167915344,\n                  -1.7555437088012695,\n                  -0.8778629899024963,\n                  -0.8778629899024963,\n                  -0.5122876167297363,\n                  -0.6915183663368225,\n                  -1.188362717628479,\n                  -0.7447085380554199,\n                  -1.48955237865448,\n                  -1.1768913269042969,\n                  -0.14347870647907257,\n                  -0.08540395647287369,\n                  -1.9382400512695312,\n                  -2.8113789558410645,\n                  -0.048962514847517014,\n                  -0.029810748994350433,\n                  -0.021569527685642242,\n                  -1.1915671825408936,\n                  0,\n                  -1.0429530143737793,\n                  -3.0687143802642822,\n                  -1.1614446640014648,\n                  1.5321924660312147\n                ],\n                [\n                  -0.18321536481380463,\n                  -1.0268210172653198,\n                  -0.09423251450061798,\n                  -0.21972692012786865,\n                  -0.11831407994031906,\n                  -0.27467262744903564,\n                  -0.10565997660160065,\n                  -2.1546640396118164,\n                  -0.15045228600502014,\n                  -0.15632037818431854,\n                  2.851822853088379,\n                  -0.11487369239330292,\n                  0.7413196563720703,\n                  -1.3664706945419312,\n                  2.1155006885528564,\n                  -1.8358449935913086,\n                  -0.6146278381347656,\n                  1.110671043395996,\n                  -0.9002894163131714,\n                  -1.0959498882293701,\n                  0,\n                  -1.1206879615783691,\n                  1.7587358951568604,\n                  -0.1486961543560028,\n                  -2.1109397411346436,\n                  -0.3754386007785797,\n                  -0.006022063549607992,\n                  -0.005781710147857666,\n                  -0.005781710147857666,\n                  -1.062831997871399,\n                  -0.7109745144844055,\n                  -0.28402602672576904,\n                  -1.4837331771850586,\n                  -2.1112213134765625,\n                  -2.1064255237579346,\n                  0,\n                  -0.194349005818367,\n                  -0.27832329273223877,\n                  0,\n                  -0.13847747445106506,\n                  -0.13847747445106506,\n                  -0.6624590754508972,\n                  -0.7138573527336121,\n                  0,\n                  -0.16078875958919525,\n                  -0.7855526804924011,\n                  -1.2497731447219849,\n                  -0.49060171842575073,\n                  -0.02473316341638565,\n                  0.26868903636932373,\n                  -0.2504841089248657,\n                  -0.25744563341140747,\n                  -1.047008991241455,\n                  0,\n                  0,\n                  0,\n                  -2.3050785064697266,\n                  -0.010266758501529694,\n                  2.7078537940979004,\n                  -1.9577767848968506,\n                  -0.3552083671092987,\n                  0,\n                  1.4352478981018066,\n                  0,\n                  -0.32793566584587097,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.19801980257034302,\n                  0,\n                  -0.13373920321464539,\n                  -1.9530940055847168,\n                  -0.3346748650074005,\n                  2.274407148361206,\n                  -0.6458308696746826,\n                  -0.980944037437439,\n                  -0.980944037437439,\n                  2.9410667419433594,\n                  -4.437343120574951,\n                  -0.26052945852279663,\n                  -0.22285017371177673,\n                  0,\n                  -0.06222731992602348,\n                  -0.03759389743208885,\n                  9.800113677978516,\n                  2.419511318206787,\n                  2.7448618412017822,\n                  2.786716938018799,\n                  4.886713981628418,\n                  12.299893379211426,\n                  12.15311050415039,\n                  -0.7468363046646118,\n                  -0.1698543280363083,\n                  -0.6444731950759888,\n                  -1.9697684049606323,\n                  -0.5444018244743347,\n                  -0.5045381784439087,\n                  -0.1674012690782547,\n                  -0.1674012690782547,\n                  -2.098680019378662,\n                  -0.3710038959980011,\n                  -0.1264086365699768,\n                  -0.08286426216363907,\n                  -0.2379453182220459,\n                  -0.2379453182220459,\n                  -0.5413394570350647,\n                  -0.2341102659702301,\n                  -0.2341102659702301,\n                  -0.25124111771583557,\n                  -0.021115269511938095,\n                  -0.20927760004997253,\n                  -2.056187629699707,\n                  -0.29234427213668823,\n                  -0.12215112149715424,\n                  -0.09909161180257797,\n                  -0.06206284463405609,\n                  -0.43436917662620544,\n                  -1.3077183961868286,\n                  -0.07179758697748184,\n                  -0.058552902191877365,\n                  -0.05456038564443588,\n                  -0.302091121673584,\n                  -0.7376003265380859,\n                  -0.7947807312011719,\n                  -1.251544713973999,\n                  -0.21946154534816742,\n                  -0.7413714003898079\n                ],\n                [\n                  -0.1292242854833603,\n                  -0.1638808250427246,\n                  -0.08761519938707352,\n                  -0.15388044714927673,\n                  -0.07913650572299957,\n                  -0.17992430925369263,\n                  -0.0711585059762001,\n                  -0.15617609024047852,\n                  -0.11413448303937912,\n                  -0.11029938608407974,\n                  -0.1157958060503006,\n                  -0.1047791838645935,\n                  -0.09398337453603745,\n                  -0.03381972759962082,\n                  -0.625965416431427,\n                  -0.03128835931420326,\n                  -0.0015461989678442478,\n                  -0.4359462559223175,\n                  -0.03381972759962082,\n                  -0.028389235958456993,\n                  -1.2869008779525757,\n                  1.4064586162567139,\n                  -1.7990368604660034,\n                  -0.2354196459054947,\n                  0,\n                  -0.05177230387926102,\n                  -0.05177230387926102,\n                  -0.050114694982767105,\n                  -0.050114694982767105,\n                  -2.0142669677734375,\n                  0,\n                  0,\n                  -0.012278124690055847,\n                  0,\n                  0,\n                  -0.036323532462120056,\n                  -0.1531735360622406,\n                  0,\n                  -0.061290908604860306,\n                  0,\n                  0,\n                  -0.17933480441570282,\n                  -0.444943368434906,\n                  0,\n                  -0.11302874982357025,\n                  1.4636937379837036,\n                  -1.1163588762283325,\n                  -0.25880855321884155,\n                  -0.36280322074890137,\n                  -0.1658383160829544,\n                  0,\n                  -0.04509430378675461,\n                  0.23855513334274292,\n                  -0.003481623949483037,\n                  -0.003481623949483037,\n                  -0.003481623949483037,\n                  0.7748842835426331,\n                  -0.18221789598464966,\n                  2.8152518272399902,\n                  -4.363331317901611,\n                  0,\n                  -0.29358014464378357,\n                  -0.1658383160829544,\n                  0,\n                  -0.023276958614587784,\n                  -0.023276958614587784,\n                  0,\n                  0,\n                  0,\n                  -1.2712129354476929,\n                  -0.07262000441551208,\n                  -4.359384536743164,\n                  -2.6544933319091797,\n                  0,\n                  -0.33933642506599426,\n                  0,\n                  -1.3312712907791138,\n                  -1.3312712907791138,\n                  -0.33933642506599426,\n                  -0.1890086680650711,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.1386914998292923,\n                  0,\n                  1.7541526556015015,\n                  -0.3739161193370819,\n                  -0.05299339070916176,\n                  -2.6442489624023438,\n                  0,\n                  7.500296592712402,\n                  4.758622646331787,\n                  9.916108131408691,\n                  11.600419998168945,\n                  1.0354619026184082,\n                  2.741692304611206,\n                  -0.4026843309402466,\n                  -0.4026843309402466,\n                  -0.29201629757881165,\n                  -0.91079181432724,\n                  -0.7508644461631775,\n                  -0.7006582617759705,\n                  -0.10269377380609512,\n                  -0.10269377380609512,\n                  -0.2270079404115677,\n                  -0.08309928327798843,\n                  -0.08309928327798843,\n                  -0.18311206996440887,\n                  -1.6846846342086792,\n                  -0.11545808613300323,\n                  -1.7799173593521118,\n                  -0.25626271963119507,\n                  -0.09993434697389603,\n                  -0.07462418079376221,\n                  -0.07462418079376221,\n                  -0.3277907073497772,\n                  -1.576404094696045,\n                  -0.05138741433620453,\n                  -0.040983278304338455,\n                  -0.03938137739896774,\n                  -0.047119107097387314,\n                  -1.177939534187317,\n                  -1.3439823389053345,\n                  -1.4806886911392212,\n                  -0.001221788814291358,\n                  -0.15266316037404654\n                ],\n                [\n                  -0.41531091928482056,\n                  -0.4683935046195984,\n                  -0.23607872426509857,\n                  -0.4226537346839905,\n                  -0.22009782493114471,\n                  -0.5149605870246887,\n                  -0.19734026491641998,\n                  -0.4639173746109009,\n                  -0.3774888813495636,\n                  -0.3730831444263458,\n                  -1.5503308773040771,\n                  -0.3680707514286041,\n                  -0.5522772669792175,\n                  -0.09278160333633423,\n                  -0.5889661908149719,\n                  -0.12664823234081268,\n                  -0.0688430443406105,\n                  -0.501368522644043,\n                  -0.06862582266330719,\n                  -0.19855937361717224,\n                  -1.1305668354034424,\n                  0.5528107285499573,\n                  -0.5116470456123352,\n                  -0.7816292643547058,\n                  -0.013050896115601063,\n                  -0.20310498774051666,\n                  -0.20310498774051666,\n                  -0.1988203376531601,\n                  -0.1988203376531601,\n                  -0.42693373560905457,\n                  -0.13682076334953308,\n                  -0.13682076334953308,\n                  -0.0041661630384624004,\n                  -0.0027668674010783434,\n                  -0.00183795893099159,\n                  -0.0022335448302328587,\n                  -1.3788747787475586,\n                  0,\n                  -0.34861335158348083,\n                  0,\n                  0,\n                  -1.5498144626617432,\n                  1.4308053255081177,\n                  -0.3411596715450287,\n                  -0.5511597394943237,\n                  -0.4447021484375,\n                  -0.7587650418281555,\n                  -0.35097306966781616,\n                  -2.1287593841552734,\n                  -0.7229295969009399,\n                  0,\n                  -0.34081390500068665,\n                  -1.1051561832427979,\n                  -0.006207653786987066,\n                  -0.006207653786987066,\n                  -0.006207653786987066,\n                  1.1039347648620605,\n                  -4.288294315338135,\n                  -0.8888523578643799,\n                  -0.6307922601699829,\n                  -0.32494795322418213,\n                  -1.4105398654937744,\n                  -0.7229295969009399,\n                  -0.2593933045864105,\n                  -0.48970070481300354,\n                  -0.33567845821380615,\n                  -0.0522521510720253,\n                  -0.0522521510720253,\n                  -0.2698492705821991,\n                  1.5157012939453125,\n                  -1.5016504526138306,\n                  -0.06262142211198807,\n                  0,\n                  0,\n                  -0.18503977358341217,\n                  -0.31166279315948486,\n                  -0.3120494782924652,\n                  -0.3276000916957855,\n                  -0.12607286870479584,\n                  -0.07528290152549744,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.0457015335559845,\n                  0,\n                  -3.170342445373535,\n                  6.299762725830078,\n                  -1.3725645542144775,\n                  0,\n                  0,\n                  -1.7178791761398315,\n                  -0.23739579319953918,\n                  -0.014702918939292431,\n                  0,\n                  5.524744510650635,\n                  -1.4798458814620972,\n                  6.163295745849609,\n                  6.163295745849609,\n                  7.6723456382751465,\n                  8.330034255981445,\n                  1.3025747537612915,\n                  2.6938931941986084,\n                  3.282992124557495,\n                  3.282992124557495,\n                  6.565954208374023,\n                  3.2828211784362793,\n                  3.2828211784362793,\n                  5.636412143707275,\n                  7.004347801208496,\n                  -2.2742507457733154,\n                  -0.6339112520217896,\n                  -0.6100077033042908,\n                  -1.3245341777801514,\n                  -1.8817929029464722,\n                  -0.7260781526565552,\n                  -1.132460355758667,\n                  -1.3630989789962769,\n                  -0.08681449294090271,\n                  -0.0655088871717453,\n                  -0.06464316695928574,\n                  -0.11006221920251846,\n                  -0.027197735384106636,\n                  -1.3933684825897217,\n                  -1.9583672285079956,\n                  -0.023951826617121696,\n                  0.31338587497273795\n                ],\n                [\n                  -1.0814149379730225,\n                  -1.0894547700881958,\n                  -0.37881210446357727,\n                  -0.8137016892433167,\n                  -0.5041517615318298,\n                  -1.1249592304229736,\n                  -0.39806845784187317,\n                  -1.0931507349014282,\n                  -1.0795278549194336,\n                  -1.0787339210510254,\n                  -0.7324418425559998,\n                  -1.0778167247772217,\n                  -4.936841011047363,\n                  -0.36724182963371277,\n                  2.2810161113739014,\n                  -0.5083383321762085,\n                  -0.36924847960472107,\n                  -0.21055419743061066,\n                  -0.025761594995856285,\n                  -0.1321091651916504,\n                  -0.046344347298145294,\n                  -3.910769462585449,\n                  -2.573756694793701,\n                  -0.0022557484917342663,\n                  -0.39157232642173767,\n                  -0.5590393543243408,\n                  -0.5547282695770264,\n                  -0.5543183088302612,\n                  -0.5543183088302612,\n                  -1.4981610774993896,\n                  -0.10223083943128586,\n                  -0.09523176401853561,\n                  -0.004390915855765343,\n                  -0.30380919575691223,\n                  -0.24076539278030396,\n                  -7.104817867279053,\n                  6.188763618469238,\n                  -0.04020097479224205,\n                  -1.0590598583221436,\n                  -0.011864729225635529,\n                  -0.011864729225635529,\n                  -2.835568428039551,\n                  -1.3749881982803345,\n                  -0.28304213285446167,\n                  -0.6821734309196472,\n                  -0.5945553779602051,\n                  0.6374138593673706,\n                  -3.814171552658081,\n                  -0.7541561722755432,\n                  -0.6831347942352295,\n                  -0.46021488308906555,\n                  -1.0551261901855469,\n                  -1.2510619163513184,\n                  0,\n                  0,\n                  0,\n                  4.59876012802124,\n                  -0.8591852188110352,\n                  0.8882526159286499,\n                  -2.052316665649414,\n                  -0.11614949256181717,\n                  -0.4362882077693939,\n                  -0.20122681558132172,\n                  -1.0374070405960083,\n                  -5.549817085266113,\n                  -2.3833651542663574,\n                  -4.256429195404053,\n                  -4.256429195404053,\n                  -2.932467460632324,\n                  0,\n                  -0.24129173159599304,\n                  -0.20054662227630615,\n                  -1.9209915399551392,\n                  0,\n                  0,\n                  -1.0321351289749146,\n                  -1.0372178554534912,\n                  -2.2992630004882812,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.019182097166776657,\n                  0,\n                  0,\n                  -0.0002410115412203595,\n                  -0.0002410115412203595,\n                  1.8104033470153809,\n                  -0.7150169610977173,\n                  -0.37945201992988586,\n                  -1.9062563180923462,\n                  0,\n                  -0.9226499199867249,\n                  -0.787873387336731,\n                  -0.09594457596540451,\n                  -1.8943041563034058,\n                  -0.17121759057044983,\n                  -0.12077566981315613,\n                  0,\n                  0,\n                  -0.3294350206851959,\n                  -0.7193541526794434,\n                  -0.602790355682373,\n                  -0.39128440618515015,\n                  -0.6058954000473022,\n                  -0.6058954000473022,\n                  -1.2061272859573364,\n                  -0.5986579656600952,\n                  -0.5986579656600952,\n                  -0.3272671103477478,\n                  -0.03644101321697235,\n                  5.422718524932861,\n                  11.502996444702148,\n                  13.147561073303223,\n                  6.340087413787842,\n                  2.9262685775756836,\n                  11.152729034423828,\n                  -0.2970981001853943,\n                  -4.7953972816467285,\n                  -0.16726362705230713,\n                  -0.12296304851770401,\n                  -0.11166369169950485,\n                  -0.6898127794265747,\n                  -0.24912050366401672,\n                  -1.8770979642868042,\n                  -2.704747200012207,\n                  -0.5224815607070923,\n                  1.0954407992872104\n                ],\n                [\n                  -0.23809759318828583,\n                  -0.49869513511657715,\n                  -0.15383516252040863,\n                  -0.3746633529663086,\n                  -0.1802603155374527,\n                  -0.41282495856285095,\n                  -0.1632121056318283,\n                  -0.37136605381965637,\n                  -0.18608075380325317,\n                  -0.2044626921415329,\n                  -0.138754740357399,\n                  -0.1909266859292984,\n                  -0.7235048413276672,\n                  -0.1464485377073288,\n                  -0.026151347905397415,\n                  -0.22272039949893951,\n                  -0.11266472190618515,\n                  -0.18655897676944733,\n                  -0.03382601588964462,\n                  -0.09615420550107956,\n                  -0.18353508412837982,\n                  0.1077577993273735,\n                  0.2738838195800781,\n                  -0.19735275208950043,\n                  -0.08201143145561218,\n                  -0.12290085107088089,\n                  -0.12290085107088089,\n                  -0.11824427545070648,\n                  -0.11824427545070648,\n                  -0.5306473970413208,\n                  -0.04832356423139572,\n                  -0.04832356423139572,\n                  -0.01002292800694704,\n                  -0.05366799980401993,\n                  -0.041989516466856,\n                  -0.1041833758354187,\n                  -0.21308009326457977,\n                  -0.011476116254925728,\n                  -0.1267305314540863,\n                  -0.004473370965570211,\n                  -0.004473370965570211,\n                  -1.2454445362091064,\n                  -0.5869512557983398,\n                  -0.5072298645973206,\n                  1.517037034034729,\n                  -0.4365764260292053,\n                  0.5521092414855957,\n                  1.1676888465881348,\n                  -0.7567558288574219,\n                  -0.8553283214569092,\n                  -0.0804935172200203,\n                  -0.23347099125385284,\n                  -0.2396121621131897,\n                  -0.2445642650127411,\n                  -0.2445642650127411,\n                  -0.2445642650127411,\n                  0.8685615062713623,\n                  -0.2769971787929535,\n                  0.487932413816452,\n                  -0.4823542535305023,\n                  -1.0323835611343384,\n                  -0.5880157947540283,\n                  -0.11987535655498505,\n                  -0.15048937499523163,\n                  -0.4575968384742737,\n                  -0.13658064603805542,\n                  -0.3935506045818329,\n                  -0.3935506045818329,\n                  -0.002352355746552348,\n                  -0.11970197409391403,\n                  -0.04421813413500786,\n                  -0.055574625730514526,\n                  -0.18962346017360687,\n                  -0.017892610281705856,\n                  0,\n                  0,\n                  -0.12835951149463654,\n                  -0.17994019389152527,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.23707914352416992,\n                  -0.19888417422771454,\n                  -0.1835477203130722,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.14638951420783997,\n                  0,\n                  -0.1670111119747162,\n                  -0.1670111119747162,\n                  0,\n                  -0.12945878505706787,\n                  0,\n                  0,\n                  -0.1145787164568901,\n                  -0.1145787164568901,\n                  0,\n                  -0.04350724443793297,\n                  -0.25104036927223206,\n                  -0.04350724443793297,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.18929973244667053,\n                  -0.4377691447734833,\n                  0,\n                  -0.18504011631011963,\n                  0,\n                  0,\n                  2.1744935512542725,\n                  12.38480281829834,\n                  1.045710563659668,\n                  1.0452688932418823,\n                  1.4404810667037964,\n                  1.1224963665008545,\n                  2.0751967430114746,\n                  -0.6188473701477051,\n                  -1.890229344367981,\n                  -0.2656424641609192,\n                  -0.6615607038866161\n                ],\n                [\n                  -0.16707350313663483,\n                  -0.5628646612167358,\n                  -0.14198343455791473,\n                  -0.310004860162735,\n                  -0.13421541452407837,\n                  -0.32164329290390015,\n                  -0.12291561812162399,\n                  -0.2867976427078247,\n                  -0.16045279800891876,\n                  -0.15411706268787384,\n                  -0.10381562262773514,\n                  -0.1430020034313202,\n                  -1.1331868171691895,\n                  -0.2122688591480255,\n                  0.8070433139801025,\n                  -0.3588126003742218,\n                  -0.17392663657665253,\n                  -0.36475467681884766,\n                  -0.031915999948978424,\n                  -0.12574292719364166,\n                  -0.3247412145137787,\n                  0.3551199436187744,\n                  0.7643769383430481,\n                  -0.45493602752685547,\n                  -0.13834704458713531,\n                  -0.09080930054187775,\n                  -0.06601357460021973,\n                  -0.06451746821403503,\n                  -0.06451746821403503,\n                  -0.2914705276489258,\n                  -0.1028125137090683,\n                  -0.08002521097660065,\n                  -0.0016204528510570526,\n                  -0.10800954699516296,\n                  -0.08984871208667755,\n                  -0.05076457932591438,\n                  -0.062374915927648544,\n                  -0.0449412502348423,\n                  -0.062007807195186615,\n                  -0.013422666117548943,\n                  -0.013422666117548943,\n                  -0.7512398362159729,\n                  -0.357389897108078,\n                  -0.004438328091055155,\n                  -0.004438328091055155,\n                  -0.2655646800994873,\n                  -0.35572290420532227,\n                  -0.15810245275497437,\n                  -0.10332299768924713,\n                  -0.43390369415283203,\n                  -0.05769330635666847,\n                  -0.05573153868317604,\n                  -0.3169371783733368,\n                  -0.009745377115905285,\n                  -0.009745377115905285,\n                  -0.009745377115905285,\n                  -0.830661416053772,\n                  -0.4006578028202057,\n                  0.478750079870224,\n                  -0.4192946255207062,\n                  -0.32085472345352173,\n                  -0.28507000207901,\n                  -0.19872532784938812,\n                  -0.028370315209031105,\n                  0.49353522062301636,\n                  -0.33840394020080566,\n                  -0.04983256757259369,\n                  -0.04983256757259369,\n                  0,\n                  -0.04629175364971161,\n                  -0.1273534893989563,\n                  -0.08139588683843613,\n                  -0.2314603328704834,\n                  -0.1307196319103241,\n                  -0.1496249884366989,\n                  -0.11847220361232758,\n                  -0.10773299634456635,\n                  -0.34466639161109924,\n                  -0.012937030754983425,\n                  -0.012937030754983425,\n                  -0.037010811269283295,\n                  -0.019516490399837494,\n                  0,\n                  0,\n                  0,\n                  0,\n                  0,\n                  -0.042482759803533554,\n                  0,\n                  0,\n                  -0.19539077579975128,\n                  0,\n                  -0.042482759803533554,\n                  0,\n                  -0.016788983717560768,\n                  -0.17567966878414154,\n                  -0.042482759803533554,\n                  -0.042482759803533554,\n                  -0.000833092606626451,\n                  -0.000833092606626451,\n                  0,\n                  -0.11707696318626404,\n                  0.41451773047447205,\n                  -0.11707696318626404,\n                  -0.08511541038751602,\n                  -0.08511541038751602,\n                  -0.163824200630188,\n                  -0.06529111415147781,\n                  -0.06529111415147781,\n                  0,\n                  0,\n                  -0.0027340271044522524,\n                  -0.013682574033737183,\n                  0,\n                  -0.0013569286093115807,\n                  0,\n                  0,\n                  2.891313314437866,\n                  -3.1303062438964844,\n                  0,\n                  0,\n                  -0.1930587887763977,\n                  1.5173773765563965,\n                  -0.019466575235128403,\n                  3.5738472938537598,\n                  11.087450981140137,\n                  1.7259374856948853,\n                  -0.8470556752100851\n                ]\n              ]\n            }\n          }\n        }\n      }\n    },\n    "intentDomains": {},\n    "extraSentences": [\n      [\n        "en",\n        "hello"\n      ],\n      [\n        "en",\n        "good morning"\n      ],\n      [\n        "en",\n        "good day"\n      ],\n      [\n        "en",\n        "g\'day"\n      ],\n      [\n        "en",\n        "hey"\n      ],\n      [\n        "en",\n        "hey mate"\n      ],\n      [\n        "en",\n        "hi"\n      ],\n      [\n        "en",\n        "ciao"\n      ],\n      [\n        "en",\n        "hola"\n      ],\n      [\n        "en",\n        "hi there"\n      ],\n      [\n        "en",\n        "buongiorno"\n      ],\n      [\n        "en",\n        "this page is good"\n      ],\n      [\n        "en",\n        "this website is great"\n      ],\n      [\n        "en",\n        "I love this page"\n      ],\n      [\n        "en",\n        "I like this website"\n      ],\n      [\n        "en",\n        "thank you!"\n      ],\n      [\n        "en",\n        "you are fantastic"\n      ],\n      [\n        "en",\n        "this is amazing"\n      ],\n      [\n        "en",\n        "really nice"\n      ],\n      [\n        "en",\n        "actually gorgeous"\n      ],\n      [\n        "en",\n        "I don\'t like it"\n      ],\n      [\n        "en",\n        "I dislike this"\n      ],\n      [\n        "en",\n        "this is bad"\n      ],\n      [\n        "en",\n        "this is confusing"\n      ],\n      [\n        "en",\n        "shut up"\n      ],\n      [\n        "en",\n        "this website is dumb"\n      ],\n      [\n        "en",\n        "horrible"\n      ],\n      [\n        "en",\n        "this is really not good"\n      ],\n      [\n        "en",\n        "this website is a gimmick"\n      ],\n      [\n        "en",\n        "who are you?"\n      ],\n      [\n        "en",\n        "who is fabilab?"\n      ],\n      [\n        "en",\n        "who belongs to fabilab?"\n      ],\n      [\n        "en",\n        "list the lab members"\n      ],\n      [\n        "en",\n        "who are the lab members?"\n      ],\n      [\n        "en",\n        "who is in the group"\n      ],\n      [\n        "en",\n        "who are the people in the lab?"\n      ],\n      [\n        "en",\n        "people"\n      ],\n      [\n        "en",\n        "lab members"\n      ],\n      [\n        "en",\n        "members of fabilab"\n      ],\n      [\n        "en",\n        "data driven biomedicine lab"\n      ],\n      [\n        "en",\n        "what do you research?"\n      ],\n      [\n        "en",\n        "show list of projects"\n      ],\n      [\n        "en",\n        "show projects"\n      ],\n      [\n        "en",\n        "where are the research projects?"\n      ],\n      [\n        "en",\n        "what are you into?"\n      ],\n      [\n        "en",\n        "what are you interested in?"\n      ],\n      [\n        "en",\n        "what projects are available?"\n      ],\n      [\n        "en",\n        "what\'s your jam?"\n      ],\n      [\n        "en",\n        "what\'s the big deal?"\n      ],\n      [\n        "en",\n        "what is this about?"\n      ],\n      [\n        "en",\n        "what kind of research do you do?"\n      ],\n      [\n        "en",\n        "what do you teach?"\n      ],\n      [\n        "en",\n        "show list of talks"\n      ],\n      [\n        "en",\n        "show presentations"\n      ],\n      [\n        "en",\n        "where are the talk slides?"\n      ],\n      [\n        "en",\n        "where are your slides?"\n      ],\n      [\n        "en",\n        "how do I contact you?"\n      ],\n      [\n        "en",\n        "address"\n      ],\n      [\n        "en",\n        "email"\n      ],\n      [\n        "en",\n        "contact"\n      ],\n      [\n        "en",\n        "how can I reach you?"\n      ],\n      [\n        "en",\n        "what is your email?"\n      ],\n      [\n        "en",\n        "show email address"\n      ],\n      [\n        "en",\n        "where is the lab?"\n      ],\n      [\n        "en",\n        "where are you?"\n      ],\n      [\n        "en",\n        "are you in Sydney?"\n      ],\n      [\n        "en",\n        "are you in Australia?"\n      ],\n      [\n        "en",\n        "where is the lab based?"\n      ],\n      [\n        "en",\n        "is the lab in Europe?"\n      ],\n      [\n        "en",\n        "is the lab in the US?"\n      ],\n      [\n        "en",\n        "how can I join you?"\n      ],\n      [\n        "en",\n        "I am interesting in joining"\n      ],\n      [\n        "en",\n        "are there any open positions?"\n      ],\n      [\n        "en",\n        "show opportunities"\n      ],\n      [\n        "en",\n        "this is cool"\n      ],\n      [\n        "en",\n        "what did you publish?"\n      ],\n      [\n        "en",\n        "show list of papers"\n      ],\n      [\n        "en",\n        "show publications"\n      ],\n      [\n        "en",\n        "did you write any articles?"\n      ],\n      [\n        "en",\n        "what kind of software are you maintaining?"\n      ],\n      [\n        "en",\n        "open source"\n      ],\n      [\n        "en",\n        "what packages have you written?"\n      ],\n      [\n        "en",\n        "is igraph done by fabilab?"\n      ],\n      [\n        "en",\n        "is HTSeq developed by fabilab?"\n      ],\n      [\n        "en",\n        "Python packages"\n      ],\n      [\n        "en",\n        "what kind of code do you write?"\n      ],\n      [\n        "en",\n        "what code do you write?"\n      ],\n      [\n        "en",\n        "what\'s up?"\n      ],\n      [\n        "en",\n        "what\'s new?"\n      ],\n      [\n        "en",\n        "show the news"\n      ],\n      [\n        "en",\n        "blog"\n      ],\n      [\n        "en",\n        "what is happening?"\n      ],\n      [\n        "en",\n        "what is new at fabilab?"\n      ],\n      [\n        "en",\n        "any news?"\n      ],\n      [\n        "en",\n        "latest at fabilab"\n      ],\n      [\n        "en",\n        "are you on github?"\n      ],\n      [\n        "en",\n        "what\'s the lab github?"\n      ],\n      [\n        "en",\n        "link to github"\n      ],\n      [\n        "en",\n        "go to github"\n      ],\n      [\n        "en",\n        "get github profile"\n      ],\n      [\n        "en",\n        "show github organisation"\n      ],\n      [\n        "en",\n        "do you have google scholar?"\n      ],\n      [\n        "en",\n        "are you on scholar?"\n      ],\n      [\n        "en",\n        "show google scholar"\n      ],\n      [\n        "en",\n        "Fabio\'s scholar profile"\n      ],\n      [\n        "en",\n        "what\'s your google scholar?"\n      ]\n    ]\n  },\n  "ner": {\n    "settings": {\n      "tag": "ner"\n    },\n    "rules": {}\n  },\n  "nlgManager": {\n    "settings": {\n      "tag": "nlg-manager"\n    },\n    "responses": {}\n  },\n  "actionManager": {\n    "settings": {\n      "tag": "action-manager"\n    },\n    "actions": {}\n  },\n  "slotManager": {}\n}'],i||(i=e.slice(0)),n=Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(i)}}))));t.exports=s},2545:t=>{t.exports=class{constructor(t,n,e,i,s){this.s_size=t.length,this.s=t,this.substring_i=n,this.result=e,this.method=i,this.instance=s}}},1401:(t,n,e)=>{const{defaultContainer:i}=e(8614);class s{constructor(t=i){this.container=t.container||t,this.name="arrToObj"}static arrToObj(t){const n={};for(let e=0;e<t.length;e+=1)n[t[e]]=1;return n}run(t){return Array.isArray(t)?s.arrToObj(t):(t.tokens=s.arrToObj(t.tokens),t)}}t.exports=s},5051:(t,n,e)=>{const{defaultContainer:i}=e(8614),s=e(4658);t.exports=class{constructor(t=i,n){this.container=t.container||t,this.cache={},this.setCurrent(""),this.dictionary=n||{before:{},after:{}}}setCurrent(t){this.current=t,this.cursor=0,this.limit=this.current.length,this.limit_backward=0,this.bra=this.cursor,this.ket=this.limit}getCurrent(){return this.current}bc(t,n){return 0==(t[n>>>3]&1<<(7&n))}in_grouping(t,n,e){if(this.cursor>=this.limit)return!1;let i=this.current.charCodeAt(this.cursor);return!(i>e||i<n||(i-=n,this.bc(t,i)||(this.cursor++,0)))}in_grouping_b(t,n,e){if(this.cursor<=this.limit_backward)return!1;let i=this.current.charCodeAt(this.cursor-1);return!(i>e||i<n||(i-=n,this.bc(t,i)||(this.cursor--,0)))}out_grouping(t,n,e){if(this.cursor>=this.limit)return!1;let i=this.current.charCodeAt(this.cursor);return i>e||i<n?(this.cursor++,!0):(i-=n,!!this.bc(t,i)&&(this.cursor++,!0))}out_grouping_b(t,n,e){if(this.cursor<=this.limit_backward)return!1;let i=this.current.charCodeAt(this.cursor-1);return i>e||i<n?(this.cursor--,!0):(i-=n,!!this.bc(t,i)&&(this.cursor--,!0))}eq_s(t,n){return"string"==typeof t&&(t=(n=t).length),!(this.limit-this.cursor<t||this.current.slice(this.cursor,this.cursor+t)!=n||(this.cursor+=t,0))}eq_s_b(t,n){return"string"==typeof t&&(t=(n=t).length),!(this.cursor-this.limit_backward<t||this.current.slice(this.cursor-t,this.cursor)!=n||(this.cursor-=t,0))}find_among(t,n){let e=0,i=n||t.length;const s=this.cursor,r=this.limit;let a=0,o=0,u=!1;for(;;){const n=e+(i-e>>>1);let h=0,g=a<o?a:o;var l,c=t[n];for(l=g;l<c.s_size;l++){if(s+g==r){h=-1;break}if(h=this.current.charCodeAt(s+g)-c.s.charCodeAt(l),0!=h)break;g++}if(h<0?(i=n,o=g):(e=n,a=g),i-e<=1){if(e>0)break;if(i==e)break;if(u)break;u=!0}}for(;;){if(a>=(c=t[e]).s_size){if(this.cursor=s+c.s_size,null==c.method)return c.result;const t=c.method(c.instance);if(this.cursor=s+c.s_size,t)return c.result}if(e=c.substring_i,e<0)return 0}return-1}find_among_b(t,n){let e=0,i=n||t.length;const s=this.cursor,r=this.limit_backward;let a=0,o=0,u=!1;for(;;){const n=e+(i-e>>1);let h=0,g=a<o?a:o;var l;for(l=(c=t[n]).s_size-1-g;l>=0;l--){if(s-g==r){h=-1;break}if(h=this.current.charCodeAt(s-1-g)-c.s.charCodeAt(l),0!=h)break;g++}if(h<0?(i=n,o=g):(e=n,a=g),i-e<=1){if(e>0)break;if(i==e)break;if(u)break;u=!0}}for(;;){var c;if(a>=(c=t[e]).s_size){if(this.cursor=s-c.s_size,null==c.method)return c.result;const t=c.method(this);if(this.cursor=s-c.s_size,t)return c.result}if(e=c.substring_i,e<0)return 0}return-1}replace_s(t,n,e){const i=e.length-(n-t);return this.current=this.current.slice(0,t)+e+this.current.slice(n),this.limit+=i,this.cursor>=n?this.cursor+=i:this.cursor>t&&(this.cursor=t),i}slice_check(){return!(this.bra<0||this.bra>this.ket||this.ket>this.limit||this.limit>this.current.length)}slice_from(t){return!!this.slice_check()&&(this.replace_s(this.bra,this.ket,t),!0)}slice_del(){return this.slice_from("")}insert(t,n,e){const i=this.replace_s(t,n,e);t<=this.bra&&(this.bra+=i),t<=this.ket&&(this.ket+=i)}slice_to(t){let n="";return this.slice_check()&&(n=this.current.slice(this.bra,this.ket)),n}stemWord(t){let n=this.cache[`.${t}`];return null==n&&(this.dictionary.before.hasOwnProperty(t)?n=this.dictionary.before[t]:(this.setCurrent(t),this.innerStem(),n=this.getCurrent(),this.dictionary.after.hasOwnProperty(n)&&(n=this.dictionary.after[n])),this.cache[`.${t}`]=n),n}stemWords(t){const n=[];for(let e=0;e<t.length;e++){const i=this.stemWord(t[e]);i&&n.push(i.trim())}return n}stem(t){return null==t?t:Array.isArray(t)?this.stemWords(t):this.stemWords([t])[0]}getTokenizer(){return this.tokenizer||(this.tokenizer=this.container.get(`tokenizer-${this.name.slice(-2)}`)||new s),this.tokenizer}getStopwords(){return this.stopwords||(this.stopwords=this.container.get(`tokenizer-${this.name.slice(-2)}`)),this.stopwords}tokenizeAndStem(t,n=!0){let e=this.getTokenizer().tokenize(t,!0);if(!n){const t=this.getStopwords();t&&(e=t.removeStopwords(e))}return this.stemWords(e)}}},4979:(t,n,e)=>{const{defaultContainer:i}=e(8614);t.exports=class{constructor(t={},n=i){this.container=t.container||n,this.applySettings(this,t)}get logger(){return this.container.get("logger")}applySettings(t,n={}){const e=t||{};return Object.keys(n).forEach((t=>{void 0===e[t]&&(e[t]=n[t])})),e}toJSON(){const t=this.jsonExport||{},n={},e=Object.keys(this);for(let i=0;i<e.length;i+=1){const s=e[i];if("jsonExport"!==s&&"jsonImport"!==s&&"container"!==s&&!s.startsWith("pipeline")){const e=void 0===t[s]||t[s];if("function"==typeof e){const t=e.bind(this)(n,this,s,this[s]);t&&(n[s]=t)}else"boolean"==typeof e?e&&(n[s]=this[s],"settings"===s&&delete n[s].container):"string"==typeof e&&(n[e]=this[s])}}return n}fromJSON(t){const n=this.jsonImport||{},e=Object.keys(t);for(let i=0;i<e.length;i+=1){const s=e[i],r=void 0===n[s]||n[s];if("function"==typeof r){const n=r.bind(this)(this,t,s,t[s]);n&&(this[s]=n)}else"boolean"==typeof r?r&&(this[s]=t[s]):"string"==typeof r&&(this[r]=t[s])}}objToValues(t,n){const e=n||Object.keys(t),i=[];for(let n=0;n<e.length;n+=1)i.push(t[e[n]]);return i}valuesToObj(t,n){const e={};for(let i=0;i<t.length;i+=1)e[n[i]]=t[i];return e}getPipeline(t){return this.container.getPipeline(t)}async runPipeline(t,n){return this.container.runPipeline(n||this.pipeline,t,this)}use(t){this.container.use(t)}}},2082:(t,n,e)=>{const i=e(1401),{Container:s}=e(8614),r=e(1867),a=e(8392),{loadEnvFromJson:o}=e(2754),u=e(4647),l=e(7484),c=e(4658),h=e(531),g=e(683),d=e(2187),f=e(5304);function p(t,n){if("string"==typeof t)return t.startsWith("$")?process.env[`${n}${t.slice(1)}`]||process.env[t.slice(1)]:t;if(Array.isArray(t))return t.map((t=>p(t,n)));if("object"==typeof t){const e=Object.keys(t),i={};for(let s=0;s<e.length;s+=1)i[e[s]]=p(t[e[s]],n);return i}return t}t.exports=function(t,n,e,m,y,w){const b=t||{},k=e||new s(m);k.parent=w,m||(k.register("fs",f),k.use(i),k.use(r),k.use(a),k.use(u),k.use(l),k.use(c),k.use(h),k.use(g),k.use(d));const v=b;let x;if(b.env&&o(m,b.env),x=v,x=p(x,m?`${m}_`:""),x.settings){const t=Object.keys(x.settings);for(let n=0;n<t.length;n+=1)k.registerConfiguration(t[n],x.settings[t[n]],!0)}if(x.use)for(let t=0;t<x.use.length;t+=1){const n=x.use[t];Array.isArray(n)?k.register(n[0],n[1]):k.use(n)}if(x.terraform)for(let t=0;t<x.terraform.length;t+=1){const n=x.terraform[t],e=k.get(n.className);k.register(n.name,e,!0)}if(x.childs&&(k.childs=x.childs),y)for(let t=0;t<y.length;t+=1){const n=y[t];k.registerPipeline(n.tag,n.pipeline,n.overwrite)}return x.pipelines&&function(t,n){t.loadPipelinesFromString(n)}(k,x.pipelines),k}},8614:(t,n,e)=>{const{compareWildcars:i}=e(2754),s=e(3657),r=e(683);class a{constructor(t=!1){this.classes={},this.factory={},this.pipelines={},this.configurations={},this.compilers={},this.cache={bestKeys:{},pipelines:{}},this.registerCompiler(s),t||this.use(r)}registerCompiler(t,n){const e=new t(this);this.compilers[n||e.name]=e}addClass(t,n){this.classes[n||t.name]=t}toJSON(t){const n=t.toJSON?t.toJSON():{...t};return n.className=t.constructor.name,n}fromJSON(t,n){const e=this.classes[t.className];let i;return e?(i=new e(n),i.fromJSON?i.fromJSON(t):Object.assign(i,t)):i={...t},delete i.className,i}register(t,n,e=!0){this.cache.bestKeys={};const i="function"==typeof n,s={name:t,isSingleton:e};s.instance=e?i?new n:n:i?n:n.constructor,this.factory[t]=s}getBestKey(t){if(void 0!==this.cache.bestKeys[t])return this.cache.bestKeys[t];const n=Object.keys(this.factory);for(let e=0;e<n.length;e+=1)if(i(t,n[e]))return this.cache.bestKeys[t]=n[e],n[e];this.cache.bestKeys[t]=null}get(t,n){let e=this.factory[t];if(!e){if(this.parent)return this.parent.get(t,n);const i=this.getBestKey(t);if(i&&(e=this.factory[i]),!e)return}return e.isSingleton?(e.instance&&e.instance.applySettings&&e.instance.applySettings(e.instance.settings,n),e.instance):new(0,e.instance)(n,this)}buildLiteral(t,n,e,i){return{type:"literal",subtype:t,src:n,value:e,context:i,container:this}}resolvePathWithType(t,n,e,i){const s=t.split(".");let r=s[0].trim();if(r||(r=t.startsWith(".")?"this":"context"),/^\d+$/.test(r))return this.buildLiteral("number",t,parseFloat(r),n);if(r.startsWith('"'))return this.buildLiteral("string",t,r.replace(/^"(.+(?="$))"$/,"$1"),n);if(r.startsWith("'"))return this.buildLiteral("string",t,r.replace(/^'(.+(?='$))'$/,"$1"),n);if("true"===r)return this.buildLiteral("boolean",t,!0,n);if("false"===r)return this.buildLiteral("boolean",t,!1,n);let a=n;"input"===r||"output"===r?a=e:r&&"context"!==r&&"this"!==r?a=this.get(r)||a[r]:"this"===r&&(a=i);for(let n=1;n<s.length;n+=1){const e=s[n];if((!a||!a[e])&&n<s.length-1)throw Error(`Path not found in pipeline "${t}"`);const i=a;a=a[e],"function"==typeof a&&(a=a.bind(i))}return"function"==typeof a?{type:"function",src:t,value:a,context:n,container:this}:{type:"reference",src:t,value:a,context:n,container:this}}resolvePath(t,n,e,i){const s=this.resolvePathWithType(t,n,e,i);return s?s.value:s}setValue(t,n,e,i,s){const r=this.resolvePath(n,e,i,s),a=t.split("."),o=a.slice(0,-1).join(".");this.resolvePath(o,e,i,s)[a[a.length-1]]=r}incValue(t,n,e,i,s){const r=this.resolvePath(n,e,i,s),a=t.split(".");t.startsWith(".")&&a.push("this");const o=a.slice(0,-1).join(".");this.resolvePath(o,e,i,s)[a[a.length-1]]+=r}decValue(t,n,e,i,s){const r=this.resolvePath(n,e,i,s),a=t.split("."),o=a.slice(0,-1).join(".");this.resolvePath(o,e,i,s)[a[a.length-1]]-=r}eqValue(t,n,e,i,s){const r=e,a=this.resolvePath(t,r,i,s),o=this.resolvePath(n,r,i,s);r.floating=a===o}neqValue(t,n,e,i,s){const r=e,a=this.resolvePath(t,r,i,s),o=this.resolvePath(n,r,i,s);r.floating=a!==o}gtValue(t,n,e,i,s){const r=e,a=this.resolvePath(t,r,i,s),o=this.resolvePath(n,r,i,s);r.floating=a>o}geValue(t,n,e,i,s){const r=e,a=this.resolvePath(t,r,i,s),o=this.resolvePath(n,r,i,s);r.floating=a>=o}ltValue(t,n,e,i,s){const r=e,a=this.resolvePath(t,r,i,s),o=this.resolvePath(n,r,i,s);r.floating=a<o}leValue(t,n,e,i,s){const r=e,a=this.resolvePath(t,r,i,s),o=this.resolvePath(n,r,i,s);r.floating=a<=o}deleteValue(t,n,e,i){const s=t.split("."),r=s.slice(0,-1).join(".");delete this.resolvePath(r,n,e,i)[s[s.length-1]]}getValue(t,n,e,i){const s=(t||"floating").split("."),r=s.slice(0,-1).join(".");return this.resolvePath(r,n,e,i)[s[s.length-1]]}async runPipeline(t,n,e,i=0){if(i>10)throw new Error("Pipeline depth is too high: perhaps you are using recursive pipelines?");const s="string"==typeof t?this.getPipeline(t):t;if(!s)throw new Error(`Pipeline not found ${t}`);if(!s.compiler){const t=JSON.stringify(s);this.registerPipeline(t,s,!1);const r=this.getPipeline(t);return r.compiler.execute(r.compiled,n,e,i)}return s.compiler.execute(s.compiled,n,e,i)}use(t,n,e,i=!1){let s;if("function"==typeof t){if(t.name.endsWith("Compiler"))return this.registerCompiler(t),t.name;s=new t({container:this})}else s=t;s.register&&s.register(this);const r=s.settings?s.settings.tag:void 0,a=n||s.name||r||t.name||s.constructor.name;return i&&this.get(a)||this.register(a,s,e),a}getCompiler(t){return this.compilers[t]||(this.parent?this.parent.getCompiler(t):this.compilers.default)}buildPipeline(t,n=[]){const e=[];if(t&&t.length>0)for(let i=0;i<t.length;i+=1){const s=t[i];if("$super"===s.trim())for(let t=0;t<n.length;t+=1)n[t].trim().startsWith("->")||e.push(n[t]);else e.push(s)}const i=e.length&&e[0].startsWith("// compiler=")?e[0].slice(12):"default",s=this.getCompiler(i),r=s.compile(e);return{pipeline:e,compiler:s,compiled:r}}registerPipeline(t,n,e=!0){if(e||!this.pipelines[t]){this.cache.pipelines={};const e=this.getPipeline(t);this.pipelines[t]=this.buildPipeline(n,e?e.pipeline:[])}}registerPipelineForChilds(t,n,e,i=!0){this.childPipelines||(this.childPipelines={}),this.childPipelines[t]||(this.childPipelines[t]=[]),this.childPipelines[t].push({tag:n,pipeline:e,overwrite:i})}getPipeline(t){if(this.pipelines[t])return this.pipelines[t];if(void 0!==this.cache.pipelines[t])return this.cache.pipelines[t]||void 0;const n=Object.keys(this.pipelines);for(let e=0;e<n.length;e+=1)if(i(t,n[e]))return this.cache.pipelines[t]=this.pipelines[n[e]],this.pipelines[n[e]];this.cache.pipelines[t]=null}registerConfiguration(t,n,e=!0){!e&&this.configurations[t]||(this.configurations[t]=n)}getConfiguration(t){if(this.configurations[t])return this.configurations[t];const n=Object.keys(this.configurations);for(let e=0;e<n.length;e+=1)if(i(t,n[e]))return this.configurations[n[e]]}loadPipelinesFromString(t=""){const n=t.split(/\n|\r|\r\n/);let e="",i=[],s="";for(let t=0;t<n.length;t+=1){const r=n[t];""!==r&&(r.startsWith("# ")?(e&&(s&&!["default","pipelines"].includes(s.toLowerCase())?this.registerPipelineForChilds(s,e,i):this.registerPipeline(e,i)),s=r.slice(1).trim(),e="",i=[]):r.startsWith("## ")?(e&&(s&&!["default","pipelines"].includes(s.toLowerCase())?this.registerPipelineForChilds(s,e,i):this.registerPipeline(e,i)),e=r.slice(2).trim(),i=[]):e&&i.push(r))}e&&(s&&!["default","pipelines"].includes(s.toLowerCase())?this.registerPipelineForChilds(s,e,i):this.registerPipeline(e,i))}async start(t="main"){const n=Object.keys(this.factory);for(let t=0;t<n.length;t+=1){const e=this.factory[n[t]];e.isSingleton&&e.instance&&e.instance.start&&await e.instance.start()}this.getPipeline(t)&&await this.runPipeline(t,{},this)}}const o=new a;t.exports={Container:a,defaultContainer:o}},792:(t,n,e)=>{const{defaultContainer:i}=e(8614),s=e(4979);t.exports=class extends s{constructor(t={},n=void 0){super({settings:{},container:t.container||n||i},n),this.applySettings(this.settings,t),this.settings.tag||(this.settings.tag="context"),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag))}getStorage(){const t=this.container.get(this.settings.storageName||"storage");if(!t)throw new Error("Storage not found");return t}getContext(t){return this.getStorage().read(`${this.settings.tag}-${t}`)}setContext(t,n){const e={[t]:n};return this.getStorage().write(e)}async getContextValue(t,n){const e=await this.getContext(t);return e?e[n]:void 0}async setContextValue(t,n,e){let i=await this.getContext(t);return i||(i={}),i[n]=e,this.setContext(t,i)}}},3657:t=>{t.exports=class{constructor(t){this.container=t.container||t,this.name="default"}getTokenFromWord(t){return t.startsWith("//")?{type:"comment",value:t}:["set","delete","get","inc","dec","eq","neq","gt","ge","lt","le","label","goto","jne","je"].includes(t)?{type:t,arguments:[]}:t.startsWith("$")?{type:"call",value:t.slice(1)}:{type:"reference",value:t}}compile(t){const n=[];for(let e=0;e<t.length;e+=1){const i=t[e].trim().split(" "),s=[];let r,a="";for(let t=0;t<i.length;t+=1){const n=i[t];let e=!1;r?(a=`${a} ${n}`,e=!0,n.endsWith(r)&&(r=void 0,s.push(this.getTokenFromWord(a)))):n.startsWith('"')?(a=n,e=!0,r='"',n.endsWith('"')&&(r=void 0,s.push(this.getTokenFromWord(a)))):n.startsWith("'")&&(a=n,e=!0,r="'",n.endsWith("'")&&(r=void 0,s.push(this.getTokenFromWord(a)))),e||s.push(this.getTokenFromWord(n))}n.push(s)}return n}executeCall(t,n,e,i,s){const r=this.container.getPipeline(t.value);if(!r)throw new Error(`Pipeline $${t.value} not found.`);return this.container.runPipeline(r,e,i,s+1)}executeReference(t,n,e,i,s){const r=this.container.resolvePath(n.value,e,i,s),a=[];for(let n=1;n<t.length;n+=1)a.push(this.container.resolvePathWithType(t[n].value,e,i,s));if(!r)throw new Error(`Method not found for step ${JSON.stringify(t)}`);const o=r.run||r;return"function"==typeof o?"function"==typeof r?o(i,...a):o.bind(r)(i,...a):o}doGoto(t,n){const e=n,i=e.labels[t];e.cursor=i}async executeAction(t,n,e,i,s){let r=t[0];if(r&&r.value&&r.value.startsWith("->")){if(s>0)return e;r={...r},r.value=r.value.slice(2)}switch(r.type){case"set":this.container.setValue(t[1].value,t[2]?t[2].value:void 0,n,e,i);break;case"delete":this.container.deleteValue(t[1].value,n,e,i);break;case"get":return this.container.getValue(t[1]?t[1].value:void 0,n,e,i);case"inc":this.container.incValue(t[1]?t[1].value:void 0,t[2]?t[2].value:"1",n,e,i);break;case"dec":this.container.decValue(t[1]?t[1].value:void 0,t[2]?t[2].value:"1",n,e,i);break;case"eq":this.container.eqValue(t[1]?t[1].value:void 0,t[2]?t[2].value:void 0,n,e,i);break;case"neq":this.container.neqValue(t[1]?t[1].value:void 0,t[2]?t[2].value:void 0,n,e,i);break;case"gt":this.container.gtValue(t[1]?t[1].value:void 0,t[2]?t[2].value:void 0,n,e,i);break;case"ge":this.container.geValue(t[1]?t[1].value:void 0,t[2]?t[2].value:void 0,n,e,i);break;case"lt":this.container.ltValue(t[1]?t[1].value:void 0,t[2]?t[2].value:void 0,n,e,i);break;case"le":this.container.leValue(t[1]?t[1].value:void 0,t[2]?t[2].value:void 0,n,e,i);break;case"goto":this.doGoto(t[1].value,n);break;case"jne":n.floating||this.doGoto(t[1].value,n);break;case"je":n.floating&&this.doGoto(t[1].value,n);break;case"call":return this.executeCall(r,n,e,i,s);case"reference":return this.executeReference(t,r,n,e,i)}return e}findLabels(t,n){const e=n;for(let n=0;n<t.length;n+=1){const i=t[n];"label"===i[0].type&&(e[i[1].value]=n)}}async execute(t,n,e,i){let s=n;const r={cursor:0,labels:{}};for(this.findLabels(t,r.labels);r.cursor<t.length;)s=await this.executeAction(t[r.cursor],r,s,e,i),r.cursor+=1;return s}}},8015:(t,n,e)=>{const i=e(2082),s=new class{constructor(){this.containers={}}getContainer(t){return this.containers[t||"default"]}async createContainer(t,n,e,s,r,a){const o=void 0===e||e;if("string"!=typeof t&&(n=t,t=""),n||"default"!==t&&""!==t||(n="conf.json"),!this.containers[t]){const e=i(n,o,void 0,s,a);e.name=t,this.containers[t]=e,e.dock=this,e.parent=r,await e.start(),e.childs&&await this.buildChilds(e)}return this.containers[t]}async buildChilds(t){if(t&&t.childs){const n=Object.keys(t.childs),e={};for(let i=0;i<n.length;i+=1){const s=t.childs[n[i]];s.isChild=!0,s.pathPipeline||(s.pathPipeline=`${n[i]}_pipeline.md`),e[n[i]]=await this.createContainer(n[i],s,!1,n[i],t,t.childPipelines?t.childPipelines[n[i]]:void 0)}t.childs=e}}async terraform(t,n=!0){return await this.createContainer("default",t,n,"")}start(t,n=!0){return this.terraform(t,n)}};t.exports=s},2754:t=>{const n="\\ud800-\\udfff",e="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\u1ab0-\\u1aff\\u1dc0-\\u1dff",i="\\ufe0e\\ufe0f",s=`[${n}]`,r=`[${e}]`,a="\\ud83c[\\udffb-\\udfff]",o=`[^${n}]`,u="(?:\\ud83c[\\udde6-\\uddff]){2}",l="[\\ud800-\\udbff][\\udc00-\\udfff]",c="\\u200d",h=`(?:${r}|${a})?`,g=`[${i}]?`,d=g+h+`(?:${c}(?:${[o,u,l].join("|")})${g+h})*`,f=`(?:${[`${o}${r}?`,r,u,l,s].join("|")})`,p=RegExp(`[${c+n+e+i}]`),m=RegExp(`${a}(?=${a})|${f+d}`,"g"),y=t=>p.test(t),w=t=>t.match(m)||[],b=t=>t.split("");t.exports={hasUnicode:y,unicodeToArray:w,asciiToArray:b,stringToArray:t=>y(t)?w(t):b(t),compareWildcars:function(t,n){const e=`^${n.split("*").map((t=>t.replace(/([.*+^=!:${}()|[\]/\\])/g,"\\$1"))).join(".*")}$`.replace(/\?/g,".");return new RegExp(e).test(t)},loadEnvFromJson:function(t,n={}){const e=Object.keys(n);t=t?`${t}_`:"";for(let i=0;i<e.length;i+=1){const s=`${t}${e[i]}`;process.env[s]=n[e[i]]}}}},79:(t,n,e)=>{const i=e(2545),s=e(1401),r=e(5051),a=e(2082),o=e(4979),{Container:u,defaultContainer:l}=e(8614),c=e(1867),h=e(8392),g=e(4647),d=e(7484),f=e(4658),p=e(531),m=e(683),{hasUnicode:y,unicodeToArray:w,asciiToArray:b,stringToArray:k,compareWildcars:v,loadEnv:x}=e(2754),D=e(2187),A=e(8873),F=e(8015),E=e(792);t.exports={Among:i,ArrToObj:s,BaseStemmer:r,containerBootstrap:a,Clonable:o,Container:u,defaultContainer:l,hasUnicode:y,unicodeToArray:w,asciiToArray:b,stringToArray:k,compareWildcars:v,loadEnv:x,Normalizer:c,ObjToArr:h,Stemmer:g,Stopwords:d,Tokenizer:f,Timer:p,logger:m,MemoryStorage:D,uuid:A,dock:F,Context:E,dockStart:async function(t,n){return await F.start(t,n),F}}},683:t=>{const n=new class{constructor(){this.name="logger"}debug(...t){console.debug(...t)}info(...t){console.info(...t)}warn(...t){console.warn(...t)}error(...t){console.error(...t)}log(...t){console.log(...t)}trace(...t){console.trace(...t)}fatal(...t){console.error(...t)}};t.exports=n},2187:(t,n,e)=>{const{defaultContainer:i}=e(8614),s=e(4979);t.exports=class extends s{constructor(t={},n=void 0){super({settings:{},container:t.container||n||i},n),this.applySettings(this.settings,t),this.applySettings(this.settings,{etag:1,memory:{}}),this.settings.tag||(this.settings.tag="storage"),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag))}read(t){return new Promise((n=>{const e={};Array.isArray(t)||(t=[t]),t.forEach((t=>{const n=this.settings.memory[t];n&&(e[t]=JSON.parse(n))})),n(e)}))}saveItem(t,n){const e={...n};return e.eTag=this.settings.etag.toString(),this.settings.etag+=1,this.settings.memory[t]=JSON.stringify(e),e}write(t){return new Promise(((n,e)=>{Object.keys(t).forEach((i=>{const s=t[i],r=this.settings.memory[i];if(!r||"*"===s.eTag)return n(this.saveItem(i,s));const a=JSON.parse(r);return s.eTag!==a.eTag?e(new Error(`Error writing "${i}" due to eTag conflict.`)):n(this.saveItem(i,s))}))}))}delete(t){return new Promise((n=>{t.forEach((t=>delete this.settings.memory[t])),n()}))}}},5304:t=>{t.exports={readFile:function(){return new Promise((t=>{t(void 0)}))},writeFile:function(){return new Promise(((t,n)=>{n(new Error("File cannot be written in web"))}))},existsSync:function(){return!1},lstatSync:function(){},readFileSync:function(){},name:"fs"}},1867:(t,n,e)=>{const{defaultContainer:i}=e(8614);t.exports=class{constructor(t=i){this.container=t.container||t,this.name="normalize"}normalize(t){return t.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase()}run(t){const n=t,e=n.locale||"en",i=this.container.get(`normalizer-${e}`)||this;return n.text=i.normalize(n.text,n),n}}},8392:(t,n,e)=>{const{defaultContainer:i}=e(8614);class s{constructor(t=i){this.container=t.container||t,this.name="objToArr"}static objToArr(t){return Object.keys(t)}run(t){return t.tokens?(t.tokens=s.objToArr(t.tokens),t):s.objToArr(t)}}t.exports=s},4647:(t,n,e)=>{const{defaultContainer:i}=e(8614);t.exports=class{constructor(t=i){this.container=t.container||t,this.name="stem"}stem(t){return t}getStemmer(t){const n=t,e=n.locale||n.settings&&n.settings.locale||"en";let i=this.container.get(`stemmer-${e}`);if(!i){const t=this.container.get("stemmer-bert");i=t&&t.activeFor(e)?t:this}return i}async addForTraining(t){const n=this.getStemmer(t);return n.addUtterance&&await n.addUtterance(t.utterance,t.intent),t}async train(t){const n=this.getStemmer(t);return n.innerTrain&&await n.innerTrain(),t}async run(t){const n=t,e=this.getStemmer(n);return n.tokens=await e.stem(n.tokens,n),n}}},7484:(t,n,e)=>{const{defaultContainer:i}=e(8614);t.exports=class{constructor(t=i){this.container=t.container||t,this.name="removeStopwords",this.dictionary={}}build(t){for(let n=0;n<t.length;n+=1)this.dictionary[t[n]]=!0}isNotStopword(t){return!this.dictionary[t]}isStopword(t){return!!this.dictionary[t]}removeStopwords(t){return t.filter((t=>this.isNotStopword(t)))}run(t){if(t.settings&&!1===t.settings.keepStopwords){const n=t,e=n.locale||"en",i=this.container.get(`stopwords-${e}`)||this;return n.tokens=i.removeStopwords(n.tokens,n).filter((t=>t)),n}return t}}},531:(t,n,e)=>{const{defaultContainer:i}=e(8614);t.exports=class{constructor(t=i){this.container=t.container||t,this.name="timer"}start(t){return t&&(t.hrstart=new Date),t}stop(t){const n=t;if(n&&n.hrstart){const t=new Date;n.elapsed=t.getTime()-n.hrstart.getTime(),delete n.hrstart}return n}run(t){this.start(t)}}},4658:(t,n,e)=>{const{defaultContainer:i}=e(8614),s=e(1867);t.exports=class{constructor(t=i,n=!1){this.container=t.container||t,this.name="tokenize",this.shouldNormalize=n}getNormalizer(){return this.normalizer||(this.normalizer=this.container.get(`normalizer-${this.name.slice(-2)}`)||new s),this.normalizer}normalize(t,n){return void 0===n&&this.shouldNormalize||!0===n?this.getNormalizer().normalize(t):t}innerTokenize(t){return t.split(/[\s,.!?;:([\]'"¡¿)/]+/).filter((t=>t))}tokenize(t,n){let e;if(this.cache){const t=new Date;Math.abs(t.getTime()-this.cache.created)/36e5>1&&(this.cache=void 0)}if(this.cache){if(n?Object.prototype.hasOwnProperty.call(this.cache.normalized,t)&&(e=this.cache.normalized[t]):Object.prototype.hasOwnProperty.call(this.cache.nonNormalized,t)&&(e=this.cache.nonNormalized[t]),e)return e}else this.cache={created:(new Date).getTime(),normalized:{},nonNormalized:{}};return e=this.innerTokenize(this.normalize(t,n),n),n?this.cache.normalized[t]=e:this.cache.nonNormalized[t]=e,e}async run(t){const n=t,e=n.locale||"en";let i=this.container.get(`tokenizer-${e}`);if(!i){const t=this.container.get("tokenizer-bert");i=t&&t.activeFor(e)?t:this}const s=await i.tokenize(n.text,n);return n.tokens=s.filter((t=>t)),n}}},8873:t=>{t.exports=function(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return`${t()+t()}-${t()}-${t()}-${t()}-${t()}${t()}${t()}`}},6428:(t,n,e)=>{const i=e(7722),s=e(6257),r=e(403),a=e(2316),o=e(4397),u=e(1855),l=e(4326);t.exports={LangEn:i,StemmerEn:r,StopwordsEn:a,TokenizerEn:s,NormalizerEn:o,SentimentEn:u,registerTrigrams:l}},7722:(t,n,e)=>{const i=e(6257),s=e(403),r=e(2316),a=e(4397),o=e(1855),u=e(4326);t.exports=class{register(t){t.use(i),t.use(s),t.use(r),t.use(a),t.register("sentiment-en",o),u(t)}}},4397:(t,n,e)=>{const{Normalizer:i}=e(79);t.exports=class extends i{constructor(t){super(t),this.name="normalizer-en"}normalize(t){return t.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase()}run(t){const n=t;return n.text=this.normalize(n.text,n),n}}},1855:t=>{t.exports={senticon:void 0,afinn:void 0,pattern:void 0,negations:{words:[]}}},403:(t,n,e)=>{const{Among:i,BaseStemmer:s}=e(79),r=e(6257);class a extends s{constructor(t){super(t),this.name="stemmer-en",this.B_Y_found=!1,this.I_p2=0,this.I_p1=0}getTokenizer(){return this.tokenizer||(this.tokenizer=this.container.get(`tokenizer-${this.name.slice(-2)}`)||new r,"Tokenizer"===this.tokenizer.constructor.name&&(this.tokenizer=new r)),this.tokenizer}r_prelude(){let t,n,e,i,s;this.B_Y_found=!1,t=this.cursor;let r=!0;for(;1==r&&(r=!1,this.bra=this.cursor,this.eq_s("'"));)if(this.ket=this.cursor,!this.slice_del())return!1;this.cursor=t,n=this.cursor;let o=!0;for(;1==o&&(o=!1,this.bra=this.cursor,this.eq_s("y"));){if(this.ket=this.cursor,!this.slice_from("Y"))return!1;this.B_Y_found=!0}this.cursor=n,e=this.cursor;let u=!0;for(;1==u;){u=!1;t:for(;;){i=this.cursor;let t=!0;n:for(;1==t;){t=!1;e:for(;;){s=this.cursor;let t=!0;for(;1==t&&(t=!1,this.in_grouping(a.g_v,97,121))&&(this.bra=this.cursor,this.eq_s("y"));){this.ket=this.cursor,this.cursor=s;break e}if(this.cursor=s,this.cursor>=this.limit)break n;this.cursor++}if(!this.slice_from("Y"))return!1;this.B_Y_found=!0;continue t}this.cursor=i;break}}return this.cursor=e,!0}r_mark_regions(){let t,n;this.I_p1=this.limit,this.I_p2=this.limit,t=this.cursor;let e=!0;t:for(;1==e;){e=!1;let t=!0;n:for(;1==t;){t=!1,n=this.cursor;let e=!0;for(;1==e&&(e=!1,0!=this.find_among(a.a_0,3));)break n;this.cursor=n;e:for(;;){let t=!0;for(;1==t&&(t=!1,this.in_grouping(a.g_v,97,121));)break e;if(this.cursor>=this.limit)break t;this.cursor++}e:for(;;){let t=!0;for(;1==t&&(t=!1,this.out_grouping(a.g_v,97,121));)break e;if(this.cursor>=this.limit)break t;this.cursor++}}this.I_p1=this.cursor;n:for(;;){let t=!0;for(;1==t&&(t=!1,this.in_grouping(a.g_v,97,121));)break n;if(this.cursor>=this.limit)break t;this.cursor++}n:for(;;){let t=!0;for(;1==t&&(t=!1,this.out_grouping(a.g_v,97,121));)break n;if(this.cursor>=this.limit)break t;this.cursor++}this.I_p2=this.cursor}return this.cursor=t,!0}r_shortv(){let t,n=!0;t:for(;1==n;){n=!1,t=this.limit-this.cursor;let e=!0;for(;1==e&&(e=!1,this.out_grouping_b(a.g_v_WXY,89,121))&&this.in_grouping_b(a.g_v,97,121)&&this.out_grouping_b(a.g_v,97,121);)break t;if(this.cursor=this.limit-t,!this.out_grouping_b(a.g_v,97,121))return!1;if(!this.in_grouping_b(a.g_v,97,121))return!1;if(this.cursor>this.limit_backward)return!1}return!0}r_R1(){return this.I_p1<=this.cursor}r_R2(){return this.I_p2<=this.cursor}r_Step_1a(){let t,n,e;n=this.limit-this.cursor;let i=!0;t:for(;1==i;){if(i=!1,this.ket=this.cursor,t=this.find_among_b(a.a_1,3),0==t){this.cursor=this.limit-n;break}switch(this.bra=this.cursor,t){case 0:this.cursor=this.limit-n;break t;case 1:if(!this.slice_del())return!1}}if(this.ket=this.cursor,t=this.find_among_b(a.a_2,6),0==t)return!1;switch(this.bra=this.cursor,t){case 0:return!1;case 1:if(!this.slice_from("ss"))return!1;break;case 2:var s=!0;t:for(;1==s;){s=!1,e=this.limit-this.cursor;let t=!0;for(;1==t;){t=!1;{const t=this.cursor-2;if(this.limit_backward>t||t>this.limit)break;this.cursor=t}if(!this.slice_from("i"))return!1;break t}if(this.cursor=this.limit-e,!this.slice_from("ie"))return!1}break;case 3:if(this.cursor<=this.limit_backward)return!1;this.cursor--;t:for(;;){let t=!0;for(;1==t&&(t=!1,this.in_grouping_b(a.g_v,97,121));)break t;if(this.cursor<=this.limit_backward)return!1;this.cursor--}if(!this.slice_del())return!1}return!0}r_Step_1b(){let t,n,e,i;if(this.ket=this.cursor,t=this.find_among_b(a.a_4,6),0==t)return!1;switch(this.bra=this.cursor,t){case 0:return!1;case 1:if(!this.r_R1())return!1;if(!this.slice_from("ee"))return!1;break;case 2:n=this.limit-this.cursor;t:for(;;){let t=!0;for(;1==t&&(t=!1,this.in_grouping_b(a.g_v,97,121));)break t;if(this.cursor<=this.limit_backward)return!1;this.cursor--}if(this.cursor=this.limit-n,!this.slice_del())return!1;if(e=this.limit-this.cursor,t=this.find_among_b(a.a_3,13),0==t)return!1;switch(this.cursor=this.limit-e,t){case 0:return!1;case 1:var s=this.cursor;this.insert(this.cursor,this.cursor,"e"),this.cursor=s;break;case 2:if(this.ket=this.cursor,this.cursor<=this.limit_backward)return!1;if(this.cursor--,this.bra=this.cursor,!this.slice_del())return!1;break;case 3:if(this.cursor!=this.I_p1)return!1;if(i=this.limit-this.cursor,!this.r_shortv())return!1;this.cursor=this.limit-i,s=this.cursor,this.insert(this.cursor,this.cursor,"e"),this.cursor=s}}return!0}r_Step_1c(){let t,n;this.ket=this.cursor;let e=!0;t:for(;1==e;){e=!1,t=this.limit-this.cursor;let n=!0;for(;1==n&&(n=!1,this.eq_s_b("y"));)break t;if(this.cursor=this.limit-t,!this.eq_s_b("Y"))return!1}if(this.bra=this.cursor,!this.out_grouping_b(a.g_v,97,121))return!1;{n=this.limit-this.cursor;let t=!0;for(;1==t&&(t=!1,!(this.cursor>this.limit_backward));)return!1;this.cursor=this.limit-n}return!!this.slice_from("i")}r_Step_2(){let t;if(this.ket=this.cursor,t=this.find_among_b(a.a_5,24),0==t)return!1;if(this.bra=this.cursor,!this.r_R1())return!1;switch(t){case 0:return!1;case 1:if(!this.slice_from("tion"))return!1;break;case 2:if(!this.slice_from("ence"))return!1;break;case 3:if(!this.slice_from("ance"))return!1;break;case 4:if(!this.slice_from("able"))return!1;break;case 5:if(!this.slice_from("ent"))return!1;break;case 6:if(!this.slice_from("ize"))return!1;break;case 7:if(!this.slice_from("ate"))return!1;break;case 8:if(!this.slice_from("al"))return!1;break;case 9:case 14:if(!this.slice_from("ful"))return!1;break;case 10:if(!this.slice_from("ous"))return!1;break;case 11:if(!this.slice_from("ive"))return!1;break;case 12:if(!this.slice_from("ble"))return!1;break;case 13:if(!this.eq_s_b("l"))return!1;if(!this.slice_from("og"))return!1;break;case 15:if(!this.slice_from("less"))return!1;break;case 16:if(!this.in_grouping_b(a.g_valid_LI,99,116))return!1;if(!this.slice_del())return!1}return!0}r_Step_3(){let t;if(this.ket=this.cursor,t=this.find_among_b(a.a_6,9),0==t)return!1;if(this.bra=this.cursor,!this.r_R1())return!1;switch(t){case 0:return!1;case 1:if(!this.slice_from("tion"))return!1;break;case 2:if(!this.slice_from("ate"))return!1;break;case 3:if(!this.slice_from("al"))return!1;break;case 4:if(!this.slice_from("ic"))return!1;break;case 5:if(!this.slice_del())return!1;break;case 6:if(!this.r_R2())return!1;if(!this.slice_del())return!1}return!0}r_Step_4(){let t,n;if(this.ket=this.cursor,t=this.find_among_b(a.a_7,18),0==t)return!1;if(this.bra=this.cursor,!this.r_R2())return!1;switch(t){case 0:return!1;case 1:if(!this.slice_del())return!1;break;case 2:var e=!0;t:for(;1==e;){e=!1,n=this.limit-this.cursor;let t=!0;for(;1==t&&(t=!1,this.eq_s_b("s"));)break t;if(this.cursor=this.limit-n,!this.eq_s_b("t"))return!1}if(!this.slice_del())return!1}return!0}r_Step_5(){let t,n,e;if(this.ket=this.cursor,t=this.find_among_b(a.a_8,2),0==t)return!1;switch(this.bra=this.cursor,t){case 0:return!1;case 1:var i=!0;t:for(;1==i;){i=!1,n=this.limit-this.cursor;let t=!0;for(;1==t&&(t=!1,this.r_R2());)break t;if(this.cursor=this.limit-n,!this.r_R1())return!1;{e=this.limit-this.cursor;let t=!0;for(;1==t&&(t=!1,this.r_shortv());)return!1;this.cursor=this.limit-e}}if(!this.slice_del())return!1;break;case 2:if(!this.r_R2())return!1;if(!this.eq_s_b("l"))return!1;if(!this.slice_del())return!1}return!0}r_exception2(){return this.ket=this.cursor,0!=this.find_among_b(a.a_9,8)&&(this.bra=this.cursor,!(this.cursor>this.limit_backward))}r_exception1(){let t;if(this.bra=this.cursor,t=this.find_among(a.a_10,18),0==t)return!1;if(this.ket=this.cursor,this.cursor<this.limit)return!1;switch(t){case 0:return!1;case 1:if(!this.slice_from("ski"))return!1;break;case 2:if(!this.slice_from("sky"))return!1;break;case 3:if(!this.slice_from("die"))return!1;break;case 4:if(!this.slice_from("lie"))return!1;break;case 5:if(!this.slice_from("tie"))return!1;break;case 6:if(!this.slice_from("idl"))return!1;break;case 7:if(!this.slice_from("gentl"))return!1;break;case 8:if(!this.slice_from("ugli"))return!1;break;case 9:if(!this.slice_from("earli"))return!1;break;case 10:if(!this.slice_from("onli"))return!1;break;case 11:if(!this.slice_from("singl"))return!1}return!0}r_postlude(){let t,n;if(!this.B_Y_found)return!1;t:for(;;){t=this.cursor;let e=!0;n:for(;1==e;){e=!1;e:for(;;){n=this.cursor;let t=!0;for(;1==t&&(t=!1,this.bra=this.cursor,this.eq_s("Y"));){this.ket=this.cursor,this.cursor=n;break e}if(this.cursor=n,this.cursor>=this.limit)break n;this.cursor++}if(!this.slice_from("y"))return!1;continue t}this.cursor=t;break}return!0}innerStem(){let t,n,e,i,s,r,a,o,u,l,c,h,g,d=!0;t:for(;1==d;){d=!1,t=this.cursor;let f=!0;for(;1==f&&(f=!1,this.r_exception1());)break t;this.cursor=t;let p=!0;n:for(;1==p;){p=!1;{n=this.cursor;let t=!0;for(;1==t;){t=!1;{const t=this.cursor+3;if(t<0||t>this.limit)break;this.cursor=t}break n}this.cursor=n}break t}this.cursor=t,e=this.cursor;let m=!0;for(;1==m&&(m=!1,this.r_prelude()););this.cursor=e,i=this.cursor;let y=!0;for(;1==y&&(y=!1,this.r_mark_regions()););this.cursor=i,this.limit_backward=this.cursor,this.cursor=this.limit,s=this.limit-this.cursor;let w=!0;for(;1==w&&(w=!1,this.r_Step_1a()););this.cursor=this.limit-s;let b=!0;n:for(;1==b;){b=!1,r=this.limit-this.cursor;let t=!0;for(;1==t&&(t=!1,this.r_exception2());)break n;this.cursor=this.limit-r,a=this.limit-this.cursor;let n=!0;for(;1==n&&(n=!1,this.r_Step_1b()););this.cursor=this.limit-a,o=this.limit-this.cursor;let e=!0;for(;1==e&&(e=!1,this.r_Step_1c()););this.cursor=this.limit-o,u=this.limit-this.cursor;let i=!0;for(;1==i&&(i=!1,this.r_Step_2()););this.cursor=this.limit-u,l=this.limit-this.cursor;let s=!0;for(;1==s&&(s=!1,this.r_Step_3()););this.cursor=this.limit-l,c=this.limit-this.cursor;let g=!0;for(;1==g&&(g=!1,this.r_Step_4()););this.cursor=this.limit-c,h=this.limit-this.cursor;let d=!0;for(;1==d&&(d=!1,this.r_Step_5()););this.cursor=this.limit-h}this.cursor=this.limit_backward,g=this.cursor;let k=!0;for(;1==k&&(k=!1,this.r_postlude()););this.cursor=g}return!0}}a.methodObject=new a,a.a_0=[new i("arsen",-1,-1),new i("commun",-1,-1),new i("gener",-1,-1)],a.a_1=[new i("'",-1,1),new i("'s'",0,1),new i("'s",-1,1)],a.a_2=[new i("ied",-1,2),new i("s",-1,3),new i("ies",1,2),new i("sses",1,1),new i("ss",1,-1),new i("us",1,-1)],a.a_3=[new i("",-1,3),new i("bb",0,2),new i("dd",0,2),new i("ff",0,2),new i("gg",0,2),new i("bl",0,1),new i("mm",0,2),new i("nn",0,2),new i("pp",0,2),new i("rr",0,2),new i("at",0,1),new i("tt",0,2),new i("iz",0,1)],a.a_4=[new i("ed",-1,2),new i("eed",0,1),new i("ing",-1,2),new i("edly",-1,2),new i("eedly",3,1),new i("ingly",-1,2)],a.a_5=[new i("anci",-1,3),new i("enci",-1,2),new i("ogi",-1,13),new i("li",-1,16),new i("bli",3,12),new i("abli",4,4),new i("alli",3,8),new i("fulli",3,14),new i("lessli",3,15),new i("ousli",3,10),new i("entli",3,5),new i("aliti",-1,8),new i("biliti",-1,12),new i("iviti",-1,11),new i("tional",-1,1),new i("ational",14,7),new i("alism",-1,8),new i("ation",-1,7),new i("ization",17,6),new i("izer",-1,6),new i("ator",-1,7),new i("iveness",-1,11),new i("fulness",-1,9),new i("ousness",-1,10)],a.a_6=[new i("icate",-1,4),new i("ative",-1,6),new i("alize",-1,3),new i("iciti",-1,4),new i("ical",-1,4),new i("tional",-1,1),new i("ational",5,2),new i("ful",-1,5),new i("ness",-1,5)],a.a_7=[new i("ic",-1,1),new i("ance",-1,1),new i("ence",-1,1),new i("able",-1,1),new i("ible",-1,1),new i("ate",-1,1),new i("ive",-1,1),new i("ize",-1,1),new i("iti",-1,1),new i("al",-1,1),new i("ism",-1,1),new i("ion",-1,2),new i("er",-1,1),new i("ous",-1,1),new i("ant",-1,1),new i("ent",-1,1),new i("ment",15,1),new i("ement",16,1)],a.a_8=[new i("e",-1,1),new i("l",-1,2)],a.a_9=[new i("succeed",-1,-1),new i("proceed",-1,-1),new i("exceed",-1,-1),new i("canning",-1,-1),new i("inning",-1,-1),new i("earring",-1,-1),new i("herring",-1,-1),new i("outing",-1,-1)],a.a_10=[new i("andes",-1,-1),new i("atlas",-1,-1),new i("bias",-1,-1),new i("cosmos",-1,-1),new i("dying",-1,3),new i("early",-1,9),new i("gently",-1,7),new i("howe",-1,-1),new i("idly",-1,6),new i("lying",-1,4),new i("news",-1,-1),new i("only",-1,10),new i("singly",-1,11),new i("skies",-1,2),new i("skis",-1,1),new i("sky",-1,-1),new i("tying",-1,5),new i("ugly",-1,8)],a.g_v=[17,65,16,1],a.g_v_WXY=[1,17,65,208,1],a.g_valid_LI=[55,141,2],t.exports=a},2316:(t,n,e)=>{const{Stopwords:i}=e(79);t.exports=class extends i{constructor(t,n){super(t),this.name="stopwords-en",this.dictionary={};const e=n||["about","above","after","again","all","also","am","an","and","another","any","are","as","at","be","because","been","before","being","below","between","both","but","by","came","can","cannot","come","could","did","do","does","doing","during","each","few","for","from","further","get","got","has","had","he","have","her","here","him","himself","his","how","if","in","into","is","it","its","itself","like","make","many","me","might","more","most","much","must","my","myself","never","now","of","on","only","or","other","our","ours","ourselves","out","over","own","said","same","see","should","since","so","some","still","such","take","than","that","the","their","theirs","them","themselves","then","there","these","they","this","those","through","to","too","under","until","up","very","was","way","we","well","were","what","where","when","which","while","who","whom","with","would","why","you","your","yours","yourself","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","$","1","2","3","4","5","6","7","8","9","0","_"];this.build(e)}}},6257:(t,n,e)=>{const{Tokenizer:i}=e(79);t.exports=class extends i{constructor(t,n){super(t,n),this.name="tokenizer-en"}replace(t){let n=t.replace(/n't([ ,:;.!?]|$)/gi," not ");return n=n.replace(/can't([ ,:;.!?]|$)/gi,"can not "),n=n.replace(/'ll([ ,:;.!?]|$)/gi," will "),n=n.replace(/'s([ ,:;.!?]|$)/gi," is "),n=n.replace(/'re([ ,:;.!?]|$)/gi," are "),n=n.replace(/'ve([ ,:;.!?]|$)/gi," have "),n=n.replace(/'m([ ,:;.!?]|$)/gi," am "),n=n.replace(/'d([ ,:;.!?]|$)/gi," had "),n}replaceContractions(t){const n={cannot:["can","not"],gonna:["going","to"],wanna:["want","to"]},e=[];return t.forEach((t=>{const i=t.toLowerCase();Object.prototype.hasOwnProperty.call(n,i)?e.push(...n[i]):e.push(t)})),e}innerTokenize(t){const n=this.replace(t).split(/[\s,.!?;:([\]'"¡¿)/]+/).filter((t=>t));return this.replaceContractions(n,t)}}},4326:t=>{t.exports=function(t){const n=t.get("Language");n&&n.addModel("Latin","eng"," ththe anhe nd andion ofof tio toto on  inal atiighghtrig rior entas ed is ll in  bee rne oneveralls tevet t frs a ha rety ery ord t prht  co eve he ang ts hisingbe yon shce reefreryon thermennatshapronaly ahases for hihalf tn an ont  pes o fod inceer onsrese sectityly l bry e eerse ian e o dectidomedoeedhtsteronare  no wh a  und f asny l ae pere en na winitnted aanyted dins stath perithe tst e cy tom soc arch t od ontis eequve ociman fuoteothess al acwitial mauni serea so onlitintr ty oencthiualt a eqtatquaive stalie wl oaref hconte led isundciae fle  lay iumaby  byhumf aic  huavege r a woo ams com meeass dtec lin een rattitplewheateo ts rt frot chciedisagearyo oancelino  fa susonincat ndahouwort inderomoms otg temetleitignis witlducd wwhiacthicaw law heichminimiorto sse e bntrtraeduountane dnstl pd nld ntas iblen p pun s atilyrththofulssidero ecatucauntien edo ph aeraindpensecn wommr s")}},1994:(t,n,e)=>{const i=e(7781);t.exports={Language:i}},7781:(t,n,e)=>{const i=e(6102),s=e(1250),r={cmn:/[\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u3005\u3007\u3021-\u3029\u3038-\u303B\u3400-\u4DB5\u4E00-\u9FCC\uF900-\uFA6D\uFA70-\uFAD9]|[\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/g,Latin:/[A-Za-z\xAA\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u02E0-\u02E4\u1D00-\u1D25\u1D2C-\u1D5C\u1D62-\u1D65\u1D6B-\u1D77\u1D79-\u1DBE\u1E00-\u1EFF\u2071\u207F\u2090-\u209C\u212A\u212B\u2132\u214E\u2160-\u2188\u2C60-\u2C7F\uA722-\uA787\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA7FF\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uFB00-\uFB06\uFF21-\uFF3A\uFF41-\uFF5A]/g,Cyrillic:/[\u0400-\u0484\u0487-\u052F\u1D2B\u1D78\u2DE0-\u2DFF\uA640-\uA69D\uA69F]/g,Arabic:/[\u0600-\u0604\u0606-\u060B\u060D-\u061A\u061E\u0620-\u063F\u0641-\u064A\u0656-\u065F\u066A-\u066F\u0671-\u06DC\u06DE-\u06FF\u0750-\u077F\u08A0-\u08B2\u08E4-\u08FF\uFB50-\uFBC1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFD\uFE70-\uFE74\uFE76-\uFEFC]|\uD803[\uDE60-\uDE7E]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB\uDEF0\uDEF1]/g,ben:/[\u0980-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09FB]/g,Devanagari:/[\u0900-\u0950\u0953-\u0963\u0966-\u097F\uA8E0-\uA8FB]/g,jpn:/[\u3041-\u3096\u309D-\u309F]|\uD82C\uDC01|\uD83C\uDE00|[\u30A1-\u30FA\u30FD-\u30FF\u31F0-\u31FF\u32D0-\u32FE\u3300-\u3357\uFF66-\uFF6F\uFF71-\uFF9D]|\uD82C\uDC00/g,kor:/[\u1100-\u11FF\u302E\u302F\u3131-\u318E\u3200-\u321E\u3260-\u327E\uA960-\uA97C\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/g,tel:/[\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C78-\u0C7F]/g,tam:/[\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BFA]/g,guj:/[\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AF1]/g,kan:/[\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2]/g,mal:/[\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D75\u0D79-\u0D7F]/g,Myanmar:/[\u1000-\u109F\uA9E0-\uA9FE\uAA60-\uAA7F]/g,ori:/[\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B77]/g,pan:/[\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75]/g,Ethiopic:/[\u1200-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u137C\u1380-\u1399\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E]/g,tha:/[\u0E01-\u0E3A\u0E40-\u0E5B]/g,sin:/[\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2-\u0DF4]|\uD804[\uDDE1-\uDDF4]/g,ell:/[\u0370-\u0373\u0375-\u0377\u037A-\u037D\u037F\u0384\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03E1\u03F0-\u03FF\u1D26-\u1D2A\u1D5D-\u1D61\u1D66-\u1D6A\u1DBF\u1F00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FC4\u1FC6-\u1FD3\u1FD6-\u1FDB\u1FDD-\u1FEF\u1FF2-\u1FF4\u1FF6-\u1FFE\u2126\uAB65]|\uD800[\uDD40-\uDD8C\uDDA0]|\uD834[\uDE00-\uDE45]/g,khm:/[\u1780-\u17DD\u17E0-\u17E9\u17F0-\u17F9\u19E0-\u19FF]/g,hye:/[\u0531-\u0556\u0559-\u055F\u0561-\u0587\u058A\u058D-\u058F\uFB13-\uFB17]/g,sat:/[\u1C50-\u1C7F]/g,bod:/[\u0F00-\u0F47\u0F49-\u0F6C\u0F71-\u0F97\u0F99-\u0FBC\u0FBE-\u0FCC\u0FCE-\u0FD4\u0FD9\u0FDA]/g,Hebrew:/[\u0591-\u05C7\u05D0-\u05EA\u05F0-\u05F4\uFB1D-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFB4F]/g,kat:/[\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u10FF\u2D00-\u2D25\u2D27\u2D2D]/g,lao:/[\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF]/g,zgh:/[\u2D30-\u2D67\u2D6F\u2D70\u2D7F]/g,iii:/[\uA000-\uA48C\uA490-\uA4C6]/g,aii:/[\u0700-\u070D\u070F-\u074A\u074D-\u074F]/g},a=Object.keys(r);class o{constructor(){this.languagesAlpha3={},this.languagesAlpha2={},this.extraSentences=[],this.buildData()}static getTrigrams(t){const n=[],e=t?` ${String(t).replace(/[\u0021-\u0040]+/g," ").replace(/\s+/g," ").trim().toLowerCase()} `:"";if(!e||e.length<3)return n;for(let t=0,i=e.length-2;t<i;t+=1)n[t]=e.substr(t,3);return n}static asTuples(t){const n=o.getTrigrams(t).reduce(((t,n)=>{const e=t;return e[n]=(e[n]||0)+1,e}),{}),e=[];return Object.keys(n).forEach((t=>{e.push([t,n[t]])})),e.sort(((t,n)=>t[1]-n[1])),e}static getDistance(t,n){let e=0;return t.forEach((t=>{e+=t[0]in n?Math.abs(t[1]-n[t[0]]-1):300})),e}static getOccurrence(t,n){const e=t.match(n);return(e?e.length:0)/t.length||0}static isLatin(t){let n=0;const e=t.length/2;for(let i=0;i<t.length;i+=1){const s=t.charCodeAt(i);if(s>=32&&s<=126&&(n+=1,n>e))return!0}return n>e}static getTopScript(t){if(o.isLatin(t))return["Latin",1];let n,e=-1;for(let i=0;i<a.length;i+=1){const s=a[i],u=o.getOccurrence(t,r[s]);if(u>e&&(e=u,n=s,1===e))return[n,e]}return[n,e]}static filterLanguages(t,n,e){if(0===n.length&&0===e.length)return t;const i={};return Object.keys(t).forEach((s=>{(0===n.length||n.indexOf(s)>-1)&&-1===e.indexOf(s)&&(i[s]=t[s])})),i}static getDistances(t,n,e){const i=[],s=e.allowList||[],r=e.denyList||[],a=o.filterLanguages(n,s,r);return a?(Object.keys(a).forEach((n=>{i.push([n,o.getDistance(t,a[n])])})),i.sort(((t,n)=>t[1]-n[1]))):[["und",1]]}static detectAll(t,n={}){const e=n.minLength||10;if(!t||t.length<e)return[["und",1]];const i=t.substr(0,2048),r=o.getTopScript(i);if(!(r[0]in s)&&r[1]>.5){if(!n.allowList)return[[r[0],1]];if(n.allowList.includes(r[0]))return[[r[0],1]];if("cmn"===r[0]&&n.allowList.includes("jpn"))return[["jpn",1]]}if(s[r[0]]){const t=o.getDistances(o.asTuples(i),s[r[0]],n);if("und"===t[0][0])return[[r[0],1]];const e=t[0][1],a=300*i.length-e;return t.map((t=>[t[0],1-(t[1]-e)/a||0]))}return[[r[0],1]]}buildData(){for(let t=0;t<i.length;t+=1){const n={alpha2:i[t][0],alpha3:i[t][1],name:i[t][2]};this.languagesAlpha3[n.alpha3]=n,this.languagesAlpha2[n.alpha2]=n}}transformAllowList(t){const n=[];for(let e=0;e<t.length;e+=1)if(3===t[e].length)n.push(t[e]);else{const i=this.languagesAlpha2[t[e]];i&&n.push(i.alpha3)}return n}guess(t,n,e){const i={};t.length<10&&(i.minLength=t.length),n&&n.length&&n.length>0&&(i.allowList=this.transformAllowList(n));const s=o.detectAll(t,i),r=[];for(let t=0;t<s.length;t+=1){const n=this.languagesAlpha3[s[t][0]];if(n&&(r.push({alpha3:n.alpha3,alpha2:n.alpha2,language:n.name,score:s[t][1]}),e&&r.length>=e))break}return r}guessBest(t,n){return this.guess(t,n,1)[0]}addTrigrams(t,n){const e=this.languagesAlpha2[t],i=e?e.alpha3:t,r=o.getTopScript(n)[0],a=o.getTrigrams(n);s[r]&&(s[r][i]||(s[r][i]={}),a.forEach((t=>{s[r][i][t]=1})))}addExtraSentence(t,n){this.extraSentences.push([t,n]),this.addTrigrams(t,n)}processExtraSentences(){this.extraSentences.forEach((t=>{this.addTrigrams(t[0],t[1])}))}static lansplit(t){if(t.includes("|"))return t.split("|");const n=[];for(let e=0;e<t.length;e+=3)n.push(t.substr(e,3));return n}static addModel(t,n,e){const i=s[t],r=o.lansplit(e);let a=r.length;const u={};for(;a>0;)a-=1,u[r[a]]=a;i[n]=u}addModel(t,n,e){o.addModel(t,n,e)}static buildModel(){Object.keys(s).forEach((t=>{const n=s[t];Object.keys(n).forEach((e=>{o.addModel(t,e,n[e])}))}))}}o.buildModel(),t.exports=o},1987:(t,n,e)=>{const{defaultContainer:i}=e(79),s=e(8517);t.exports=class{constructor(t=i){this.container=t.container||t,this.name="extract-builtin"}extract(t){return t}async run(t){const n=t,e=n.locale||"en",i=this.container.get(`extract-builtin-${e}`)||this,r=await i.extract({text:n.text||n.utterance,locale:n.locale});if(n.edges=n.edges||[],r.edges)for(let t=0;t<r.edges.length;t+=1)n.nerLimitToEntities&&!n.intentEntities.includes(r.edges[t].entity)||n.edges.push(r.edges[t]);if(n.edges=s(n.edges,!1),n.sourceEntities=n.sourceEntities||[],r.sourceEntities)for(let t=0;t<r.sourceEntities.length;t+=1)n.sourceEntities.push(r.sourceEntities[t]);return n}}},2765:(t,n,e)=>{const{defaultContainer:i}=e(79),{Language:s}=e(1994),{similarity:r}=e(6964),a=e(8517);t.exports=class{constructor(t=i){this.container=t.container||t,this.name="extract-enum"}getScripts(t){const n=[],e=t.split("");for(let t=0;t<e.length;t+=1)n.push(s.getTopScript(e[t]));return n}isAlphanumeric(t){return/[\u00C0-\u1FFF\u2C00-\uD7FF\w]/.test(t)&&"_"!==t}getWordPositions(t){const n=this.getScripts(t);let e=!0,i=0,s=0;const r=t.length,a=[];for(;s<r;)this.isAlphanumeric(t.charAt(s))?e&&("cmn"===n[s][0]?(a.push({start:s,end:s,len:1}),i=s):(i=s,e=!1)):e||(a.push({start:i,end:s-1,len:s-i}),e=!0),s+=1;return e||a.push({start:i,end:s-1,len:s-i}),a}getBestSubstring(t,n,e){const i=t.length,s=n.length;if(i<=s){const e={start:0,end:i-1,len:i,levenshtein:r(t,n,!0)};return e.accuracy=(s-e.levenshtein)/s,e}const a=e||this.getWordPositions(t),o=a.length,u={start:0,end:0,len:0,levenshtein:void 0,accuracy:0};for(let e=0;e<o;e+=1)for(let i=e;i<o;i+=1){const s=t.substring(a[e].start,a[i].end+1),o=r(s,n,!0);(void 0===u.levenshtein||o<u.levenshtein)&&(u.levenshtein=o,u.start=a[e].start,u.end=a[i].end,u.len=u.end-u.start+1)}return u.accuracy=(s-u.levenshtein)/s,u}getBestSubstringList(t,n,e,i=1){const s=t.length,a=n.length,o=[];if(s<=a){const e=r(t,n,!0),u=(a-e)/a;return u>=i&&o.push({start:0,end:s-1,len:s,levenshtein:e,accuracy:u}),o}const u=a*(1-i),l=e||this.getWordPositions(t),c=l.length;for(let e=0;e<c;e+=1)for(let s=e;s<c;s+=1){const c=t.substring(l[e].start,l[s].end+1),h=r(c,n,!0),g=(a-h)/a;if(g>=i&&o.push({start:l[e].start,end:l[s].end,len:l[s].end-l[e].start+1,levenshtein:h,accuracy:g}),c.length-l[0].len>=n.length+u)break}return o}getRules(t){return t.nerRules||[]}normalize(t){return t.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase()}buildRuleDict(t){const n={},e={};for(let i=0;i<t.rules.length;i+=1){const s=t.rules[i];for(let t=0;t<s.texts.length;t+=1){const i=s.texts[t],r=this.normalize(s.texts[t]);n[r]||(n[r]=[]),n[r].push(s),e[r]=i}}t.dict=n,t.inverseDict=e}getBestExact(t,n,e){const i=this.normalize(t),s=n||this.getWordPositions(i),r=s.length,a=[];for(let n=0;n<r;n+=1)for(let o=n;o<r;o+=1){const r=i.substring(s[n].start,s[o].end+1);if(e.dict[r]){const i=e.dict[r];for(let u=0;u<i.length;u+=1)a.push({accuracy:1,start:s[n].start,end:s[o].end,len:s[o].end-s[n].start+1,levenshtein:0,entity:e.name,type:e.type,option:i[u].option,sourceText:e.inverseDict[r],utteranceText:t.substring(s[n].start,s[o].end+1)})}}return a}extractFromRule(t,n,e,i){if("enum"===n.type){const s=[];if(i>=1){n.dict||this.buildRuleDict(n);const i=this.getBestExact(t,e,n);for(let t=0;t<i.length;t+=1)s.push(i[t])}else for(let r=0;r<n.rules.length;r+=1){const a=n.rules[r];if(a&&a.option&&Array.isArray(a.texts))for(let o=0;o<a.texts.length;o+=1){const u=this.getBestSubstringList(t,a.texts[o],e,a.threshold||i);for(let e=0;e<u.length;e+=1)s.push({...u[e],entity:n.name,type:n.type,option:n.rules[r].option,sourceText:a.texts[o],utteranceText:t.substring(u[e].start,u[e].end+1)})}}return s}return[]}async extract(t){const n=t,e=n.text||n.utterance;let i=e;const s=[],r=this.container.get("tokenize");if(r){const t=await r.run({locale:n.locale,text:i});if(i=t.tokens.join(" "),i!==e){let n=0,i=0;for(let r=0;r<t.tokens.length;r+=1){const a=e.indexOf(t.tokens[r],n);for(let n=0;n<t.tokens[r].length;n+=1)s[i+n]=a+n;n+=t.tokens[r].length,i+=t.tokens[r].length+1}}}const o=this.getWordPositions(i),u=this.getRules(n),l=n.edges||[];for(let t=0;t<u.length;t+=1){const e=this.extractFromRule(i,u[t],o,n.threshold||.8);for(let t=0;t<e.length;t+=1)l.push(e[t])}if(s.length>0)for(let t=0;t<l.length;t+=1){const n=l[t];n.start=s[n.start],n.end=s[n.end]}return l.sort(((t,n)=>t.start-n.start)),n.edges=a(l,!1,n.intentEntities),n}run(t){const n=t,e=n.locale||"en";return(this.container.get(`extract-enum-${e}`)||this).extract(n)}}},3013:(t,n,e)=>{const{defaultContainer:i}=e(79),s=e(8517);t.exports=class{constructor(t=i){this.container=t.container||t,this.name="extract-regex"}getRules(t){return t.nerRules||[]}getMatchs(t,n){const e=[];let i;do{const s=n instanceof RegExp?n.exec(t):null;if(s){if(1===s.length)e.push({start:s.index,end:n.lastIndex-1,accuracy:1,sourceText:s[0]});else{const n=t.indexOf(s[1]);e.push({start:n,end:n+s[1].length-1,accuracy:1,sourceText:s[1]})}i=!0}else i=!1}while(i);return e}extractFromRule(t,n){const e=[];for(let i=0;i<n.rules.length;i+=1){const s=this.getMatchs(t,n.rules[i]);for(let i=0;i<s.length;i+=1){const r=s[i];r.entity=n.name,r.type=n.type,r.utteranceText=t.substring(r.start,r.end+1),r.len=r.utteranceText.length,e.push(r)}}return e}extract(t){const n=t,e=this.getRules(n),i=n.edges||[];for(let t=0;t<e.length;t+=1){const s=this.extractFromRule(n.text||n.utterance,e[t]);for(let t=0;t<s.length;t+=1)i.push(s[t])}return i.sort(((t,n)=>t.start-n.start)),n.edges=s(i,!1),n}run(t){const n=t,e=n.locale||"en";return(this.container.get(`extract-regex-${e}`)||this).extract(n)}}},22:(t,n,e)=>{const{defaultContainer:i}=e(79),s=e(8517),{TrimType:r}=e(1720);t.exports=class{constructor(t=i){this.container=t.container||t,this.name="extract-trim"}mustSkip(t,n){if(n.options&&n.options.skip&&n.options.skip.length>0)for(let e=0;e<n.options.skip.length;e+=1){const i=n.options.skip[e];if(n.options.caseSensitive){if(i===t)return!0}else if(i.toLowerCase()===t.toLowerCase())return!0}return!1}matchBetween(t,n,e){const i=[];let s;do{const a=n.regex.exec(` ${t} `);if(a){let t,o,u;if(n&&n.options&&n.options.closest){if(t=1,!a[t]){s=!1;break}const n=a[0].indexOf(a[t]);o=a.index-1+n,u=o+a[t].length-1}else t=0,o=a.index-1,u=n.regex.lastIndex-2;i.push({type:"trim",subtype:r.Between,start:o,end:u,len:a[t].length,accuracy:1,sourceText:a[t],utteranceText:a[t],entity:e}),s=!0}else s=!1}while(s);const a=[];for(let t=0;t<i.length;t+=1)this.mustSkip(i[t].utteranceText,n)||a.push(i[t]);return a}findWord(t,n,e=!1,i=!1){const s=[];let r;const a=new RegExp(i?n:` ${n} | ${n}|${n} `,e?"g":"ig");do{const n=a.exec(t);n?(s.push({start:n.index,end:a.lastIndex}),r=!0):r=!1}while(r);return s}getBeforeResults(t,n,e){const i=[];let s=0,a=0;for(let o=0;o<n.length;o+=1){a=n[o].start;const u=t.substring(s,a);i.push({type:"trim",subtype:r.Before,start:s,end:a-1,len:u.length,accuracy:.99,sourceText:u,utteranceText:u,entity:e}),s=n[o].end}return i}getBeforeFirstResults(t,n,e){const i=[],s=n[0].start,a=t.substring(0,s);return i.push({type:"trim",subtype:r.BeforeFirst,start:0,end:s-1,len:a.length,accuracy:.99,sourceText:a,utteranceText:a,entity:e}),i}getBeforeLastResults(t,n,e){const i=[],s=n[n.length-1].start,a=t.substring(0,s);return i.push({type:"trim",subtype:r.BeforeLast,start:0,end:s-1,len:a.length,accuracy:.99,sourceText:a,utteranceText:a,entity:e}),i}getAfterResults(t,n,e){const i=[];let s=0,a=t.length;for(let o=n.length-1;o>=0;o-=1){s=n[o].end;const u=t.substring(s,a);i.unshift({type:"trim",subtype:r.After,start:s,end:a-1,len:u.length,accuracy:.99,sourceText:u,utteranceText:u,entity:e}),a=n[o].start}return i}getAfterFirstResults(t,n,e){const i=[],s=n[0].end,a=t.length,o=t.substring(s,a);return i.push({type:"trim",subtype:r.AfterFirst,start:s,end:a-1,len:o.length,accuracy:.99,sourceText:o,utteranceText:o,entity:e}),i}getAfterLastResults(t,n,e){const i=[],s=n[n.length-1].end,a=t.length,o=t.substring(s,a);return i.push({type:"trim",subtype:r.AfterLast,start:s,end:a-1,len:o.length,accuracy:.99,sourceText:o,utteranceText:o,entity:e}),i}getResults(t,n,e,i){switch(e){case r.Before:return this.getBeforeResults(t,n,i);case r.BeforeFirst:return this.getBeforeFirstResults(t,n,i);case r.BeforeLast:return this.getBeforeLastResults(t,n,i);case r.After:return this.getAfterResults(t,n,i);case r.AfterFirst:return this.getAfterFirstResults(t,n,i);case r.AfterLast:return this.getAfterLastResults(t,n,i);default:return[]}}match(t,n,e,i){const s=[];if(n&&Array.isArray(n.words))for(let r=0;r<n.words.length;r+=1){const a=n.options.noSpaces?n.words[r]:` ${n.words[r]}`,o=this.findWord(t,a);if(!n.options.noSpaces){const e=this.findWord(t,n.words[r]);e.length>0&&0===e[0].start&&o.unshift(e[0])}o.length>0&&s.push(...this.getResults(t,o,e,i))}const r=[];for(let t=0;t<s.length;t+=1)s[t].sourceText=s[t].sourceText.replace(/^[\s,.!?;:([\]'"¡¿)/]+|[\s,.!?;:([\]'"¡¿)/]+$/,""),this.mustSkip(s[t].utteranceText,n)||r.push(s[t]);return r}getRules(t){return t.nerRules||[]}extractFromRule(t,n){const e=[];for(let i=0;i<n.rules.length;i+=1){const s=n.rules[i];s.type===r.Between?e.push(...this.matchBetween(t,s,n.name)):e.push(...this.match(t,s,s.type,n.name))}return e}extract(t){const n=t,e=this.getRules(n),i=n.edges||[];for(let t=0;t<e.length;t+=1){const s=this.extractFromRule(n.text||n.utterance,e[t]);for(let t=0;t<s.length;t+=1)i.push(s[t])}return i.sort(((t,n)=>t.start-n.start)),n.edges=s(i,!1),n}run(t){const n=t,e=n.locale||"en";return(this.container.get(`extract-trim-${e}`)||this).extract(n)}}},3229:(t,n,e)=>{const i=e(8086),s=e(2765),r=e(3013),a=e(22),o=e(1987);t.exports={Ner:i,ExtractorEnum:s,ExtractorRegex:r,ExtractorTrim:a,ExtractorBuiltin:o}},8086:(t,n,e)=>{const{Clonable:i}=e(79),s=e(2765),r=e(3013),a=e(22),o=e(1987),{TrimType:u}=e(1720);class l extends i{constructor(t={},n=void 0){super({settings:{},container:t.container||n},n),this.applySettings(this.settings,t),this.applySettings(this.settings),this.settings.tag||(this.settings.tag="ner"),this.registerDefault(),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag)),this.rules={},this.applySettings(this,{pipelineProcess:this.getPipeline(`${this.settings.tag}-process`)})}registerDefault(){}getRulesByName(t="*",n="",e=!1){if(!this.rules[t]){if(!e)return;this.rules[t]={}}if(!this.rules[t][n]){if(!e)return;this.rules[t][n]={name:n,type:"enum",rules:[]}}return this.rules[t][n]}addRule(t="*",n,e,i){if(Array.isArray(t))for(let s=0;s<t.length;s+=1)this.addRule(t[s],n,e,i);else this.rules[t]||(this.rules[t]={}),this.rules[t][n]||(this.rules[t][n]={name:n,type:e,rules:[]}),this.rules[t][n].rules.push(i)}asString(t){if(t){if(null!=(n=t)&&n.constructor===Object)return JSON.stringify(t);if(t.toString)return t.toString()}var n;return""}findRule(t,n){const e=this.asString(n);for(let n=0;n<t.length;n+=1)if(this.asString(t[n])===e)return n;return-1}removeRule(t="*",n,e){if(this.rules[t]&&this.rules[t][n])if(e){const i=this.findRule(this.rules[t][n].rules,e);i>-1&&this.rules[t][n].rules.splice(i,1)}else delete this.rules[t][n]}getRules(t="*"){const n=[];if(this.rules[t]){const e=Object.keys(this.rules[t]);for(let i=0;i<e.length;i+=1)n.push(this.rules[t][e[i]])}if("*"!==t&&this.rules["*"]){const t=Object.keys(this.rules["*"]);for(let e=0;e<t.length;e+=1)n.push(this.rules["*"][t[e]])}return n}decideRules(t,n){const e=t;let i=this.getRules(e.locale||"en");if(n&&this.settings.considerOnlyIntentEntities)i=i.filter((t=>n.includes(t.name)));else if(n){const t=[],e=[];i.forEach((i=>{n.includes(i.name)?t.push(i):e.push(i)})),i=t.concat(e)}return e.nerRules=i,e.nerLimitToEntities=this.settings.considerOnlyIntentEntities,e.intentEntities=n,e}getRuleOption(t,n){for(let e=0;e<t.length;e+=1)if(t[e].option===n)return t[e]}addRuleOptionTexts(t,n,e,i){if(Array.isArray(t))for(let s=0;s<t.length;s+=1)this.addRuleOptionTexts(t[s],n,e,i);else{let s=i||e;Array.isArray(s)||(s=[s]);const r=this.getRulesByName(t,n,!0);let a=this.getRuleOption(r.rules,e);if(a){const t={};for(let n=0;n<a.texts.length;n+=1)t[a.texts[n]]=1;for(let n=0;n<s.length;n+=1)t[s[n]]=1;a.texts=Object.keys(t)}else a={option:e,texts:s},r.rules.push(a)}}removeRuleOptionTexts(t,n,e,i){if(Array.isArray(t))for(let s=0;s<t.length;s+=1)this.removeRuleOptionTexts(t[s],n,e,i);else{let s=i||e;Array.isArray(s)||(s=[s]);const r=this.getRulesByName(t,n,!1);if(r){const t=this.getRuleOption(r.rules,e);if(t){const n={};for(let e=0;e<t.texts.length;e+=1)n[t.texts[e]]=1;for(let t=0;t<s.length;t+=1)delete n[s[t]];t.texts=Object.keys(n)}}}}static str2regex(t){const n=t.lastIndexOf("/");return new RegExp(t.slice(1,n),t.slice(n+1))}static regex2str(t){return t.toString()}addRegexRule(t,n,e){const i="string"==typeof e?l.str2regex(e):e,s=i.flags.includes("g")?i:new RegExp(i.source,`${i.flags}g`);this.addRule(t,n,"regex",s)}addBetweenLastCondition(t,n,e,i,s={}){const r={...s,closest:!0};this.addBetweenCondition(t,n,e,i,r)}addBetweenCondition(t,n,e,i,s){const r=s||{},a=Array.isArray(e)?e:[e],o=Array.isArray(i)?i:[i],u=[];for(let t=0;t<a.length;t+=1)for(let n=0;n<o.length;n+=1){const e=!0===r.noSpaces?a[t]:` ${a[t]} `,i=!0===r.noSpaces?o[n]:` ${o[n]} `;let s;s=!0===r.closest?`${e}(?!.*${e}.*)(.*)${i}`:`(?<=${e})(.*)(?=${i})`,u.push(s)}let c=`/${u.join("|")}/g`;!0!==r.caseSensitive&&(c+="i");const h={type:"between",leftWords:a,rightWords:o,regex:l.str2regex(c),options:r};this.addRule(t,n,"trim",h)}addPositionCondition(t,n,e,i,s){const r=s||{},a={type:e,words:Array.isArray(i)?i:[i],options:r};this.addRule(t,n,"trim",a)}addAfterCondition(t,n,e,i){this.addPositionCondition(t,n,u.After,e,i)}addAfterFirstCondition(t,n,e,i){this.addPositionCondition(t,n,u.AfterFirst,e,i)}addAfterLastCondition(t,n,e,i){this.addPositionCondition(t,n,u.AfterLast,e,i)}addBeforeCondition(t,n,e,i){this.addPositionCondition(t,n,u.Before,e,i)}addBeforeFirstCondition(t,n,e,i){this.addPositionCondition(t,n,u.BeforeFirst,e,i)}addBeforeLastCondition(t,n,e,i){this.addPositionCondition(t,n,u.BeforeLast,e,i)}reduceEdges(t){return t.entities=t.edges,delete t.edges,delete t.nerRules,delete t.nerLimitToEntities,delete t.intentEntities,t}async defaultPipelineProcess(t,n){this.cache||(this.cache={extractEnum:this.container.get("extract-enum"),extractRegex:this.container.get("extract-regex"),extractTrim:this.container.get("extract-trim"),extractBuiltin:this.container.get("extract-builtin")},this.cache.extractEnum||(this.container.use(s),this.cache.extractEnum=this.container.get("extract-enum")),this.cache.extractRegex||(this.container.use(r),this.cache.extractRegex=this.container.get("extract-regex")),this.cache.extractTrim||(this.container.use(a),this.cache.extractTrim=this.container.get("extract-trim")),this.cache.extractBuiltin||(this.container.use(o),this.cache.extractBuiltin=this.container.get("extract-builtin")));let e=await this.decideRules(t,n);return this.cache.extractEnum&&(e=await this.cache.extractEnum.run(e)),this.cache.extractRegex&&(e=await this.cache.extractRegex.run(e)),this.cache.extractTrim&&(e=await this.cache.extractTrim.run(e)),this.cache.extractBuiltin&&(e=await this.cache.extractBuiltin.run(e)),e=await this.reduceEdges(e),e}async process(t,n){const e={threshold:this.settings.threshold||.8,...t};let i;if(e.locale){const t=this.container.getPipeline(`${this.settings.tag}-${e.locale}-process`);t&&(i=await this.runPipeline(e,t))}else this.pipelineProcess&&(i=await this.runPipeline(e,this.pipelineProcess));return i?n&&(i.entities=i.entities.filter((t=>n.includes(t.entity)))):i=await this.defaultPipelineProcess(e,n),delete i.threshold,i}nameToEntity(t){return`${void 0===this.settings.entityPreffix?"@":this.settings.entityPreffix}${t}${void 0===this.settings.entitySuffix?"":this.settings.entitySuffix}`}entityToName(t){if(!t)return t;let n=t;const e=void 0===this.settings.entityPreffix?"@":this.settings.entityPreffix,i=void 0===this.settings.entitySuffix?"":this.settings.entitySuffix;if(e){if(!n.startsWith(e))return t;n=n.slice(e.length)}if(i){if(!n.endsWith(i))return t;n=n.slice(0,-i.length)}return n}isEntity(t){return this.entityToName(t)!==t}getEntitiesFromUtterance(t,n){n||(n=t,t="es");const e=n.split(/[\s,.!?;:([\]'"¡¿)/]+/).filter((t=>t)),i=[];for(let t=0;t<e.length;t+=1){const n=e[t];this.isEntity(n)&&i.push(this.entityToName(n))}return i}async generateEntityUtterance(t,n){let e={locale:t,utterance:n};e=await this.process(e);const{entities:i}=e;if(!i||!i.length)return n;i.sort(((t,n)=>t.start-n.start));let s=0,r="";for(let t=0;t<i.length;t+=1){const e=i[t],a=n.slice(s,e.start);s=e.end+1,r+=a,r+=this.nameToEntity(e.entity)}return r+=n.slice(i[i.length-1].end+1),r}toJSON(){RegExp.prototype.toJSON=RegExp.prototype.toString;const t={settings:{...this.settings},rules:{...this.rules}};return delete t.settings.container,t}fromJSON(t){this.applySettings(this.settings,t.settings),Object.keys(t.rules).forEach((n=>{Object.keys(t.rules[n]).forEach((e=>{t.rules[n][e].rules="regex"===t.rules[n][e].type?t.rules[n][e].rules.map((t=>l.str2regex(t))):t.rules[n][e].rules.map((t=>"string"==typeof t.regex?{...t,regex:l.str2regex(t.regex)}:t))}))})),this.rules=t.rules}}t.exports=l},8517:(t,n,e)=>{const{TrimTypesList:i}=e(1720);function s(t,n,e,i=[]){let s,r;if(t.accuracy>n.accuracy||t.accuracy===n.accuracy&&t.length>n.length?(s=t,r=n):(s=n,r=t),r.start<=s.end&&r.end>=s.start)if(r.accuracy<s.accuracy)r.discarded=!0;else if((e||r.entity===s.entity||"number"===r.entity)&&r.len<=s.len)r.start===s.start&&r.end===s.end&&r.type===s.type&&r.entity===s.entity&&r.option===s.option?r.discarded=!0:r.start===s.start&&r.end===s.end&&r.entity===s.entity&&r.type!==s.type&&("trim"===s.type&&"trim"!==r.type?s.discarded=!0:("trim"!==s.type&&r.type,r.discarded=!0));else if((e||r.entity===s.entity||"number"===s.entity)&&r.len>s.len)s.discarded=!0;else if("enum"===s.type&&"enum"===r.type){const t=i.includes(s.entity),n=i.includes(r.entity);t&&!n?r.discarded=!0:!t&&n||s.len<=r.len&&r.utteranceText.includes(s.utteranceText)?s.discarded=!0:s.len>r.len&&s.utteranceText.includes(r.utteranceText)&&(r.discarded=!0)}}t.exports=function(t,n=!0,e=[]){const r=(t=function(t){for(let n=0,e=t.length;n<e;n+=1){const e=t[n];if("trim"===e.type&&i.includes(e.subtype))for(let i=0;i<t.length;i+=1){const s=t[i];if(n!==i&&s.start>=e.start&&s.end<=e.end&&"trim"!==s.type){const t=e.end-e.start,n=s.end-s.start;if(e.end===s.end){const i=e.sourceText.substring(0,t-n-1);e.sourceText=i,e.utteranceText=i,e.end=s.start-1,e.len=i.length}else if(e.start===s.start){const t=e.sourceText.substring(n+1);e.sourceText=t,e.utteranceText=t,e.start=s.end+1,e.len=t.length}}}}return t}(t)).length;for(let i=0;i<r;i+=1){const a=t[i];if(0===a.len&&(a.discarded=!0),!a.discarded)for(let o=i+1;o<r;o+=1){const i=t[o];if(i.discarded||s(a,i,n,e),a.discarded)break}if(!a.discarded){const t=e.indexOf(a.entity);-1!==t&&e.splice(t,1)}}return t.filter((t=>!t.discarded))}},1720:t=>{const n={Between:"between",After:"after",AfterLast:"afterLast",AfterFirst:"afterFirst",Before:"before",BeforeFirst:"beforeFirst",BeforeLast:"beforeLast"},e=Object.values(n);t.exports={TrimType:n,TrimTypesList:e}},189:(t,n,e)=>{const i=e(8462);t.exports=class{constructor(t,n){if(t){this.inputLookup=new i,this.outputLookup=new i;for(let n=0;n<t.length;n+=1)this.inputLookup.add(t[n]);for(let t=0;t<n.length;t+=1)this.outputLookup.add(n[t]);this.numInputs=this.inputLookup.items.length,this.numOutputs=this.outputLookup.items.length}}build(t){this.inputLookup=new i(t,"input"),this.outputLookup=new i(t,"output"),this.numInputs=this.inputLookup.items.length,this.numOutputs=this.outputLookup.items.length;const n=[];for(let e=0;e<t.length;e+=1){const{input:i,output:s}=t[e];n.push({input:this.inputLookup.prepare(i),output:this.outputLookup.prepare(s)})}return n}transformInput(t){return this.inputLookup.prepare(t)}}},165:(t,n,e)=>{const i=e(2892);t.exports={NeuralNetwork:i}},8462:t=>{t.exports=class{constructor(t,n="input"){this.dict={},this.items=[],t&&this.buildFromData(t,n)}add(t){void 0===this.dict[t]&&(this.dict[t]=this.items.length,this.items.push(t))}buildFromData(t,n){for(let e=0;e<t.length;e+=1){const i=t[e][n],s=Object.keys(i);for(let t=0;t<s.length;t+=1)this.add(s[t])}}prepare(t){const n=Object.keys(t),e=[],i={};for(let s=0;s<n.length;s+=1){const r=n[s];void 0!==this.dict[r]&&(e.push(this.dict[r]),i[this.dict[r]]=t[r])}return{keys:e,data:i}}}},2892:(t,n,e)=>{const i=e(189),s={iterations:2e4,errorThresh:5e-5,deltaErrorThresh:1e-6,learningRate:.6,momentum:.5,alpha:.07,log:!1};t.exports=class{constructor(t={}){this.settings=t,this.applySettings(this.settings,s),!0===this.settings.log?this.logFn=(t,n)=>console.log(`Epoch ${t.iterations} loss ${t.error} time ${n}ms`):"function"==typeof this.settings.log&&(this.logFn=this.settings.log)}applySettings(t={},n={}){return Object.keys(n).forEach((e=>{void 0===t[e]&&(t[e]=n[e])})),t}initialize(t,n){this.perceptronsByName={},this.perceptrons=[],this.outputs={},this.numPerceptrons=n.length;for(let e=0;e<n.length;e+=1){const i=n[e];this.outputs[i]=0;const s={name:i,id:e,weights:new Float32Array(t),changes:new Float32Array(t),bias:0};this.perceptrons.push(s),this.perceptronsByName[i]=s}}runInputPerceptron(t,n){const e=n.keys.reduce(((e,i)=>e+n.data[i]*t.weights[i]),t.bias);return e<=0?0:this.settings.alpha*e}runInput(t){for(let n=0;n<this.numPerceptrons;n+=1)this.outputs[this.perceptrons[n].name]=this.runInputPerceptron(this.perceptrons[n],t);return this.outputs}get isRunnable(){return!!this.numPerceptrons}run(t){return this.numPerceptrons?this.runInput(this.lookup.transformInput(t)):void 0}prepareCorpus(t){return this.lookup=new i,this.lookup.build(t)}verifyIsInitialized(){this.perceptrons||this.initialize(this.lookup.numInputs,this.lookup.outputLookup.items)}trainPerceptron(t,n){const{alpha:e,momentum:i}=this.settings,{changes:s,weights:r}=t;let a=0;for(let o=0;o<n.length;o+=1){const{input:u,output:l}=n[o],c=this.runInputPerceptron(t,u),h=(l.data[t.id]||0)-c;if(h){a+=h**2;const n=(c>0?1:e)*h*this.decayLearningRate;for(let t=0;t<u.keys.length;t+=1){const e=u.keys[t],a=n*u.data[e]+i*s[e];s[e]=a,r[e]+=a}t.bias+=n}}return a}train(t){if(!t||!t.length)return{};if(void 0!==t[t.length-1].input.nonefeature){const n={};for(let e=0;e<t.length-1;e+=1){const i=Object.keys(t[e].output);for(let t=0;t<i.length;t+=1)n[i[t]]||(n[i[t]]=1)}const e=t[t.length-1],i=Object.keys(n);for(let t=0;t<i.length;t+=1)e.output[i[t]]=1e-7}const n=this.prepareCorpus(t);this.status||(this.status={error:1/0,deltaError:1/0,iterations:0}),this.verifyIsInitialized();const e=this.settings.errorThresh,i=this.settings.deltaErrorThresh;for(;this.status.iterations<this.settings.iterations&&this.status.error>e&&this.status.deltaError>i;){const t=new Date;this.status.iterations+=1,this.decayLearningRate=this.settings.learningRate/(1+.001*this.status.iterations);const e=this.status.error;this.status.error=0;for(let t=0;t<this.numPerceptrons;t+=1)this.status.error+=this.trainPerceptron(this.perceptrons[t],n);this.status.error/=this.numPerceptrons*n.length,this.status.deltaError=Math.abs(this.status.error-e);const i=new Date;this.logFn&&this.logFn(this.status,i.getTime()-t.getTime())}return this.status}explain(t,n){const e=this.lookup.transformInput(t),i={},s=this.lookup.outputLookup.dict[n];if(void 0===s)return{};for(let t=0;t<e.keys.length;t+=1){const n=e.keys[t];i[this.lookup.inputLookup.items[n]]=this.perceptrons[s].weights[n]}return{weights:i,bias:this.perceptrons[s].bias}}toJSON(){const t={},n=Object.keys(this.settings);for(let e=0;e<n.length;e+=1){const i=n[e];this.settings[i]!==s[i]&&(t[i]=this.settings[i])}if(!this.lookup)return{settings:t};const e=this.lookup.inputLookup.items,i=this.lookup.outputLookup.items,r=[];for(let t=0;t<this.perceptrons.length;t+=1){const n=this.perceptrons[t],e=[...n.weights,n.bias];r.push(e)}return{settings:t,features:e,intents:i,perceptrons:r}}fromJSON(t){if(this.settings=this.applySettings({...s,...t.settings}),t.features){this.lookup=new i(t.features,t.intents),this.initialize(t.features.length,t.intents);for(let n=0;n<this.perceptrons.length;n+=1){const e=this.perceptrons[n],i=t.perceptrons[n];e.bias=i[i.length-1];for(let n=0;n<t.features.length;n+=1)e.weights[n]=i[n]}}}}},2708:(t,n,e)=>{const{Clonable:i}=e(79);t.exports=class extends i{constructor(t={},n){super({settings:{},container:t.container||n},n),this.applySettings(this.settings,t),this.settings.tag||(this.settings.tag="action-manager"),this.registerDefault(),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag)),this.actions={},this.actionsMap={},this.applySettings(this,{pipelineFind:this.getPipeline(`${this.settings.tag}-find`)})}registerDefault(){}posAction(t,n,e){if(!this.actions[t])return-1;const i=this.actions[t];for(let t=0;t<i.length;t+=1)if(i[t].action===n&&JSON.stringify(i[t].parameters)===JSON.stringify(e))return t;return-1}findActions(t){return(this.actions[t]||[]).map((t=>({...t,fn:this.actionsMap[t.action]})))}async processActions(t,n){const e=this.findActions(t);n&&"object"==typeof n&&(n.actions=e.map((t=>({action:t.action,parameters:t.parameters}))));let i=n;for(const{fn:t,parameters:n}of e)if(t){const e=await t(i,...n||[]);e&&("object"==typeof i?"object"==typeof e?i=e:i.answer=e:i=e)}return i}addAction(t,n,e,i){-1===this.posAction(t,n,e)&&(this.actions[t]||(this.actions[t]=[]),this.actions[t].push({action:n,parameters:e}),i&&(this.actionsMap[n]=i))}removeAction(t,n,e){const i=this.posAction(t,n,e);i>-1&&this.actions[t].splice(i,1)}removeActions(t){delete this.actions[t]}registerActionInMap(t,n){this.actionsMap[t]=n}removeActionFromMap(t){delete this.actionsMap[t]}run(t,n){const e=t;return e.settings=e.settings||n||this.settings,this.processActions(t.intent,e)}toJSON(){const t={settings:{...this.settings},actions:this.actions};return delete t.settings.container,t}fromJSON(t){this.applySettings(this.settings,t.settings),this.actions=t.actions}}},2137:(t,n,e)=>{const i=e(525),s=e(2708);t.exports={NlgManager:i,ActionManager:s}},525:(t,n,e)=>{const{Clonable:i}=e(79);t.exports=class extends i{constructor(t={},n){super({settings:{},container:t.container||n},n),this.applySettings(this.settings,t),this.settings.tag||(this.settings.tag="nlg-manager"),this.registerDefault(),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag)),this.responses={},this.applySettings(this,{pipelineFind:this.getPipeline(`${this.settings.tag}-find`)})}registerDefault(){this.container.registerConfiguration("nlg-manager",{},!1)}findAllAnswers(t){const n=t;return this.responses[n.locale]?n.answers=this.responses[n.locale][n.intent]||[]:n.answers=[],n}filterAnswers(t){const n=t,{answers:e}=n;if(e&&e.length){const t=this.container.get("Evaluator");if(t){const i=n.context||{},s=[];for(let n=0;n<e.length;n+=1){const r=e[n];if(r.opts){const n="string"==typeof r.opts?r.opts:r.opts.condition;n?!0===t.evaluate(n,i)&&s.push(r):s.push(r)}else s.push(r)}n.answers=s}}return n}chooseRandom(t){const n=t,{answers:e}=n;return e&&e.length&&(n.answer=e[Math.floor(Math.random()*e.length)].answer),n}renderText(t,n){if(!t)return t;let e,i=t.answer||t;do{const t=/\((?:[^()]+)\|(?:[^()]+)\)/g.exec(i);if(t){for(let n=0;n<t.length;n+=1){const e=t[n],s=e.substring(1,e.length-1).split("|");i=i.replace(e,s[Math.floor(Math.random()*s.length)])}e=!0}else e=!1}while(e);t.answer?t.answer=i:t=i;const s=this.container.get("Template");return s&&n?s.compile(t,n):t}renderRandom(t){const n=t,{answers:e,context:i}=n;for(let t=0;t<e.length;t+=1)e[t]=this.renderText(e[t],i);return n}indexOfAnswer(t,n,e,i){if(!this.responses[t])return-1;if(!this.responses[t][n])return-1;const s=this.responses[t][n];for(let t=0;t<s.length;t+=1){const n=s[t];if(n.answer===e&&JSON.stringify(n.opts)===JSON.stringify(i))return t}return-1}add(t,n,e,i){const s=this.indexOfAnswer(t,n,e,i);if(-1!==s)return this.responses[t][n][s];this.responses[t]||(this.responses[t]={}),this.responses[t][n]||(this.responses[t][n]=[]);const r={answer:e,opts:i};return this.responses[t][n].push(r),r}remove(t,n,e,i){const s=this.indexOfAnswer(t,n,e,i);-1!==s&&this.responses[t][n].splice(s,1)}defaultPipelineFind(t){let n=this.findAllAnswers(t);return n=this.filterAnswers(n),n=this.renderRandom(n),n=this.chooseRandom(n),n}find(t,n,e,i){const s={locale:t,intent:n,context:e,settings:i||this.settings};return this.pipelineFind?this.runPipeline(s,this.pipelineFind):this.defaultPipelineFind(s)}run(t,n){return this.find(t.locale,t.intent,t.context,n)}toJSON(){const t={settings:{...this.settings},responses:this.responses};return delete t.settings.container,t}fromJSON(t){this.applySettings(this.settings,t.settings),this.responses=t.responses}}},9924:(t,n,e)=>{const{Clonable:i}=e(79);t.exports=class extends i{constructor(t={},n){super({settings:{},container:t.container||n},n),this.applySettings(this.settings,t),this.settings.tag||(this.settings.tag="context-manager"),this.registerDefault(),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag)),this.contextDictionary={},this.defaultData={}}registerDefault(){this.container.registerConfiguration("context-manager",{tableName:"context"})}async getInputContextId(t){let n;return this.onGetInputContextId&&(n=await this.onGetInputContextId(t)),!n&&t&&t.activity&&(t.activity.address&&t.activity.address.conversation?n=t.activity.address.conversation.id:t.activity.conversation&&(n=t.activity.conversation.id)),n}async getContext(t){const n=await this.getInputContextId(t);let e;if(n){if(this.settings.tableName){const t=this.container?this.container.get("database"):void 0;t&&(e=await t.findOne(this.settings.tableName,{conversationId:n})||{conversationId:n})}e||(e=this.contextDictionary[n]||{conversationId:n})}else e={};return e._data=this.defaultData,e}async setContext(t,n){const e=this.container.get("logger"),i=await this.getInputContextId(t);if(i){if(!n.id){const e=await this.getContext(t);e&&(n.id=e.id)}const s=Object.keys(n),r={conversationId:i};for(let t=0;t<s.length;t+=1){const e=s[t];e.startsWith("_")||(r[e]=n[e])}if(this.settings.tableName){const t=this.container?this.container.get("database"):void 0;t?await t.save(this.settings.tableName,r):this.contextDictionary[i]=r}else this.contextDictionary[i]=r;this.onCtxUpdate&&(e.debug("emmitting event onCtxUpdate..."),await this.onCtxUpdate(r))}}async resetConversations(){for(const t of Object.keys(this.contextDictionary))await this.resetConversation(t)}async resetConversation(t){this.container.get("logger").debug(`resetting context in conversation: ${t}`);const n=this.contextDictionary[t];Object.keys(n).forEach((t=>{delete n[t]})),this.contextDictionary[t].dialogStack=[],this.contextDictionary[t].variableName=void 0}}},6548:(t,n,e)=>{const i=e(1141),s=e(9924);t.exports={Nlp:i,ContextManager:s}},1141:(t,n,e)=>{const{Clonable:i,containerBootstrap:s}=e(79),{NluManager:r,NluNeural:a}=e(6607),{Ner:o,ExtractorEnum:u,ExtractorRegex:l,ExtractorTrim:c,ExtractorBuiltin:h}=e(3229),{ActionManager:g,NlgManager:d}=e(2137),{SentimentAnalyzer:f}=e(6465),{SlotManager:p}=e(213),m=e(9924);t.exports=class extends i{constructor(t={},n){super({settings:{},container:t.container||n||s()},n),this.applySettings(this.settings,t),this.settings.tag||(this.settings.tag="nlp"),this.registerDefault(),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag)),this.nluManager=this.container.get("nlu-manager",this.settings.nlu),this.ner=this.container.get("ner",this.settings.ner),this.nlgManager=this.container.get("nlg-manager",this.settings.nlg),this.actionManager=this.container.get("action-manager",this.settings.action),this.sentiment=this.container.get("sentiment-analyzer",this.settings.sentiment),this.slotManager=this.container.get("SlotManager",this.settings.slot),this.contextManager=this.container.get("context-manager",this.settings.context),this.forceNER=this.settings.forceNER,void 0===this.forceNER&&(this.forceNER=!1),this.initialize()}registerDefault(){this.container.registerConfiguration("nlp",{threshold:.5,autoLoad:!0,autoSave:!0,modelFileName:"model.nlp",executeActionsBeforeAnswers:!1},!1),this.use(r),this.use(o),this.use(u),this.use(l),this.use(c),this.use(h),this.use(d),this.use(g),this.use(a),this.use(f),this.use(m),this.container.register("SlotManager",p,!1)}initialize(){if(this.settings.nlu){const t=Object.keys(this.settings.nlu);for(let n=0;n<t.length;n+=1){const e=t[n],i=Object.keys(this.settings.nlu[e]);for(let t=0;t<i.length;t+=1){const n=i[t],s=this.settings.nlu[e][n],{className:r}=s;delete s.className,this.useNlu(r,e,n,s)}}}this.settings.languages&&this.addLanguage(this.settings.languages),this.settings.locales&&this.addLanguage(this.settings.locales),void 0===this.settings.calculateSentiment&&(this.settings.calculateSentiment=!0),void 0===this.settings.executeActionsBeforeAnswers&&(this.settings.executeActionsBeforeAnswers=!1)}async start(){this.settings.corpora&&await this.addCorpora(this.settings.corpora)}async loadOrTrain(){let t=!1;this.settings.autoLoad&&(t=await this.load(this.settings.modelFileName)),t||await this.train()}useNlu(t,n,e,i){if(n||(n="??"),Array.isArray(n))for(let s=0;s<n.length;s+=1)this.useNlu(t,n[s],e,i);else{const s="string"==typeof t?t:this.container.use(t);let r=this.container.getConfiguration(`domain-manager-${n}`);r||(r={},this.container.registerConfiguration(`domain-manager-${n}`,r)),r.nluByDomain||(r.nluByDomain={});const a=e&&"*"!==e?e:"default";r.nluByDomain[a]||(r.nluByDomain[a]={}),r.nluByDomain[a].className=s,r.nluByDomain[a].settings=i}}guessLanguage(t){return this.nluManager.guessLanguage(t)}addLanguage(t){return this.nluManager.addLanguage(t)}removeLanguage(t){return this.nluManager.removeLanguage(t)}addAdditionalEnumEntityUtterances(){this.settings.languages&&this.settings.languages.forEach((t=>{const n={};this.ner.getRules(t).forEach((t=>{if("enum"===t.type){const e=this.ner.nameToEntity(t.name);n[e]=n[e]||[],t.rules.forEach((t=>{n[e]=n[e].concat(t.texts)}))}}));const e=this.nluManager.consolidateManager(t);e.getSentences().forEach((i=>{const s=this.ner.getEntitiesFromUtterance(t,i.utterance).map((t=>this.ner.nameToEntity(t)));this.replaceEnumEntitiesInSentence(e,t,i.domain,i.utterance,i.intent,s,n)}))}))}replaceEnumEntitiesInSentence(t,n,e,i,s,r,a){if(!r.length)return this.nluManager.guesser.addExtraSentence(n,i),void t.add(e,i,s);const o=r[0];a[o]&&a[o].length?a[o].forEach((u=>{const l=i.replace(o,u);this.replaceEnumEntitiesInSentence(t,n,e,l,s,r.slice(1),a)})):this.replaceEnumEntitiesInSentence(t,n,e,i,s,r.slice(1),a)}addDocument(t,n,e){const i=this.ner.getEntitiesFromUtterance(n);return this.slotManager.addBatch(e,i),this.nluManager.add(t,n,e)}removeDocument(t,n,e){return this.nluManager.remove(t,n,e)}getRulesByName(t,n){return this.ner.getRulesByName(t,n)}addNerRule(t,n,e,i){return this.ner.addRule(t,n,e,i)}removeNerRule(t,n,e){return this.ner.removeRule(t,n,e)}addNerRuleOptionTexts(t,n,e,i){return this.ner.addRuleOptionTexts(t,n,e,i)}removeNerRuleOptionTexts(t,n,e,i){return this.ner.removeRuleOptionTexts(t,n,e,i)}addNerRegexRule(t,n,e){return this.ner.addRegexRule(t,n,e)}addNerBetweenCondition(t,n,e,i,s){return this.ner.addBetweenCondition(t,n,e,i,s)}addNerBetweenLastCondition(t,n,e,i,s){return this.ner.addBetweenLastCondition(t,n,e,i,s)}addNerPositionCondition(t,n,e,i,s){return this.ner.addPositionCondition(t,n,e,i,s)}addNerAfterCondition(t,n,e,i){return this.ner.addAfterCondition(t,n,e,i)}addNerAfterFirstCondition(t,n,e,i){return this.ner.addAfterFirstCondition(t,n,e,i)}addNerAfterLastCondition(t,n,e,i){return this.ner.addAfterLastCondition(t,n,e,i)}addNerBeforeCondition(t,n,e,i){return this.ner.addBeforeCondition(t,n,e,i)}addNerBeforeFirstCondition(t,n,e,i){return this.ner.addBeforeFirstCondition(t,n,e,i)}addNerBeforeLastCondition(t,n,e,i){return this.ner.addBeforeLastCondition(t,n,e,i)}assignDomain(t,n,e){return this.nluManager.assignDomain(t,n,e)}getIntentDomain(t,n){return this.nluManager.getIntentDomain(t,n)}getDomains(){return this.nluManager.getDomains()}addAction(t,n,e,i){return this.actionManager.addAction(t,n,e,i)}registerActionFunction(t,n){return this.actionManager.registerActionInMap(t,n)}getActions(t){return this.actionManager.findActions(t)}removeAction(t,n,e){return this.actionManager.removeAction(t,n,e)}removeActions(t){return this.actionManager.removeActions(t)}removeActionFunction(t){return this.actionManager.removeActionFromMap(t)}addAnswer(t,n,e,i){return this.nlgManager.add(t,n,e,i)}removeAnswer(t,n,e,i){return this.nlgManager.remove(t,n,e,i)}findAllAnswers(t,n){return this.nlgManager.findAllAnswers({locale:t,intent:n}).answers}async addCorpora(t){if(t)if(Array.isArray(t))for(let n=0;n<t.length;n+=1)await this.addCorpus(t[n]);else await this.addCorpus(t)}async addImported(t){let n;if(t.content)n=t.content;else{if(!t.filename)throw new Error("Corpus information without content or file name");{const e=this.container.get("fs");if(n=await e.readFile(t.filename),!n)throw new Error(`Corpus not found "${t.filename}"`)}}let e=this.container.get(t.importer);if(e||(e=this.container.get(`${t.importer}-importer`)),!e)throw new Error(`Corpus importer not found: ${t.importer}`);const i=e.transform(n,t);for(let t=0;t<i.length;t+=1)this.addCorpus(i[t])}addEntities(t,n){const e=Object.keys(t);for(let i=0;i<e.length;i+=1){const s=e[i];let r=t[s];"string"==typeof r&&(r={regex:[r]});let a=r.locale;if(a||(a=n||"en"),"string"==typeof a&&(a=a.slice(0,2)),r.options){const t=Object.keys(r.options);for(let n=0;n<t.length;n+=1)this.addNerRuleOptionTexts(a,s,t[n],r.options[t[n]])}if(r.regex)if(Array.isArray(r.regex))for(let t=0;t<r.regex.length;t+=1)this.addNerRegexRule(a,s,r.regex[t]);else"string"==typeof r.regex&&r.regex.trim()&&this.addNerRegexRule(a,s,r.regex);if(r.trim)for(let t=0;t<r.trim.length;t+=1)switch(r.trim[t].position){case"after":case"afterLast":case"afterFirst":case"before":case"beforeFirst":case"beforeLast":this.addNerPositionCondition(a,s,r.trim[t].position,r.trim[t].words,r.trim[t].opts);break;case"between":this.addNerBetweenCondition(a,s,r.trim[t].leftWords,r.trim[t].rightWords,r.trim[t].opts);break;case"betweenLast":this.addNerBetweenLastCondition(a,s,r.trim[t].leftWords,r.trim[t].rightWords,r.trim[t].opts)}}}addData(t,n,e){for(let i=0;i<t.length;i+=1){const s=t[i],{intent:r,utterances:a,answers:o,slotFilling:u,actions:l}=s;for(let t=0;t<a.length;t+=1)e&&this.assignDomain(n,r,e.name),this.addDocument(n,a[t],r);if(o)for(let t=0;t<o.length;t+=1){const e=o[t];"string"==typeof e?this.addAnswer(n,r,e):this.addAnswer(n,r,e.answer,e.opts)}if(u){const t=Object.keys(u);for(let e=0;e<t.length;e+=1){const i=u[t[e]];let s;const a={};"string"==typeof i?(a[n]=i,s=!0):(a[n]=i.question,s=i.mandatory||!1),this.slotManager.updateSlot(r,t[e],s,a)}}l&&l.forEach((t=>{if(t)if("object"==typeof t){if(!t.name)return;this.addAction(r,t.name,t.parameters||[])}else this.addAction(r,t,[])}))}}async addCorpus(t){if(t.importer)await this.addImported(t);else{let n=t;const e=this.container.get("fs");if("string"==typeof t){const i=await e.readFile(t);if(!i)throw new Error(`Corpus not found "${t}"`);n="string"==typeof i?JSON.parse(i):i}if(n.contextData){let{contextData:t}=n;"string"==typeof n.contextData&&(t=JSON.parse(await e.readFile(n.contextData)));const i=this.container.get("context-manager"),s=Object.keys(t);for(let n=0;n<s.length;n+=1)i.defaultData[s[n]]=t[s[n]]}if(n.domains){n.entities&&this.addEntities(n.entities);for(let t=0;t<n.domains.length;t+=1){const e=n.domains[t],{data:i,entities:s}=e,r=e.locale.slice(0,2);this.addLanguage(r),s&&this.addEntities(s,r),this.addData(i,r,e)}}else{const t=n.locale.slice(0,2);this.addLanguage(t);const{data:e,entities:i}=n;i&&this.addEntities(i,t),this.addData(e,t)}}}getSentiment(t,n){return"object"==typeof t?this.sentiment.process(t):(n||(n=t,t=this.guessLanguage(n)),this.sentiment.process({utterance:n,locale:t}))}describeLanguage(t,n){this.nluManager.describeLanguage(t,n)}async train(){this.nluManager.addLanguage(this.settings.languages);const t=await this.nluManager.train();return this.settings.autoSave&&await this.save(this.settings.modelFileName,!0),t}async classify(t,n,e){return this.nluManager.process(t,n,e||this.settings.nlu)}async extractEntities(t,n,e,i){return"object"==typeof t?this.ner.process(t):(n||(n=t,t=void 0),t||(t=this.guessLanguage(n)),await this.ner.process({locale:t,utterance:n,context:e,settings:this.applySettings(i,this.settings.ner)}))}organizeEntities(t){const n={};for(let e=0;e<t.length;e+=1){const i=t[e];n[i.entity]||(n[i.entity]=[]),n[i.entity].push(i)}const e=[];return Object.keys(n).forEach((t=>{const i=n[t];if(1===i.length)e.push(i[0]);else{for(let n=0;n<i.length;n+=1)i[n].alias=`${t}_${n}`;e.push({entity:t,isList:!0,items:i})}})),e}structureEntities(t){const n=this.organizeEntities(t.entities);t.context.entities||(t.context.entities={});for(let e=0;e<n.length;e+=1){const i=n[e];if(t.context.entities[i.entity]=i,i.alias&&(t.context[i.alias]=i.sourceText),i.isList)for(let n=0;n<i.items.length;n+=1)t.context[i.items[n].alias]=i.items[n].sourceText;else t.context[`${i.entity}_0`]=i.sourceText;t.context[i.entity]=i.isList?i.items[0].sourceText:i.sourceText}return t}async process(t,n,e,i){let s,r=e;"object"==typeof t&&("object"==typeof n&&n.value?(t=void 0,n=n.value):s=t),s?(t=s.locale,n=s.utterance||s.message||s.text):(n||(n=t,t=void 0),t||(t=this.guessLanguage(n)),s={locale:t,utterance:n,settings:i},i&&(i.activity&&!s.activity&&(s.activity=i.activity),i.conversationId&&!s.activity&&(s.activity={conversation:{id:i.conversationId}}))),r||(r=await this.contextManager.getContext(s)),r.channel=s.channel,r.app=s.app,r.from=s.from||null;const a={locale:t,utterance:n,context:r,settings:this.applySettings(i,this.settings.nlu)},o=a.settings&&"forceNER"in a.settings?a.settings.forceNER:this.forceNER;let u=await this.nluManager.process(a);if(o||!this.slotManager.isEmpty){const e=await this.ner.generateEntityUtterance(u.locale||t,n);if(e&&e!==n){const s={locale:u.locale||t,utterance:e,context:r,settings:this.applySettings(i,this.settings.nlu)},a=await this.nluManager.process(s);a&&(a.score>u.score||"None"===u.intent)&&(u=a,u.utterance=n,u.optionalUtterance=e)}}if(u.score<this.settings.threshold&&(u.score=1,u.intent="None"),u.context=r,o||!this.slotManager.isEmpty){const t=this.slotManager.getIntentEntityNames(u.intent);u=await this.ner.process({...u},t)}else u.entities=[],u.sourceEntities=[];const l=this.container.get(`stemmer-${u.locale}`);if(l&&l.lastFill&&l.lastFill(u),u=this.structureEntities(u),!o&&this.slotManager.isEmpty||(this.slotManager.process(u,r)&&(u=this.structureEntities(u)),r.slotFill=u.slotFill),this.settings.executeActionsBeforeAnswers&&(u=await this.actionManager.run({...u})),this.settings.executeActionsBeforeAnswers&&u.answer)u.answer=this.nlgManager.renderText(u.answer,r);else{const t=await this.nlgManager.run({...u});u.answers=t.answers,u.answer=t.answer}if(u.srcAnswer&&(u.answer=this.nlgManager.renderText(u.srcAnswer,r)),this.settings.executeActionsBeforeAnswers||(u=await this.actionManager.run({...u})),this.settings.calculateSentiment){const e=await this.getSentiment(t,n);u.sentiment=e?e.sentiment:void 0}await this.contextManager.setContext(s,r),delete u.context,delete u.settings;const c=s?this.applySettings(s,u):u;if("None"===c.intent&&!c.answer){const t=this.container.get("open-question");if(t){const n=await t.getAnswer(c.locale,c.utterance);n&&n.answer&&n.answer.length>0&&(c.answer=n.answer,c.isOpenQuestionAnswer=!0,c.openQuestionFirstCharacter=n.position,c.openQuestionScore=n.score)}}if(this.onIntent)await this.onIntent(this,c);else{const t=`onIntent(${c.intent})`,n=this.container.getPipeline(t);n&&await this.container.runPipeline(n,c,this)}return c}toJSON(){const t={settings:{...this.settings},nluManager:this.nluManager.toJSON(),ner:this.ner.toJSON(),nlgManager:this.nlgManager.toJSON(),actionManager:this.actionManager.toJSON(),slotManager:this.slotManager.save()};return delete t.settings.container,t}fromJSON(t){this.applySettings(this.settings,t.settings),this.nluManager.fromJSON(t.nluManager),this.ner.fromJSON(t.ner),this.nlgManager.fromJSON(t.nlgManager),this.actionManager.fromJSON(t.actionManager),this.slotManager.load(t.slotManager)}export(t=!1){const n=this.toJSON();return t?JSON.stringify(n):JSON.stringify(n,null,2)}import(t){const n="string"==typeof t?JSON.parse(t):t;this.fromJSON(n)}async save(t,n=!1){const e=this.container.get("fs"),i=t||"model.nlp";await e.writeFile(i,this.export(n))}async load(t){const n=this.container.get("fs"),e=t||"model.nlp",i=await n.readFile(e);return!!i&&(this.import(i),!0)}}},2507:(t,n,e)=>{const{Clonable:i,compareWildcars:s}=e(79),r="master_domain";t.exports=class extends i{constructor(t={},n){super({settings:{},container:t.container||n},n),this.applySettings(this.settings,t),this.applySettings(this.settings,{locale:"en"}),this.settings.tag||(this.settings.tag=`domain-manager-${this.settings.locale}`),this.registerDefault(),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag)),this.domains={},this.addDomain(r),this.stemDict={},this.intentDict={},this.sentences=[],this.applySettings(this,{pipelineTrain:this.getPipeline(`${this.settings.tag}-train`),pipelineProcess:this.getPipeline(`${this.settings.tag}-process`)})}registerDefault(){this.container.registerConfiguration("domain-manager-??",{nluByDomain:{default:{className:"NeuralNlu",settings:{}}},trainByDomain:!1,useStemDict:!0},!1),this.container.registerPipeline("domain-manager-??-train",[".trainStemmer",".generateCorpus",".fillStemDict",".innerTrain","output.status"],!1)}getDomainInstance(t){this.settings.nluByDomain||(this.settings.nluByDomain={});const n=this.settings.nluByDomain[t]||this.settings.nluByDomain.default||{className:"NeuralNlu",settings:{}};return this.container.get(n.className||"NeuralNlu",this.applySettings({locale:this.settings.locale},n.settings||{}))}addDomain(t){return this.domains[t]||(this.domains[t]=this.getDomainInstance(t)),this.domains[t]}removeDomain(t){delete this.domains[t]}async generateStemKey(t){let n;if("string"!=typeof t)n=t;else{const e=await this.prepare({utterance:t});n=await e.stems}return Array.isArray(n)||(n=Object.keys(n)),n.slice().sort().join()}add(t,n,e){e?this.sentences.push({domain:t,utterance:n,intent:e}):this.sentences.push({domain:r,utterance:t,intent:n})}getSentences(){return this.sentences}remove(t,n,e){const i=e?t:r,s=e?n:t,a=e||n;for(let t=0;t<this.sentences.length;t+=1){const n=this.sentences[t];if(n.domain===i&&n.utterance===s&&n.intent===a)return this.sentences.splice(t,1),!0}return!1}async trainStemmer(t){const n=t;this.cache||(this.cache={stem:this.container.get("stem")});for(let t=0;t<this.sentences.length;t+=1){const e={...this.sentences[t],...n};await this.cache.stem.addForTraining(e)}return await this.cache.stem.train(n),n}innerGenerateCorpus(t){this.intentDict={};const n={};n[r]=[];for(let e=0;e<this.sentences.length;e+=1){const i=this.sentences[e];this.intentDict[i.intent]=i.domain;const s=t||i.domain;n[s]||(n[s]=[]),n[s].push({utterance:i.utterance,intent:i.intent}),t||n[r].push({utterance:i.utterance,intent:i.domain})}return n}async generateCorpus(t){const n=t;return n.corpus=this.innerGenerateCorpus(this.settings.trainByDomain?void 0:r),n}async prepare(t){const n=t,e="string"==typeof n,i=e?n:n.utterance,s=this.addDomain(r).prepare(i);return e?s:(n.stems=s,n)}async fillStemDict(t){this.stemDict={};for(let t=0;t<this.sentences.length;t+=1){const{utterance:n,intent:e,domain:i}=this.sentences[t],s=await this.generateStemKey(n);s&&""!==s||this.container.get("logger").warn(`This utterance: "${n}" contains only stop words`),this.stemDict[s]={intent:e,domain:i}}return t}async innerTrain(t){const n=t,{corpus:e}=n,i=Object.keys(e),s={};for(let n=0;n<i.length;n+=1){const r=this.addDomain(i[n]),a={useNoneFeature:this.settings.useNoneFeature};t.settings&&void 0!==t.settings.log&&(a.log=t.settings.log);const o=await r.train(e[i[n]],a);s[i[n]]=o.status}return n.status=s,n}async train(t){const n={domainManager:this,settings:t||this.settings};return this.runPipeline(n,this.pipelineTrain)}matchAllowList(t,n){for(let e=0;e<n.length;e+=1)if(s(t,n[e]))return!0;return!1}async classifyByStemDict(t,n,e){const i=await this.generateStemKey(t),s=this.stemDict[i];if(s&&(!n||s.domain===n)){if(e&&!this.matchAllowList(s.intent,e))return;const t=[];t.push({intent:s.intent,score:1});const n=Object.keys(this.intentDict);for(let e=0;e<n.length;e+=1)n[e]!==s.intent&&t.push({intent:n[e],score:0});return{domain:s.domain,classifications:t}}}async innerClassify(t,n){const e=t;if(this.applySettings({...e.settings},this.settings).useStemDict){const i=await this.classifyByStemDict(e.utterance,n,t.settings?t.settings.allowList:void 0);if(i)return e.classification=i,e.explanation=[{token:"",stem:"##exact",weight:1}],e}if(n){const t=this.domains[n];if(!t)return e.classification={domain:"default",classifications:[{intent:"None",score:1}]},e;const i=await t.process(e.utterance,e.settings||this.settings);let s,a;return Array.isArray(i)?s=i:(s=i.classifications,e.nluAnswer=i),a=n===r?s&&s.length?this.intentDict[s[0].intent]:r:n,e.classification={domain:a,classifications:s},e}let i=r;if(void 0===e.settings.trainByDomain&&this.settings.trainByDomain||e.settings.trainByDomain){const t=this.domains[r];let n=await t.process(e.utterance);if(n.classifications&&(n=n.classifications),1===Object.keys(this.domains).length)return e.classification={domain:"default",classifications:n},e;if(i=n[0].intent,"None"===i)return e.classification={domain:"default",classifications:[{intent:"None",score:1}]},e}return this.innerClassify(e,i)}async defaultPipelineProcess(t){return(await this.innerClassify(t)).classification}async process(t,n){const e="string"==typeof t?{utterance:t,settings:n||this.settings}:t;return this.pipelineProcess?this.runPipeline(e,this.pipelineProcess):this.defaultPipelineProcess(e)}toJSON(){const t={settings:this.settings,stemDict:this.stemDict,intentDict:this.intentDict,sentences:this.sentences,domains:{}};delete t.settings.container;const n=Object.keys(this.domains);for(let e=0;e<n.length;e+=1)t.domains[n[e]]=this.domains[n[e]].toJSON();return t}fromJSON(t){this.applySettings(this.settings,t.settings),this.stemDict=t.stemDict,this.intentDict=t.intentDict,this.sentences=t.sentences;const n=Object.keys(t.domains);for(let e=0;e<n.length;e+=1)this.addDomain(n[e]).fromJSON(t.domains[n[e]])}}},6607:(t,n,e)=>{const i=e(9255),s=e(263),r=e(2507),a=e(3063);t.exports={Nlu:i,NluNeural:s,DomainManager:r,NluManager:a}},3063:(t,n,e)=>{const{Clonable:i}=e(79),{Language:s}=e(1994),r=e(2507);t.exports=class extends i{constructor(t={},n){super({settings:{},container:t.container||n},n),this.applySettings(this.settings,t),this.settings.tag||(this.settings.tag="nlu-manager"),this.registerDefault(),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag)),this.container.get("Language")||this.container.register("Language",s,!1),this.guesser=this.container.get("Language"),this.locales=[],this.languageNames={},this.domainManagers={},this.intentDomains={},this.settings.locales&&this.addLanguage(this.settings.locales),this.applySettings(this,{pipelineTrain:this.getPipeline(`${this.settings.tag}-train`),pipelineProcess:this.getPipeline(`${this.settings.tag}-process`)})}registerDefault(){this.container.registerConfiguration("nlu-manager",{},!1),this.container.registerPipeline("nlu-manager-train",[".innerTrain"],!1)}describeLanguage(t,n){this.languageNames[t]={locale:t,name:n}}addLanguage(t){if(t){const n=Array.isArray(t)?t:[t];for(let t=0;t<n.length;t+=1){const e=n[t].substr(0,2).toLowerCase();this.locales.includes(e)||this.locales.push(e),this.domainManagers[e]||(this.domainManagers[e]=new r({locale:e,...this.settings.domain,useNoneFeature:this.settings.useNoneFeature,trainByDomain:this.settings.trainByDomain},this.container))}}}removeLanguage(t){if(Array.isArray(t))t.forEach((t=>this.removeLanguage(t)));else{delete this.domainManagers[t];const n=this.locales.indexOf(t);-1!==n&&this.locales.splice(n,1)}}guessLanguage(t){const n=t,e="string"==typeof n;if(1===this.locales.length)return e?this.locales[0]:([n.locale]=this.locales,n);if(!n)return e?void 0:n;if(!e&&n.locale)return n;const i=e?n:n.utterance;if(1===this.locales.length){if(e)return this.locales[0];[n.locale]=this.locales}const s=this.guesser.guess(i,this.locales,1),r=s&&s.length>0?s[0].alpha2:void 0;return e?r:(n.locale=r,n)}assignDomain(t,n,e){const i=e?t.substr(0,2).toLowerCase():void 0,s=e?n:t,r=e||n;if(i)this.intentDomains[i]||(this.intentDomains[i]={}),this.intentDomains[i][s]=r;else for(let t=0;t<this.locales.length;t+=1)this.assignDomain(this.locales[t],s,r)}getIntentDomain(t,n){const e=t.substr(0,2).toLowerCase();return this.intentDomains[e]&&this.intentDomains[e][n]||"default"}getDomains(){const t={},n=Object.keys(this.intentDomains);for(let e=0;e<n.length;e+=1){const i=n[e];t[i]={};const s=Object.keys(this.intentDomains[i]);for(let n=0;n<s.length;n+=1){const e=s[n],r=this.intentDomains[i][e];t[i][r]||(t[i][r]=[]),t[i][r].push(e)}}return t}consolidateLocale(t,n){const e=t?t.substr(0,2).toLowerCase():this.guessLanguage(n);if(!e)throw new Error("Locale must be defined");return e}consolidateManager(t){const n=this.domainManagers[t];if(!n)throw new Error(`Domain Manager not found for locale ${t}`);return n}add(t,n,e){const i=this.consolidateLocale(t,n),s=this.consolidateManager(i),r=this.getIntentDomain(i,e);this.guesser.addExtraSentence(i,n),s.add(r,n,e)}remove(t,n,e){const i=this.consolidateLocale(t,n),s=this.consolidateManager(i),r=this.getIntentDomain(i,e);s.remove(r,n,e)}async innerTrain(t){let n=t.locales||this.locales;Array.isArray(n)||(n=[n]);const e=n.filter((t=>this.domainManagers[t])).map((n=>this.domainManagers[n].train(t.settings)));return Promise.all(e)}async train(t){const n={nluManager:this,settings:this.applySettings(t,this.settings)};return delete n.settings.tag,this.runPipeline(n,this.pipelineTrain)}fillLanguage(t){const n=t;return n.languageGuessed=!1,n.locale||(n.locale=this.guessLanguage(n.utterance),n.languageGuessed=!0),n.locale&&(n.localeIso2=n.locale.substr(0,2).toLowerCase(),n.language=(this.languageNames[n.localeIso2]||this.guesser.languagesAlpha2[n.localeIso2]||{}).name),n}classificationsIsNone(t){return 1!==t.length&&(0===t.length||0===t[0].score||t[0].score===t[1].score)}checkIfIsNone(t){const n=t;return this.classificationsIsNone(n.classifications)&&(n.intent="None",n.score=1),n}async innerClassify(t){const n=t,e=this.domainManagers[n.localeIso2];if(!e)return n.classifications=[],n.domain=void 0,n.intent=void 0,n.score=void 0,n;const i=await e.process(t);return n.classifications=i.classifications.sort(((t,n)=>n.score-t.score)),0===n.classifications.length&&n.classifications.push({intent:"None",score:1}),n.intent=n.classifications[0].intent,n.score=n.classifications[0].score,"None"===n.intent?i.domain="default":"default"===i.domain?n.domain=this.getIntentDomain(n.locale,n.intent):n.domain=i.domain,n}async defaultPipelineProcess(t){let n=await this.fillLanguage(t);return n=await this.innerClassify(n),n=await this.checkIfIsNone(n),delete n.settings,delete n.classification,n}process(t,n,e,i){const s="object"==typeof t?t:{locale:void 0===n?void 0:t,utterance:void 0===n?t:n,domain:e,settings:i||this.settings};return this.pipelineProcess?this.runPipeline(s,this.pipelineProcess):this.defaultPipelineProcess(s)}toJSON(){const t={settings:this.settings,locales:this.locales,languageNames:this.languageNames,domainManagers:{},intentDomains:this.intentDomains,extraSentences:this.guesser.extraSentences.slice(0)};delete t.settings.container;const n=Object.keys(this.domainManagers);for(let e=0;e<n.length;e+=1){const i=n[e];t.domainManagers[i]=this.domainManagers[i].toJSON()}return t}fromJSON(t){this.applySettings(this.settings,t.settings);for(let n=0;n<t.locales.length;n+=1)this.addLanguage(t.locales[n]);this.languageNames=t.languageNames,this.intentDomains=t.intentDomains;const n=Object.keys(t.domainManagers);for(let e=0;e<n.length;e+=1){const i=n[e];this.domainManagers[i].fromJSON(t.domainManagers[i])}for(let n=0;n<t.extraSentences.length;n+=1){const e=t.extraSentences[n];this.guesser.addExtraSentence(e[0],e[1])}}}},263:(t,n,e)=>{const{NeuralNetwork:i}=e(165),s=e(9255);class r extends s{async innerTrain(t){const n=t;return this.neuralNetwork=new i(n.settings,this.container),n.status=await this.neuralNetwork.train(n.corpus),n}innerProcess(t){const n=t;n.classifications=this.neuralNetwork&&this.neuralNetwork.run(n.tokens)||{None:1},this.convertToArray(n);const{intent:e}=n.classifications[0];return n.settings&&n.settings.returnExplanation&&e&&this.neuralNetwork&&"None"!==e&&(n.explanation=this.neuralNetwork.explain(n.tokens,e)),n}registerDefault(){super.registerDefault(),this.container.register("NeuralNlu",r,!1)}toJSON(){const t=super.toJSON();return t.neuralNetwork=this.neuralNetwork?this.neuralNetwork.toJSON():void 0,t}fromJSON(t){super.fromJSON(t),t.neuralNetwork&&(this.neuralNetwork=new i,this.neuralNetwork.fromJSON(t.neuralNetwork))}}t.exports=r},9255:(t,n,e)=>{const{Clonable:i,compareWildcars:s}=e(79),{SpellCheck:r}=e(6964);t.exports=class extends i{constructor(t={},n){super({settings:{},container:t.container||n},n),this.applySettings(this.settings,t),this.applySettings(this.settings,{locale:"en"}),this.settings.tag||(this.settings.tag=`nlu-${this.settings.locale}`),this.registerDefault(),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag)),this.applySettings(this,{pipelinePrepare:this.getPipeline(`${this.settings.tag}-prepare`),pipelineTrain:this.getPipeline(`${this.settings.tag}-train`),pipelineProcess:this.getPipeline(`${this.settings.tag}-process`)}),this.spellCheck=new r(this.settings)}registerDefault(){this.container.registerConfiguration("nlu-??",{keepStopwords:!0,nonefeatureValue:1,nonedeltaMultiplier:1.2,spellCheck:!1,spellCheckDistance:1,filterZeros:!0,log:!0},!1),this.container.registerPipeline("nlu-??-train",[".prepareCorpus",".addNoneFeature",".innerTrain"],!1)}async defaultPipelinePrepare(t){let n;if(this.cache){const t=new Date;Math.abs(t.getTime()-this.cache.created)/36e5>1&&(this.cache.results={},this.cache.created=(new Date).getTime())}if(this.cache){if(this.cache.results[t.settings.locale]&&(n=this.cache.results[t.settings.locale][t.text||t.utterance],n))return n}else this.cache={created:(new Date).getTime(),results:{},normalize:this.container.get("normalize"),tokenize:this.container.get("tokenize"),removeStopwords:this.container.get("removeStopwords"),stem:this.container.get("stem"),arrToObj:this.container.get("arrToObj")};let e=t;return e=this.cache.normalize.run(e),e=await this.cache.tokenize.run(e),e=this.cache.removeStopwords.run(e),e=await this.cache.stem.run(e),e=this.cache.arrToObj.run(e),n=e.tokens,this.cache.results[t.settings.locale]||(this.cache.results[t.settings.locale]={}),this.cache.results[t.settings.locale][t.text||t.utterance]=n,n}async defaultPipelineProcess(t){let n=await this.prepare(t);return n=await this.doSpellCheck(n),n=await this.textToFeatures(n),n=await this.innerProcess(n),n=await this.filterNonActivated(n),n=await this.normalizeClassifications(n),n}async prepare(t,n){const e=n||this.settings;if("string"==typeof t){const n={locale:this.settings.locale,text:t,settings:e};return this.pipelinePrepare?this.runPipeline(n,this.pipelinePrepare):this.defaultPipelinePrepare(n)}if("object"==typeof t){if(Array.isArray(t)){const n=[];for(let i=0;i<t.length;i+=1)n.push(await this.prepare(t[i],e));return n}let n=e.fieldNameSrc?t[e.fieldNameSrc]:t.texts||t.utterances;if(n||"string"==typeof n||("string"==typeof t.text?n=t.text:"string"==typeof t.utterance&&(n=t.utterance)),n||"string"==typeof n){const i=await this.prepare(n,e);return{[e.fieldNameTgt||"tokens"]:i,...t}}}throw new Error(`Error at nlu.prepare: expected a text but received ${t}`)}async doSpellCheck(t,n){const e=this.applySettings(n||{},this.settings);let i=void 0===t.settings.spellCheck?void 0:t.settings.spellCheck,s=void 0===t.settings.spellCheckDistance?void 0:t.settings.spellCheckDistance;if(void 0===i&&(i=void 0===e.spellCheck?void 0:e.spellCheck),void 0===s&&(s=void 0===e.spellCheckDistance?1:e.spellCheckDistance),i){const n=this.spellCheck.check(t.tokens,s);t.tokens=n}return t}async prepareCorpus(t){this.features={},this.intents={},this.intentFeatures={};const n=t,{corpus:e}=n,i=[];for(let t=0;t<e.length;t+=1){const{intent:s}=e[t],r={input:await this.prepare(e[t].utterance,n.settings),output:{[s]:1}},a=Object.keys(r.input);Object.prototype.hasOwnProperty.call(this.intentFeatures,s)||(this.intentFeatures[s]={});for(let t=0;t<a.length;t+=1)this.features[a[t]]=1,this.intentFeatures[s][a[t]]=1;this.intents[s]=1,i.push(r)}const s=Object.keys(this.intentFeatures);this.featuresToIntent={};for(let t=0;t<s.length;t+=1){const n=s[t],e=Object.keys(this.intentFeatures[n]);for(let t=0;t<e.length;t+=1){const i=e[t];Object.prototype.hasOwnProperty.call(this.featuresToIntent,i)||(this.featuresToIntent[i]=[]),this.featuresToIntent[i].push(n)}}return this.spellCheck.setFeatures(this.features),this.numFeatures=Object.keys(this.features).length,this.numIntents=Object.keys(this.intents).length,n.corpus=i,n}addNoneFeature(t){const{corpus:n}=t;return t.settings&&t.settings.useNoneFeature&&n.push({input:{nonefeature:1},output:{None:1}}),t}convertToArray(t){const n=t,{classifications:e}=n;if(e){this.intentsArr||(this.intents?(this.intentsArr=Object.keys(this.intents),this.intents.None||this.intentsArr.push("None")):this.intentsArr=Object.keys(e));const t=this.intentsArr,i=[];for(let s=0;s<t.length;s+=1){const r=t[s],a=e[r];void 0!==a&&(a>0||!n.settings.filterZeros)&&i.push({intent:r,score:a})}i.length||i.push({intent:"None",score:1}),n.classifications=i.sort(((t,n)=>n.score-t.score))}return n}someSimilar(t,n){for(let e=0;e<n.length;e+=1)if(t[n[e]])return!0;return!1}matchAllowList(t,n){for(let e=0;e<n.length;e+=1)if(s(t,n[e]))return!0;return!1}intentIsActivated(t,n,e){if(e){if(Array.isArray(e))return this.matchAllowList(t,e);if(!e[t])return!1}const i=this.intentFeatures[t];if(!i)return!1;const s=Object.keys(n);for(let t=0;t<s.length;t+=1)if(i[s[t]])return!0;return!1}filterNonActivated(t){if(this.intentFeatures&&t.classifications){const n=t.classifications.map((t=>t.intent));let e=!1;for(let i=0;i<n.length;i+=1){const s=n[i];"None"!==s&&(this.intentIsActivated(s,t.tokens,t.settings.allowList)||(t.classifications[i].score=0,e=!0))}e&&t.classifications.sort(((t,n)=>n.score-t.score))}return t}normalizeClassifications(t){const n=t,{classifications:e}=n;if(e){let t=0;for(let n=0;n<e.length;n+=1)e[n].score**=2,t+=e[n].score;if(t>0)for(let n=0;n<e.length;n+=1)e[n].score/=t}else n.classifications=n.nluAnswer;return n}textToFeatures(t){const n=t,{tokens:e}=n,i=Object.keys(e);let s=0;const r={};for(let t=0;t<i.length;t+=1){const n=i[t];"nonefeature"===n?e[n]=this.nonefeatureValue:this.features&&this.features[n]?r[n]=e[n]:s+=1}let a=void 0===n.settings.nonedeltaValue?this.numIntents/this.numFeatures:this.settings.nonedeltaValue,o=0;for(let t=0;t<s;t+=1)o+=a,a*=this.settings.nonedeltaMultiplier;return n.settings&&n.settings.useNoneFeature&&o&&(r.nonefeature=o),n.tokens=r,n}async innerTrain(){throw new Error("This method should be implemented by child classes")}async train(t,n){const e={corpus:t,settings:this.applySettings(n,this.settings)};return this.runPipeline(e,this.pipelineTrain)}async getExplanation(t,n){if(!n)return;const e=await this.container.get("normalize").run(t),i=await this.container.get("tokenize").run(e),{tokens:s}=i,r=(await this.container.get("stem").run(i)).tokens,a=[];a.push({token:"",stem:"##bias",weight:n.bias});for(let t=0;t<s.length;t+=1){const e=r[t];a.push({token:s[t],stem:e,weight:n.weights[e]})}return a}async process(t,n){const e={text:t,settings:this.applySettings(n||{},this.settings)};let i;if(i=this.pipelineProcess?await this.runPipeline(e,this.pipelineProcess):await this.defaultPipelineProcess(e),Array.isArray(i.classifications)){const t=e.settings.returnExplanation?await this.getExplanation(e,i.explanation):void 0;return{classifications:i.classifications,entities:void 0,explanation:t}}return i.intents&&(i.classifications=i.intents,delete i.intents),i}toJSON(){const t={settings:{...this.settings},features:this.features,intents:this.intents,intentFeatures:this.intentFeatures,featuresToIntent:this.featuresToIntent};return delete t.settings.container,t}fromJSON(t){this.applySettings(this.settings,t.settings),this.features=t.features||{},this.intents=t.intents||{},this.intentsArr=Object.keys(t.intents),this.featuresToIntent=t.featuresToIntent||{},this.intentFeatures=t.intentFeatures||{},this.spellCheck.setFeatures(this.features),this.numFeatures=Object.keys(this.features).length,this.numIntents=Object.keys(this.intents).length}}},6465:(t,n,e)=>{const i=e(2824);t.exports={SentimentAnalyzer:i}},2824:(t,n,e)=>{const{Clonable:i}=e(79);t.exports=class extends i{constructor(t={},n){super({settings:{},container:t.container||n},n),this.applySettings(this.settings,t),this.settings.tag||(this.settings.tag="sentiment-analyzer"),this.registerDefault(),this.applySettings(this.settings,this.container.getConfiguration(this.settings.tag)),this.applySettings(this,{pipelinePrepare:this.getPipeline(`${this.settings.tag}-prepare`),pipelineProcess:this.getPipeline(`${this.settings.tag}-process`)})}registerDefault(){this.container.registerConfiguration("sentiment-analyzer",{},!1)}prepare(t,n,e,i){const s=this.getPipeline(`${this.settings.tag}-prepare`);if(s){const i={text:n,locale:t,settings:e||this.settings};return this.runPipeline(i,s)}if(i){const e=this.container.get(`stemmer-${t}`)||this.container.get("stemmer-en");if(e)return e.tokenizeAndStem(n)}const r=this.container.get(`tokenizer-${t}`)||this.container.get("tokenizer-en");return r?r.tokenize(n,!0):n.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase().split(/[\s,.!?;:([\]'"¡¿)/]+/).filter((t=>t))}async getDictionary(t){const n=t,e=this.container.get(`sentiment-${n.locale}`);let i;return e&&(e.senticon?i="senticon":e.pattern?i="pattern":e.afinn&&(i="afinn")),i?(n.sentimentDictionary={type:i,dictionary:e[i],negations:e.negations.words,stemmed:void 0!==e.stemmed&&e.stemmed},n):(n.sentimentDictionary={type:i,dictionary:void 0,negations:[],stemmed:!1},n)}async getTokens(t){const n=t;return!n.tokens&&n.sentimentDictionary.type&&(n.tokens=await this.prepare(n.locale,n.utterance||n.text,n.settings,n.sentimentDictionary.stemmed)),n}calculate(t){const n=t;if(n.sentimentDictionary.type){const t=Array.isArray(n.tokens)?n.tokens:Object.keys(n.tokens);if(n.sentimentDictionary.dictionary){const{dictionary:e}=n.sentimentDictionary,{negations:i}=n.sentimentDictionary;let s=0,r=1,a=0;for(let n=0;n<t.length;n+=1){const o=t[n].toLowerCase();-1!==i.indexOf(o)?(r=-1,a+=1):void 0!==e[o]&&(s+=r*e[o],a+=1)}n.sentiment={score:s,numWords:t.length,numHits:a,average:s/t.length,type:n.sentimentDictionary.type,locale:n.locale}}else n.sentiment={score:0,numWords:t.length,numHits:0,average:0,type:n.sentimentDictionary.type,locale:n.locale}}else n.sentiment={score:0,numWords:0,numHits:0,average:0,type:n.sentimentDictionary.type,locale:n.locale};return n.sentiment.score>0?n.sentiment.vote="positive":n.sentiment.score<0?n.sentiment.vote="negative":n.sentiment.vote="neutral",n}async defaultPipelineProcess(t){let n=await this.getDictionary(t);return n=await this.getTokens(n),n=await this.calculate(n),delete n.sentimentDictionary,n}process(t,n){const e=t;return e.settings=e.settings||n||this.settings,this.pipelineProcess?this.runPipeline(e,this.pipelineProcess):this.defaultPipelineProcess(e)}}},9393:t=>{t.exports=class{constructor(t){this.container=t}getTokens(t,n="en"){if("string"==typeof t){const e=this.container&&this.container.get(`tokenizer-${n}`);return e?e.tokenize(t,!0):t.split(" ")}return t}termFreqMap(t,n){const e=this.getTokens(t,n),i={};return e.forEach((t=>{i[t]=(i[t]||0)+1})),i}addKeysToDict(t,n){Object.keys(t).forEach((t=>{n[t]=!0}))}termFreqMapToVector(t,n){const e=[];return Object.keys(n).forEach((n=>{e.push(t[n]||0)})),e}vecDotProduct(t,n){let e=0;for(let i=0;i<t.length;i+=1)e+=t[i]*n[i];return e}vecMagnitude(t){let n=0;for(let e=0;e<t.length;e+=1)n+=t[e]*t[e];return Math.sqrt(n)}cosineSimilarity(t,n){return this.vecDotProduct(t,n)/(this.vecMagnitude(t)*this.vecMagnitude(n))}getTermFreqVectors(t,n,e){const i=this.termFreqMap(t,e),s=this.termFreqMap(n,e);if(!Object.keys(i).length||!Object.keys(s).length)return 0;const r={};return this.addKeysToDict(i,r),this.addKeysToDict(s,r),[this.termFreqMapToVector(i,r),this.termFreqMapToVector(s,r)]}similarity(t,n,e){if(t===n)return 1;const[i,s]=this.getTermFreqVectors(t,n,e);return this.cosineSimilarity(i,s)}}},6964:(t,n,e)=>{const i=e(7401),s=e(3230),r=e(9393),a=e(9602);t.exports={leven:i,CosineSimilarity:r,similarity:s,SpellCheck:a}},7401:t=>{const n=[],e=[];t.exports=function(t,i){t.length>i.length&&([t,i]=[i,t]);let s=t.length-1,r=i.length-1;for(;s>0&&t.charCodeAt(s)===i.charCodeAt(r);)s-=1,r-=1;s+=1,r+=1;let a,o,u,l,c=0;for(;c<s&&t.charCodeAt(c)===i.charCodeAt(c);)c+=1;if(s-=c,r-=c,0===s)return r;for(let i=0;i<s;i+=1)e[i]=t.charCodeAt(c+i),n[i]=i+1;let h=0;for(;h<r;){a=i.charCodeAt(c+h),u=h,h+=1,o=h;for(let t=0;t<s;t+=1)l=u+(a!==e[t])|0,u=n[t],n[t]=u>o?l>o?o+1:l:l>u?u+1:l,o=n[t]}return o}},3230:(t,n,e)=>{const i=e(7401);t.exports=function(t,n,e=!1){return e&&(t=t.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase(),n=n.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase()),t===n?0:i(t,n)}},9602:(t,n,e)=>{const i=e(3230);t.exports=class{constructor(t){this.settings=t||{},this.minLength=this.settings.minLength||4,this.settings.features?this.setFeatures(this.settings.features):(this.features={},this.featuresByLength={})}setFeatures(t){this.features=t,this.featuresByLength={},this.featuresList=Object.keys(this.features);for(let t=0;t<this.featuresList.length;t+=1){const n=this.featuresList[t],{length:e}=n;this.featuresByLength[e]||(this.featuresByLength[e]=[]),this.featuresByLength[e].push(n)}}checkToken(t,n){if(this.features[t])return t;if(t.length<this.minLength)return t;let e,s=1/0;for(let r=t.length-n-1;r<t.length+n;r+=1){const a=this.featuresByLength[r+1];if(a)for(let r=0;r<a.length;r+=1){const o=a[r],u=i(t,o);if(u<=n)if(u<s)e=o,s=u;else if(u===s&&e){const n=Math.abs(e.length-t.length),i=Math.abs(o.length-t.length);(n>i||n===i&&this.features[o]>this.features[e])&&(e=o,s=u)}}}return e||t}check(t,n=1){if(!Array.isArray(t)){const e=Object.keys(t),i=this.check(e,n),s={};for(let n=0;n<i.length;n+=1)s[i[n]]=t[e[n]];return s}const e=[];for(let i=0;i<t.length;i+=1)e.push(this.checkToken(t[i],n));return e}}},213:(t,n,e)=>{const i=e(4903);t.exports={SlotManager:i}},4903:t=>{t.exports=class{constructor(){this.intents={},this.isEmpty=!0}getSlot(t,n){if(this.intents[t])return this.intents[t][n]}existsSlot(t,n){return void 0!==this.getSlot(t,n)}addSlot(t,n,e=!1,i){return this.isEmpty=!1,this.intents[t]||(this.intents[t]={}),this.intents[t][n]={intent:t,entity:n,mandatory:e,locales:i||{}},this.intents[t][n]}updateSlot(t,n,e,i){if(!this.intents[t]||!this.intents[t][n])return this.addSlot(t,n,e,i);const s=this.intents[t][n];return void 0!==e&&(s.mandatory=e),s.locales=Object.assign(s.locales,i),this.intents[t][n]}removeSlot(t,n){this.intents[t]&&delete this.intents[t][n]}addBatch(t,n){const e=[];return n&&n.length>0&&n.forEach((n=>{let i=this.getSlot(t,n);i||(i=this.addSlot(t,n)),e.push(i)})),e}getIntentEntityNames(t){if(this.intents[t])return Object.keys(this.intents[t])}hasIntentEntities(t){return this.getIntentEntityNames(t).length>0}clear(){this.intents={}}load(t){this.intents=t||{},this.isEmpty=0===Object.keys(this.intents).length}save(){return this.intents}getMandatorySlots(t){const n={},e=this.intents[t];if(e){const t=Object.keys(e);for(let i=0,s=t.length;i<s;i+=1){const s=e[t[i]];s.mandatory&&(n[s.entity]=s)}}return n}cleanContextEntities(t,n){const e=n;if(e.slotFill)return;const i=this.getMandatorySlots(t),s=Object.keys(i);0!==s.length&&s.forEach((t=>{delete e[t]}))}generateEntityAliases(t){const n=[],e={};for(let i=0;i<t.length;i+=1){const s=t[i];e[s.entity]||(e[s.entity]=[]),n[i]=`${s.entity}_${e[s.entity].length}`,e[s.entity].push(!0)}return n}process(t,n){const e=t,i=n;if(this.cleanContextEntities(e.intent,i),i.slotFill&&(e.intent=i.slotFill.intent,e.answer=i.slotFill.answer,e.srcAnswer=i.slotFill.srcAnswer),!e.intent||"None"===e.intent)return!1;i.slotFill&&i.slotFill.intent===e.intent&&(e.entities=[...i.slotFill.entities,...e.entities]);const s=this.getMandatorySlots(e.intent);let r=Object.keys(s);if(0===r.length)return!1;const a=this.generateEntityAliases(e.entities);for(let t=0,n=e.entities.length;t<n;t+=1)delete s[e.entities[t].entity],delete s[a[t]];if(i.slotFill&&s[i.slotFill.currentSlot]&&(e.entities.push({entity:i.slotFill.currentSlot,utteranceText:e.utterance,sourceText:e.utterance,accuracy:.95,start:0,end:e.utterance.length-1,len:e.utterance.length,isSlotFillingFallback:!0}),delete s[i.slotFill.currentSlot]),r=Object.keys(s),i.slotFill&&i.slotFill.currentSlot&&(i.slotFill.latestSlot=i.slotFill.currentSlot),!r||0===r.length)return delete e.srcAnswer,!0;i.slotFill&&i.slotFill.intent===e.intent&&(e.localeIso2=i.slotFill.localeIso2),e.slotFill={localeIso2:e.localeIso2,intent:e.intent,entities:e.entities,answer:e.answer,srcAnswer:e.srcAnswer},i.slotFill&&i.slotFill.latestSlot&&(e.slotFill.latestSlot=i.slotFill.latestSlot);const o=s[r[0]];return e.slotFill.currentSlot=o.entity,e.srcAnswer=o.locales[e.localeIso2],i.slotFill=e.slotFill,!0}}},1250:t=>{"use strict";t.exports=JSON.parse('{"Latin":{"spa":"","eng":"","por":"","ind":"","fra":"","deu":"","ita":"","tur":"","nld":"","tgl":"","hun":"","ces":"","swe":"","fin":"","dan":"","cat":"","glg":"","slv":""},"Cyrillic":{"rus":"","ukr":""},"Arabic":{"arb":"","fas":""},"Devanagari":{"hin":""},"Ethiopic":{},"Hebrew":{}}')},6102:t=>{"use strict";t.exports=JSON.parse('[["ar","arb","Arabic"],["bn","ben","Bengali"],["ca","cat","Catalan"],["cs","ces","Czech"],["da","dan","Danish"],["de","deu","German"],["el","ell","Greek"],["en","eng","English"],["eu","eus","Basque"],["fa","fas","Persian"],["fi","fin","Finnish"],["fr","fra","French"],["ga","gle","Irish"],["gl","glg","Galician"],["hi","hin","Hindi"],["hu","hun","Hungarian"],["hy","hye","Armenian"],["id","ind","Indonesian"],["it","ita","Italian"],["ja","jpn","Japanese"],["ko","kor","Korean"],["lt","lit","Lithuanian"],["ne","nep","Nepali"],["nl","nld","Dutch"],["no","nor","Norwegian"],["pl","pol","Polish"],["pt","por","Portuguese"],["ro","ron","Romanian"],["ru","rus","Russian"],["sr","srp","Serbian"],["sl","slv","Slovenian"],["es","spa","Spanish"],["sv","swe","Swedish"],["ta","tam","Tamil"],["tl","tgl","Tagalog"],["th","tha","Thai"],["tr","tur","Turkish"],["uk","ukr","Ukrainian"],["zh","cmn","Chinese"]]')}},n={};function e(i){var s=n[i];if(void 0!==s)return s.exports;var r=n[i]={exports:{}};return t[i](r,r.exports,e),r.exports}(()=>{function t(n){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(n)}function n(){"use strict";n=function(){return i};var e,i={},s=Object.prototype,r=s.hasOwnProperty,a=Object.defineProperty||function(t,n,e){t[n]=e.value},o="function"==typeof Symbol?Symbol:{},u=o.iterator||"@@iterator",l=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag";function h(t,n,e){return Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}),t[n]}try{h({},"")}catch(e){h=function(t,n,e){return t[n]=e}}function g(t,n,e,i){var s=n&&n.prototype instanceof b?n:b,r=Object.create(s.prototype),o=new j(i||[]);return a(r,"_invoke",{value:S(t,e,o)}),r}function d(t,n,e){try{return{type:"normal",arg:t.call(n,e)}}catch(t){return{type:"throw",arg:t}}}i.wrap=g;var f="suspendedStart",p="suspendedYield",m="executing",y="completed",w={};function b(){}function k(){}function v(){}var x={};h(x,u,(function(){return this}));var D=Object.getPrototypeOf,A=D&&D(D(O([])));A&&A!==s&&r.call(A,u)&&(x=A);var F=v.prototype=b.prototype=Object.create(x);function E(t){["next","throw","return"].forEach((function(n){h(t,n,(function(t){return this._invoke(n,t)}))}))}function C(n,e){function i(s,a,o,u){var l=d(n[s],n,a);if("throw"!==l.type){var c=l.arg,h=c.value;return h&&"object"==t(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,o,u)}),(function(t){i("throw",t,o,u)})):e.resolve(h).then((function(t){c.value=t,o(c)}),(function(t){return i("throw",t,o,u)}))}u(l.arg)}var s;a(this,"_invoke",{value:function(t,n){function r(){return new e((function(e,s){i(t,n,e,s)}))}return s=s?s.then(r,r):r()}})}function S(t,n,i){var s=f;return function(r,a){if(s===m)throw new Error("Generator is already running");if(s===y){if("throw"===r)throw a;return{value:e,done:!0}}for(i.method=r,i.arg=a;;){var o=i.delegate;if(o){var u=_(o,i);if(u){if(u===w)continue;return u}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(s===f)throw s=y,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);s=m;var l=d(t,n,i);if("normal"===l.type){if(s=i.done?y:p,l.arg===w)continue;return{value:l.arg,done:i.done}}"throw"===l.type&&(s=y,i.method="throw",i.arg=l.arg)}}}function _(t,n){var i=n.method,s=t.iterator[i];if(s===e)return n.delegate=null,"throw"===i&&t.iterator.return&&(n.method="return",n.arg=e,_(t,n),"throw"===n.method)||"return"!==i&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+i+"' method")),w;var r=d(s,t.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,w;var a=r.arg;return a?a.done?(n[t.resultName]=a.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,w):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,w)}function B(t){var n={tryLoc:t[0]};1 in t&&(n.catchLoc=t[1]),2 in t&&(n.finallyLoc=t[2],n.afterLoc=t[3]),this.tryEntries.push(n)}function N(t){var n=t.completion||{};n.type="normal",delete n.arg,t.completion=n}function j(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(B,this),this.reset(!0)}function O(n){if(n||""===n){var i=n[u];if(i)return i.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var s=-1,a=function t(){for(;++s<n.length;)if(r.call(n,s))return t.value=n[s],t.done=!1,t;return t.value=e,t.done=!0,t};return a.next=a}}throw new TypeError(t(n)+" is not iterable")}return k.prototype=v,a(F,"constructor",{value:v,configurable:!0}),a(v,"constructor",{value:k,configurable:!0}),k.displayName=h(v,c,"GeneratorFunction"),i.isGeneratorFunction=function(t){var n="function"==typeof t&&t.constructor;return!!n&&(n===k||"GeneratorFunction"===(n.displayName||n.name))},i.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,v):(t.__proto__=v,h(t,c,"GeneratorFunction")),t.prototype=Object.create(F),t},i.awrap=function(t){return{__await:t}},E(C.prototype),h(C.prototype,l,(function(){return this})),i.AsyncIterator=C,i.async=function(t,n,e,s,r){void 0===r&&(r=Promise);var a=new C(g(t,n,e,s),r);return i.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},E(F),h(F,c,"Generator"),h(F,u,(function(){return this})),h(F,"toString",(function(){return"[object Generator]"})),i.keys=function(t){var n=Object(t),e=[];for(var i in n)e.push(i);return e.reverse(),function t(){for(;e.length;){var i=e.pop();if(i in n)return t.value=i,t.done=!1,t}return t.done=!0,t}},i.values=O,j.prototype={constructor:j,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(N),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function i(i,s){return o.type="throw",o.arg=t,n.next=i,s&&(n.method="next",n.arg=e),!!s}for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s],o=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var u=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(u&&l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(t,n){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var s=i;break}}s&&("break"===t||"continue"===t)&&s.tryLoc<=n&&n<=s.finallyLoc&&(s=null);var a=s?s.completion:{};return a.type=t,a.arg=n,s?(this.method="next",this.next=s.finallyLoc,w):this.complete(a)},complete:function(t,n){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&n&&(this.next=n),w},finish:function(t){for(var n=this.tryEntries.length-1;n>=0;--n){var e=this.tryEntries[n];if(e.finallyLoc===t)return this.complete(e.completion,e.afterLoc),N(e),w}},catch:function(t){for(var n=this.tryEntries.length-1;n>=0;--n){var e=this.tryEntries[n];if(e.tryLoc===t){var i=e.completion;if("throw"===i.type){var s=i.arg;N(e)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,i){return this.delegate={iterator:O(t),resultName:n,nextLoc:i},"next"===this.method&&(this.arg=e),w}},i}function i(t,n,e,i,s,r,a){try{var o=t[r](a),u=o.value}catch(t){return void e(t)}o.done?n(u):Promise.resolve(u).then(i,s)}function s(t){return function(){var n=this,e=arguments;return new Promise((function(s,r){var a=t.apply(n,e);function o(t){i(a,s,r,o,u,"next",t)}function u(t){i(a,s,r,o,u,"throw",t)}o(void 0)}))}}var r=new(0,e(7758).FabilabNlp),a=["who are you?","what do you research?","where are you?","what do you teach?","how do I join?","what code do you write?","what's new?","are you in Sydney?","show me the blog","where are your slides?","what are you into?","who are the lab members?"],o=function(t){var n;switch(t){case"None":case"research":n="/";break;case"like":return void(document.getElementById("chatbotText").value="😊");case"dislike":return void(document.getElementById("chatbotText").value="😔");case"github":n="https://github.com/fabilab/";break;case"scholar":n="https://scholar.google.com/citations?user=XMDw5-4AAAAJ";break;default:n="/pages/"+t+".html"}window.location.href=n},u=function(){var t=s(n().mark((function t(e){var i;return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,chatbot.ask(e);case 2:return i=t.sent,t.abrupt("return",o(i.intent));case 4:case"end":return t.stop()}}),t)})));return function(n){return t.apply(this,arguments)}}();s(n().mark((function t(){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,r.initialise();case 2:window.chatbot=r,window.chatbot.askAndRedirect=u,window.onload=function(){var t,n,e=a[(t=0,n=a.length-1,t=Math.ceil(t),n=Math.floor(n),Math.floor(Math.random()*(n-t+1))+t)];document.getElementById("chatbotText").value=e,document.getElementById("chatbotForm").onsubmit=function(){var t=this.getElementsByTagName("input")[0].value;return window.chatbot.askAndRedirect(t),!1}};case 5:case"end":return t.stop()}}),t)})))()})()})();